// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Radix2wDPM_point_double (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V_read,
        y_V_read,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [165:0] x_V_read;
input  [162:0] y_V_read;
output  [165:0] ap_return_0;
output  [165:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[165:0] ap_return_0;
reg[165:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [165:0] reg_127;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
reg   [165:0] v_V_2_load_reg_472;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_fu_203_p3;
reg   [0:0] tmp_reg_477;
wire    ap_CS_fsm_state5;
wire  signed [16:0] j_2_fu_217_p3;
reg  signed [16:0] j_2_reg_485;
reg   [0:0] tmp_20_reg_491;
reg   [165:0] g_V_load_reg_497;
wire   [165:0] select_ln1691_fu_292_p3;
reg   [165:0] select_ln1691_reg_502;
wire   [165:0] r_2_fu_299_p3;
reg   [165:0] r_2_reg_507;
wire   [165:0] grp_bf_mult_1_fu_112_ap_return;
reg   [165:0] lambda_V_15_reg_512;
wire    ap_CS_fsm_state9;
wire   [165:0] ret_12_fu_347_p2;
reg   [165:0] ret_12_reg_517;
wire   [165:0] grp_bf_mult_2_fu_118_ap_return;
reg   [165:0] lhs_V_7_reg_523;
wire   [165:0] lambda_V_16_fu_365_p2;
reg   [165:0] lambda_V_16_reg_528;
wire    ap_CS_fsm_state10;
wire   [165:0] ret_fu_381_p2;
reg   [165:0] ret_reg_533;
wire   [162:0] xor_ln1544_11_fu_387_p2;
reg   [162:0] xor_ln1544_11_reg_538;
wire   [165:0] ret_10_fu_394_p2;
wire    ap_CS_fsm_state11;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_done;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_idle;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_ready;
wire   [15:0] grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_i_out;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_i_out_ap_vld;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_done;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_idle;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_ready;
wire   [15:0] grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_i_13_out;
wire    grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_i_13_out_ap_vld;
wire    grp_bf_mult_1_fu_112_ap_start;
wire    grp_bf_mult_1_fu_112_ap_done;
wire    grp_bf_mult_1_fu_112_ap_idle;
wire    grp_bf_mult_1_fu_112_ap_ready;
reg   [165:0] grp_bf_mult_1_fu_112_z_V_read;
reg   [162:0] grp_bf_mult_1_fu_112_y_V_read;
wire    grp_bf_mult_2_fu_118_ap_start;
wire    grp_bf_mult_2_fu_118_ap_done;
wire    grp_bf_mult_2_fu_118_ap_idle;
wire    grp_bf_mult_2_fu_118_ap_ready;
reg   [165:0] grp_bf_mult_2_fu_118_x_V_read;
reg   [165:0] x_0_reg_78;
wire   [0:0] icmp_ln1064_fu_132_p2;
reg   [165:0] storemerge_reg_89;
reg    grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start_reg;
reg    grp_bf_mult_1_fu_112_ap_start_reg;
reg    grp_bf_mult_2_fu_118_ap_start_reg;
reg    ap_block_state9_on_subcall_done;
reg   [165:0] u_V_7_fu_50;
wire   [165:0] u_V_fu_327_p2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state2;
reg   [165:0] v_V_2_fu_54;
wire   [165:0] v_V_fu_243_p3;
reg   [165:0] g_V_fu_58;
wire   [165:0] g_V_2_fu_236_p3;
reg   [165:0] lambda_V_fu_62;
wire   [165:0] ret_11_fu_332_p2;
wire   [15:0] add_ln28_fu_177_p2;
wire   [15:0] add_ln28_2_fu_187_p2;
wire   [16:0] zext_ln28_fu_183_p1;
wire   [16:0] zext_ln65_fu_193_p1;
wire   [16:0] j_fu_197_p2;
wire   [16:0] sub_ln69_fu_211_p2;
wire  signed [31:0] sext_ln1691_fu_248_p1;
wire   [165:0] zext_ln1691_fu_251_p1;
wire   [16:0] sub_ln1691_fu_267_p2;
wire  signed [31:0] sext_ln1691_2_fu_272_p1;
wire   [165:0] zext_ln1691_2_fu_276_p1;
wire   [165:0] r_fu_280_p2;
wire   [165:0] shl_ln1691_fu_255_p2;
wire   [165:0] ashr_ln1691_fu_286_p2;
wire   [165:0] shl_ln1691_2_fu_261_p2;
wire   [165:0] u_V_10_fu_322_p3;
wire   [165:0] lhs_V_9_fu_316_p3;
wire   [162:0] trunc_ln1544_5_fu_356_p1;
wire   [162:0] trunc_ln1544_fu_353_p1;
wire   [162:0] xor_ln904_fu_359_p2;
wire   [162:0] trunc_ln1544_6_fu_377_p1;
wire   [162:0] xor_ln1544_fu_371_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln1068_fu_161_p2;
reg   [165:0] ap_return_0_preg;
reg   [165:0] ap_return_1_preg;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_block_state4_on_subcall_done;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start_reg = 1'b0;
#0 grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start_reg = 1'b0;
#0 grp_bf_mult_1_fu_112_ap_start_reg = 1'b0;
#0 grp_bf_mult_2_fu_118_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 166'd0;
#0 ap_return_1_preg = 166'd0;
end

Radix2wDPM_point_double_Pipeline_VITIS_LOOP_25_1 grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start),
    .ap_done(grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_done),
    .ap_idle(grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_idle),
    .ap_ready(grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_ready),
    .u_V_9(u_V_7_fu_50),
    .i_out(grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_i_out),
    .i_out_ap_vld(grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_i_out_ap_vld)
);

Radix2wDPM_point_double_Pipeline_VITIS_LOOP_25_15 grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start),
    .ap_done(grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_done),
    .ap_idle(grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_idle),
    .ap_ready(grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_ready),
    .v_V_4(v_V_2_fu_54),
    .i_13_out(grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_i_13_out),
    .i_13_out_ap_vld(grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_i_13_out_ap_vld)
);

Radix2wDPM_bf_mult_1 grp_bf_mult_1_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_bf_mult_1_fu_112_ap_start),
    .ap_done(grp_bf_mult_1_fu_112_ap_done),
    .ap_idle(grp_bf_mult_1_fu_112_ap_idle),
    .ap_ready(grp_bf_mult_1_fu_112_ap_ready),
    .z_V_read(grp_bf_mult_1_fu_112_z_V_read),
    .y_V_read(grp_bf_mult_1_fu_112_y_V_read),
    .ap_return(grp_bf_mult_1_fu_112_ap_return)
);

Radix2wDPM_bf_mult_2 grp_bf_mult_2_fu_118(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_bf_mult_2_fu_118_ap_start),
    .ap_done(grp_bf_mult_2_fu_118_ap_done),
    .ap_idle(grp_bf_mult_2_fu_118_ap_idle),
    .ap_ready(grp_bf_mult_2_fu_118_ap_ready),
    .x_V_read(grp_bf_mult_2_fu_118_x_V_read),
    .ap_return(grp_bf_mult_2_fu_118_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 166'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_return_0_preg <= x_0_reg_78;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 166'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_return_1_preg <= storemerge_reg_89;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_bf_mult_1_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state10) & (grp_bf_mult_2_fu_118_ap_done == 1'b1)))) begin
            grp_bf_mult_1_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_bf_mult_1_fu_112_ap_ready == 1'b1)) begin
            grp_bf_mult_1_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_bf_mult_2_fu_118_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)))) begin
            grp_bf_mult_2_fu_118_ap_start_reg <= 1'b1;
        end else if ((grp_bf_mult_2_fu_118_ap_ready == 1'b1)) begin
            grp_bf_mult_2_fu_118_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start_reg <= 1'b1;
        end else if ((grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_ready == 1'b1)) begin
            grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start_reg <= 1'b1;
        end else if ((grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_ready == 1'b1)) begin
            grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd0))) begin
        g_V_fu_58 <= 166'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        g_V_fu_58 <= g_V_2_fu_236_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd0))) begin
        lambda_V_fu_62 <= 166'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        lambda_V_fu_62 <= ret_11_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd1))) begin
        storemerge_reg_89 <= 166'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_bf_mult_1_fu_112_ap_done == 1'b1))) begin
        storemerge_reg_89 <= ret_10_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd0))) begin
        u_V_7_fu_50 <= x_V_read;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        u_V_7_fu_50 <= u_V_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd0))) begin
        v_V_2_fu_54 <= 166'd11692013098647223345629478661730264157247460344009;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        v_V_2_fu_54 <= v_V_fu_243_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd1))) begin
        x_0_reg_78 <= 166'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_bf_mult_1_fu_112_ap_done == 1'b1))) begin
        x_0_reg_78 <= ret_reg_533;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        g_V_load_reg_497 <= g_V_fu_58;
        r_2_reg_507 <= r_2_fu_299_p3;
        select_ln1691_reg_502 <= select_ln1691_fu_292_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_2_reg_485 <= j_2_fu_217_p3;
        tmp_20_reg_491 <= j_2_fu_217_p3[32'd16];
        tmp_reg_477 <= j_fu_197_p2[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        lambda_V_15_reg_512 <= grp_bf_mult_1_fu_112_ap_return;
        lhs_V_7_reg_523 <= grp_bf_mult_2_fu_118_ap_return;
        ret_12_reg_517 <= ret_12_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        lambda_V_16_reg_528 <= lambda_V_16_fu_365_p2;
        ret_reg_533 <= ret_fu_381_p2;
        xor_ln1544_11_reg_538 <= xor_ln1544_11_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_127 <= lambda_V_fu_62;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v_V_2_load_reg_472 <= v_V_2_fu_54;
    end
end

always @ (*) begin
    if ((grp_bf_mult_2_fu_118_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_bf_mult_1_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state9_on_subcall_done)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return_0 = x_0_reg_78;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return_1 = storemerge_reg_89;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_bf_mult_1_fu_112_y_V_read = xor_ln1544_11_reg_538;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_bf_mult_1_fu_112_y_V_read = y_V_read;
    end else begin
        grp_bf_mult_1_fu_112_y_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_bf_mult_1_fu_112_z_V_read = lambda_V_16_reg_528;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_bf_mult_1_fu_112_z_V_read = reg_127;
    end else begin
        grp_bf_mult_1_fu_112_z_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_bf_mult_2_fu_118_x_V_read = ret_12_reg_517;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_bf_mult_2_fu_118_x_V_read = x_V_read;
    end else begin
        grp_bf_mult_2_fu_118_x_V_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (icmp_ln1064_fu_132_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1068_fu_161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_bf_mult_2_fu_118_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_bf_mult_1_fu_112_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_2_fu_187_p2 = (grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_i_13_out + 16'd1);

assign add_ln28_fu_177_p2 = (grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_i_out + 16'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_done == 1'b0) | (grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_bf_mult_2_fu_118_ap_done == 1'b0) | (grp_bf_mult_1_fu_112_ap_done == 1'b0));
end

assign ashr_ln1691_fu_286_p2 = $signed(g_V_2_fu_236_p3) >>> zext_ln1691_2_fu_276_p1;

assign g_V_2_fu_236_p3 = ((tmp_reg_477[0:0] == 1'b1) ? lambda_V_fu_62 : g_V_fu_58);

assign grp_bf_mult_1_fu_112_ap_start = grp_bf_mult_1_fu_112_ap_start_reg;

assign grp_bf_mult_2_fu_118_ap_start = grp_bf_mult_2_fu_118_ap_start_reg;

assign grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start = grp_point_double_Pipeline_VITIS_LOOP_25_15_fu_106_ap_start_reg;

assign grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start = grp_point_double_Pipeline_VITIS_LOOP_25_1_fu_100_ap_start_reg;

assign icmp_ln1064_fu_132_p2 = ((x_V_read == 166'd0) ? 1'b1 : 1'b0);

assign icmp_ln1068_fu_161_p2 = ((u_V_7_fu_50 == 166'd1) ? 1'b1 : 1'b0);

assign j_2_fu_217_p3 = ((tmp_fu_203_p3[0:0] == 1'b1) ? sub_ln69_fu_211_p2 : j_fu_197_p2);

assign j_fu_197_p2 = (zext_ln28_fu_183_p1 - zext_ln65_fu_193_p1);

assign lambda_V_16_fu_365_p2 = (ret_12_reg_517 ^ 166'd1);

assign lhs_V_9_fu_316_p3 = ((tmp_reg_477[0:0] == 1'b1) ? g_V_load_reg_497 : reg_127);

assign r_2_fu_299_p3 = ((tmp_20_reg_491[0:0] == 1'b1) ? ashr_ln1691_fu_286_p2 : shl_ln1691_2_fu_261_p2);

assign r_fu_280_p2 = $signed(v_V_fu_243_p3) >>> zext_ln1691_2_fu_276_p1;

assign ret_10_fu_394_p2 = (lhs_V_7_reg_523 ^ grp_bf_mult_1_fu_112_ap_return);

assign ret_11_fu_332_p2 = (r_2_reg_507 ^ lhs_V_9_fu_316_p3);

assign ret_12_fu_347_p2 = (x_V_read ^ grp_bf_mult_1_fu_112_ap_return);

assign ret_fu_381_p2 = (lambda_V_16_fu_365_p2 ^ grp_bf_mult_2_fu_118_ap_return);

assign select_ln1691_fu_292_p3 = ((tmp_20_reg_491[0:0] == 1'b1) ? r_fu_280_p2 : shl_ln1691_fu_255_p2);

assign sext_ln1691_2_fu_272_p1 = $signed(sub_ln1691_fu_267_p2);

assign sext_ln1691_fu_248_p1 = j_2_reg_485;

assign shl_ln1691_2_fu_261_p2 = g_V_2_fu_236_p3 << zext_ln1691_fu_251_p1;

assign shl_ln1691_fu_255_p2 = v_V_fu_243_p3 << zext_ln1691_fu_251_p1;

assign sub_ln1691_fu_267_p2 = ($signed(17'd0) - $signed(j_2_reg_485));

assign sub_ln69_fu_211_p2 = (17'd0 - j_fu_197_p2);

assign tmp_fu_203_p3 = j_fu_197_p2[32'd16];

assign trunc_ln1544_5_fu_356_p1 = lambda_V_15_reg_512[162:0];

assign trunc_ln1544_6_fu_377_p1 = grp_bf_mult_2_fu_118_ap_return[162:0];

assign trunc_ln1544_fu_353_p1 = x_V_read[162:0];

assign u_V_10_fu_322_p3 = ((tmp_reg_477[0:0] == 1'b1) ? v_V_2_load_reg_472 : u_V_7_fu_50);

assign u_V_fu_327_p2 = (u_V_10_fu_322_p3 ^ select_ln1691_reg_502);

assign v_V_fu_243_p3 = ((tmp_reg_477[0:0] == 1'b1) ? u_V_7_fu_50 : v_V_2_fu_54);

assign xor_ln1544_11_fu_387_p2 = (xor_ln1544_fu_371_p2 ^ trunc_ln1544_6_fu_377_p1);

assign xor_ln1544_fu_371_p2 = (xor_ln904_fu_359_p2 ^ 163'd1);

assign xor_ln904_fu_359_p2 = (trunc_ln1544_fu_353_p1 ^ trunc_ln1544_5_fu_356_p1);

assign zext_ln1691_2_fu_276_p1 = $unsigned(sext_ln1691_2_fu_272_p1);

assign zext_ln1691_fu_251_p1 = $unsigned(sext_ln1691_fu_248_p1);

assign zext_ln28_fu_183_p1 = add_ln28_fu_177_p2;

assign zext_ln65_fu_193_p1 = add_ln28_2_fu_187_p2;

endmodule //Radix2wDPM_point_double
