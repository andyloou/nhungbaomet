// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Radix2wDPM_Radix2wDPM,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.539120,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=48193,HLS_SYN_LUT=95125,HLS_VERSION=2021_2}" *)

module Radix2wDPM (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        k1,
        k2,
        R,
        S,
        P,
        P_ap_vld
);

parameter    ap_ST_fsm_state1 = 74'd1;
parameter    ap_ST_fsm_state2 = 74'd2;
parameter    ap_ST_fsm_state3 = 74'd4;
parameter    ap_ST_fsm_state4 = 74'd8;
parameter    ap_ST_fsm_state5 = 74'd16;
parameter    ap_ST_fsm_state6 = 74'd32;
parameter    ap_ST_fsm_state7 = 74'd64;
parameter    ap_ST_fsm_state8 = 74'd128;
parameter    ap_ST_fsm_state9 = 74'd256;
parameter    ap_ST_fsm_state10 = 74'd512;
parameter    ap_ST_fsm_state11 = 74'd1024;
parameter    ap_ST_fsm_state12 = 74'd2048;
parameter    ap_ST_fsm_state13 = 74'd4096;
parameter    ap_ST_fsm_state14 = 74'd8192;
parameter    ap_ST_fsm_state15 = 74'd16384;
parameter    ap_ST_fsm_state16 = 74'd32768;
parameter    ap_ST_fsm_state17 = 74'd65536;
parameter    ap_ST_fsm_state18 = 74'd131072;
parameter    ap_ST_fsm_state19 = 74'd262144;
parameter    ap_ST_fsm_state20 = 74'd524288;
parameter    ap_ST_fsm_state21 = 74'd1048576;
parameter    ap_ST_fsm_state22 = 74'd2097152;
parameter    ap_ST_fsm_state23 = 74'd4194304;
parameter    ap_ST_fsm_state24 = 74'd8388608;
parameter    ap_ST_fsm_state25 = 74'd16777216;
parameter    ap_ST_fsm_state26 = 74'd33554432;
parameter    ap_ST_fsm_state27 = 74'd67108864;
parameter    ap_ST_fsm_state28 = 74'd134217728;
parameter    ap_ST_fsm_state29 = 74'd268435456;
parameter    ap_ST_fsm_state30 = 74'd536870912;
parameter    ap_ST_fsm_state31 = 74'd1073741824;
parameter    ap_ST_fsm_state32 = 74'd2147483648;
parameter    ap_ST_fsm_state33 = 74'd4294967296;
parameter    ap_ST_fsm_state34 = 74'd8589934592;
parameter    ap_ST_fsm_state35 = 74'd17179869184;
parameter    ap_ST_fsm_state36 = 74'd34359738368;
parameter    ap_ST_fsm_state37 = 74'd68719476736;
parameter    ap_ST_fsm_state38 = 74'd137438953472;
parameter    ap_ST_fsm_state39 = 74'd274877906944;
parameter    ap_ST_fsm_state40 = 74'd549755813888;
parameter    ap_ST_fsm_state41 = 74'd1099511627776;
parameter    ap_ST_fsm_state42 = 74'd2199023255552;
parameter    ap_ST_fsm_state43 = 74'd4398046511104;
parameter    ap_ST_fsm_state44 = 74'd8796093022208;
parameter    ap_ST_fsm_state45 = 74'd17592186044416;
parameter    ap_ST_fsm_state46 = 74'd35184372088832;
parameter    ap_ST_fsm_state47 = 74'd70368744177664;
parameter    ap_ST_fsm_state48 = 74'd140737488355328;
parameter    ap_ST_fsm_state49 = 74'd281474976710656;
parameter    ap_ST_fsm_state50 = 74'd562949953421312;
parameter    ap_ST_fsm_state51 = 74'd1125899906842624;
parameter    ap_ST_fsm_state52 = 74'd2251799813685248;
parameter    ap_ST_fsm_state53 = 74'd4503599627370496;
parameter    ap_ST_fsm_state54 = 74'd9007199254740992;
parameter    ap_ST_fsm_state55 = 74'd18014398509481984;
parameter    ap_ST_fsm_state56 = 74'd36028797018963968;
parameter    ap_ST_fsm_state57 = 74'd72057594037927936;
parameter    ap_ST_fsm_state58 = 74'd144115188075855872;
parameter    ap_ST_fsm_state59 = 74'd288230376151711744;
parameter    ap_ST_fsm_state60 = 74'd576460752303423488;
parameter    ap_ST_fsm_state61 = 74'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 74'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 74'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 74'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 74'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 74'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 74'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 74'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 74'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 74'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 74'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 74'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 74'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 74'd9444732965739290427392;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [165:0] k1;
input  [165:0] k2;
input  [331:0] R;
input  [331:0] S;
output  [331:0] P;
output   P_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[331:0] P;
reg P_ap_vld;

(* fsm_encoding = "none" *) reg   [73:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [331:0] grp_point_double_1_fu_256_ap_return;
reg   [331:0] reg_294;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state70;
wire   [63:0] grp_fu_284_p1;
reg   [63:0] reg_299;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state48;
wire   [165:0] grp_fu_290_p2;
reg   [165:0] reg_305;
wire    ap_CS_fsm_state58;
reg   [0:0] icmp_ln48_reg_987;
reg   [0:0] icmp_ln24_reg_977;
reg   [0:0] icmp_ln24_1_reg_982;
reg   [0:0] p_Result_s_reg_901;
wire   [165:0] temp_x_V_4_fu_310_p1;
reg   [165:0] temp_x_V_4_reg_867;
wire   [165:0] ret_fu_324_p2;
reg   [165:0] ret_reg_872;
wire    ap_CS_fsm_state2;
wire   [165:0] temp_x_V_fu_340_p1;
reg   [165:0] temp_x_V_reg_882;
reg   [165:0] temp_y_V_reg_887;
wire   [165:0] p_Val2_21_fu_356_p2;
reg   [165:0] p_Val2_21_reg_892;
wire    ap_CS_fsm_state3;
reg   [0:0] tmp_reg_897;
wire   [165:0] M_x_V_1_fu_430_p3;
reg   [165:0] M_x_V_1_reg_905;
wire   [165:0] M_y_V_1_fu_438_p3;
reg   [165:0] M_y_V_1_reg_910;
wire   [7:0] empty_211_fu_457_p2;
reg   [7:0] empty_211_reg_921;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_28_fu_449_p3;
wire   [1:0] j_5_fu_477_p2;
wire    ap_CS_fsm_state5;
wire   [2:0] add_ln119_fu_568_p2;
reg   [2:0] add_ln119_reg_937;
wire    ap_CS_fsm_state6;
wire   [328:0] trunc_ln46_fu_575_p1;
reg   [328:0] trunc_ln46_reg_942;
wire  signed [31:0] sext_ln124_fu_586_p1;
wire    ap_CS_fsm_state43;
wire   [63:0] grp_pow_generic_double_s_fu_262_ap_return;
reg   [63:0] tmp_i_reg_956;
wire   [63:0] grp_fu_280_p2;
reg   [63:0] dc_reg_961;
wire    ap_CS_fsm_state55;
reg   [0:0] p_Result_30_reg_966;
wire    ap_CS_fsm_state56;
wire   [15:0] val_fu_708_p3;
reg   [15:0] val_reg_971;
wire   [0:0] icmp_ln24_fu_727_p2;
wire    ap_CS_fsm_state57;
wire   [0:0] icmp_ln24_1_fu_733_p2;
wire   [0:0] icmp_ln48_fu_739_p2;
wire   [165:0] M_x_V_fu_749_p3;
reg   [165:0] M_x_V_reg_991;
wire   [0:0] trunc_ln24_fu_757_p1;
reg   [0:0] trunc_ln24_reg_997;
wire   [165:0] M_y_V_fu_761_p3;
reg   [165:0] M_y_V_reg_1002;
wire   [0:0] trunc_ln24_1_fu_769_p1;
reg   [0:0] trunc_ln24_1_reg_1008;
wire   [331:0] grp_point_add_2_fu_273_ap_return;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state62;
wire   [328:0] empty_213_fu_777_p1;
reg   [328:0] empty_213_reg_1023;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state69;
wire   [0:0] ret_30_fu_819_p2;
reg   [0:0] ret_30_reg_1038;
wire    ap_CS_fsm_state72;
wire   [165:0] zext_ln1544_fu_823_p1;
reg   [165:0] zext_ln1544_reg_1048;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    grp_point_add_1_fu_234_ap_start;
wire    grp_point_add_1_fu_234_ap_done;
wire    grp_point_add_1_fu_234_ap_idle;
wire    grp_point_add_1_fu_234_ap_ready;
wire   [165:0] grp_point_add_1_fu_234_ap_return_0;
wire   [165:0] grp_point_add_1_fu_234_ap_return_1;
wire    grp_point_add_1_fu_241_ap_start;
wire    grp_point_add_1_fu_241_ap_done;
wire    grp_point_add_1_fu_241_ap_idle;
wire    grp_point_add_1_fu_241_ap_ready;
wire   [165:0] grp_point_add_1_fu_241_ap_return_0;
wire   [165:0] grp_point_add_1_fu_241_ap_return_1;
wire    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start;
wire    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_done;
wire    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_idle;
wire    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_ready;
wire   [15:0] grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out;
wire    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out_ap_vld;
wire   [31:0] grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out;
wire    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out_ap_vld;
wire    grp_point_double_1_fu_256_ap_start;
wire    grp_point_double_1_fu_256_ap_done;
wire    grp_point_double_1_fu_256_ap_idle;
wire    grp_point_double_1_fu_256_ap_ready;
reg   [328:0] grp_point_double_1_fu_256_P_read;
wire    grp_pow_generic_double_s_fu_262_ap_start;
wire    grp_pow_generic_double_s_fu_262_ap_done;
wire    grp_pow_generic_double_s_fu_262_ap_idle;
wire    grp_pow_generic_double_s_fu_262_ap_ready;
wire    grp_point_add_2_fu_273_ap_start;
wire    grp_point_add_2_fu_273_ap_done;
wire    grp_point_add_2_fu_273_ap_idle;
wire    grp_point_add_2_fu_273_ap_ready;
reg   [165:0] grp_point_add_2_fu_273_p_read12;
reg   [1:0] j_reg_194;
wire   [0:0] icmp_ln18_fu_471_p2;
reg   [331:0] storemerge_in_in_reg_205;
reg   [331:0] storemerge154_reg_214;
reg   [331:0] storemerge158_reg_224;
reg    grp_point_add_1_fu_234_ap_start_reg;
reg    grp_point_add_1_fu_241_ap_start_reg;
reg    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg;
reg    grp_point_double_1_fu_256_ap_start_reg;
wire    ap_CS_fsm_state64;
reg    grp_pow_generic_double_s_fu_262_ap_start_reg;
reg   [73:0] ap_NS_fsm;
wire    ap_NS_fsm_state14;
wire    ap_CS_fsm_state14;
reg    grp_point_add_2_fu_273_ap_start_reg;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state71;
reg   [7:0] i_fu_142;
wire   [7:0] i_33_fu_809_p2;
reg    ap_predicate_op269_call_state64;
reg    ap_block_state64_on_subcall_done;
reg   [328:0] P9_fu_146;
wire   [328:0] trunc_ln111_fu_782_p1;
wire   [328:0] trunc_ln86_fu_791_p1;
wire   [328:0] trunc_ln54_fu_800_p1;
reg   [2:0] p_Val2_s_fu_150;
reg   [2:0] p_Result_28_fu_503_p4;
wire    ap_CS_fsm_state8;
reg    ap_block_state7_on_subcall_done;
reg    ap_block_state3_on_subcall_done;
wire    ap_CS_fsm_state49;
reg   [31:0] grp_fu_284_p0;
reg   [165:0] grp_fu_290_p0;
reg   [165:0] grp_fu_290_p1;
wire   [165:0] temp_y_V_5_fu_314_p4;
wire   [0:0] tmp_25_fu_386_p3;
wire   [0:0] tmp_27_fu_406_p3;
wire   [1:0] conv30_cast_fu_394_p1;
wire   [1:0] conv33_cast_fu_414_p1;
wire   [1:0] sub_fu_418_p2;
wire   [0:0] cmp34_fu_424_p2;
wire   [7:0] zext_ln18_1_fu_467_p1;
wire   [7:0] add_ln19_fu_483_p2;
wire   [31:0] zext_ln819_fu_488_p1;
wire   [0:0] p_Result_29_fu_492_p3;
wire   [31:0] zext_ln18_fu_463_p1;
wire   [63:0] zext_ln849_fu_499_p1;
wire   [0:0] trunc_ln18_fu_522_p1;
wire   [0:0] tmp_29_fu_530_p3;
wire   [0:0] tmp_30_fu_542_p3;
wire   [1:0] zext_ln119_fu_526_p1;
wire   [1:0] shl_ln_fu_550_p3;
wire   [1:0] sub_ln119_fu_558_p2;
wire  signed [2:0] sext_ln119_fu_564_p1;
wire   [2:0] zext_ln119_1_fu_538_p1;
wire   [63:0] data_V_fu_591_p1;
wire   [51:0] tmp_39_fu_612_p1;
wire   [53:0] mantissa_fu_616_p4;
wire   [10:0] tmp_38_fu_602_p4;
wire   [11:0] zext_ln513_fu_630_p1;
wire   [11:0] add_ln513_fu_634_p2;
wire   [10:0] sub_ln1364_fu_648_p2;
wire   [0:0] isNeg_fu_640_p3;
wire  signed [11:0] sext_ln1364_fu_654_p1;
wire   [11:0] ush_fu_658_p3;
wire  signed [31:0] sext_ln1340_fu_666_p1;
wire   [120:0] zext_ln15_fu_626_p1;
wire   [120:0] zext_ln1340_fu_670_p1;
wire   [120:0] r_V_fu_674_p2;
wire   [0:0] tmp_36_fu_686_p3;
wire   [120:0] r_V_20_fu_680_p2;
wire   [15:0] zext_ln671_fu_694_p1;
wire   [15:0] tmp_s_fu_698_p4;
wire   [15:0] result_V_2_fu_716_p2;
wire   [15:0] result_V_fu_721_p3;
wire   [0:0] or_ln24_fu_745_p2;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
reg    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
reg    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
reg    ap_ST_fsm_state64_blk;
reg    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
reg    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
reg    ap_ST_fsm_state69_blk;
reg    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
reg    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
reg    ap_ST_fsm_state74_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 74'd1;
#0 grp_point_add_1_fu_234_ap_start_reg = 1'b0;
#0 grp_point_add_1_fu_241_ap_start_reg = 1'b0;
#0 grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg = 1'b0;
#0 grp_point_double_1_fu_256_ap_start_reg = 1'b0;
#0 grp_pow_generic_double_s_fu_262_ap_start_reg = 1'b0;
#0 grp_point_add_2_fu_273_ap_start_reg = 1'b0;
end

Radix2wDPM_point_add_1 grp_point_add_1_fu_234(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_point_add_1_fu_234_ap_start),
    .ap_done(grp_point_add_1_fu_234_ap_done),
    .ap_idle(grp_point_add_1_fu_234_ap_idle),
    .ap_ready(grp_point_add_1_fu_234_ap_ready),
    .p_read(temp_x_V_reg_882),
    .p_read1(temp_y_V_reg_887),
    .p_read2(S),
    .ap_return_0(grp_point_add_1_fu_234_ap_return_0),
    .ap_return_1(grp_point_add_1_fu_234_ap_return_1)
);

Radix2wDPM_point_add_1 grp_point_add_1_fu_241(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_point_add_1_fu_241_ap_start),
    .ap_done(grp_point_add_1_fu_241_ap_done),
    .ap_idle(grp_point_add_1_fu_241_ap_idle),
    .ap_ready(grp_point_add_1_fu_241_ap_ready),
    .p_read(temp_x_V_4_reg_867),
    .p_read1(ret_reg_872),
    .p_read2(R),
    .ap_return_0(grp_point_add_1_fu_241_ap_return_0),
    .ap_return_1(grp_point_add_1_fu_241_ap_return_1)
);

Radix2wDPM_Radix2wDPM_Pipeline_VITIS_LOOP_120_1 grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start),
    .ap_done(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_done),
    .ap_idle(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_idle),
    .ap_ready(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_ready),
    .sext_ln120(add_ln119_reg_937),
    .p_out(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out),
    .p_out_ap_vld(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out_ap_vld),
    .n_out(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out),
    .n_out_ap_vld(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out_ap_vld)
);

Radix2wDPM_point_double_1 grp_point_double_1_fu_256(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_point_double_1_fu_256_ap_start),
    .ap_done(grp_point_double_1_fu_256_ap_done),
    .ap_idle(grp_point_double_1_fu_256_ap_idle),
    .ap_ready(grp_point_double_1_fu_256_ap_ready),
    .P_read(grp_point_double_1_fu_256_P_read),
    .ap_return(grp_point_double_1_fu_256_ap_return)
);

Radix2wDPM_pow_generic_double_s grp_pow_generic_double_s_fu_262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pow_generic_double_s_fu_262_ap_start),
    .ap_done(grp_pow_generic_double_s_fu_262_ap_done),
    .ap_idle(grp_pow_generic_double_s_fu_262_ap_idle),
    .ap_ready(grp_pow_generic_double_s_fu_262_ap_ready),
    .exp(reg_299),
    .ap_return(grp_pow_generic_double_s_fu_262_ap_return)
);

Radix2wDPM_point_add_2 grp_point_add_2_fu_273(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_point_add_2_fu_273_ap_start),
    .ap_done(grp_point_add_2_fu_273_ap_done),
    .ap_idle(grp_point_add_2_fu_273_ap_idle),
    .ap_ready(grp_point_add_2_fu_273_ap_ready),
    .p_read(reg_294),
    .p_read1(M_x_V_reg_991),
    .p_read12(grp_point_add_2_fu_273_p_read12),
    .ap_return(grp_point_add_2_fu_273_ap_return)
);

Radix2wDPM_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_299),
    .din1(tmp_i_reg_956),
    .ce(1'b1),
    .dout(grp_fu_280_p2)
);

Radix2wDPM_sitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_6_no_dsp_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_284_p0),
    .ce(1'b1),
    .dout(grp_fu_284_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg <= 1'b1;
        end else if ((grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_ready == 1'b1)) begin
            grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_point_add_1_fu_234_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_point_add_1_fu_234_ap_start_reg <= 1'b1;
        end else if ((grp_point_add_1_fu_234_ap_ready == 1'b1)) begin
            grp_point_add_1_fu_234_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_point_add_1_fu_241_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_point_add_1_fu_241_ap_start_reg <= 1'b1;
        end else if ((grp_point_add_1_fu_241_ap_ready == 1'b1)) begin
            grp_point_add_1_fu_241_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_point_add_2_fu_273_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73))) begin
            grp_point_add_2_fu_273_ap_start_reg <= 1'b1;
        end else if ((grp_point_add_2_fu_273_ap_ready == 1'b1)) begin
            grp_point_add_2_fu_273_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_point_double_1_fu_256_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state58) & (icmp_ln48_reg_987 == 1'd1)) | ((1'b1 == ap_CS_fsm_state58) & (icmp_ln24_reg_977 == 1'd1) & (icmp_ln48_reg_987 == 1'd0)))) begin
            grp_point_double_1_fu_256_ap_start_reg <= 1'b1;
        end else if ((grp_point_double_1_fu_256_ap_ready == 1'b1)) begin
            grp_point_double_1_fu_256_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_double_s_fu_262_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state14) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_pow_generic_double_s_fu_262_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_double_s_fu_262_ap_ready == 1'b1)) begin
            grp_pow_generic_double_s_fu_262_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P9_fu_146 <= 329'd0;
    end else if (((1'b1 == ap_CS_fsm_state58) & (icmp_ln24_1_reg_982 == 1'd0) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0))) begin
        P9_fu_146 <= trunc_ln46_reg_942;
    end else if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln48_reg_987 == 1'd1))) begin
        P9_fu_146 <= trunc_ln54_fu_800_p1;
    end else if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln24_reg_977 == 1'd1) & (icmp_ln48_reg_987 == 1'd0))) begin
        P9_fu_146 <= trunc_ln86_fu_791_p1;
    end else if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0))) begin
        P9_fu_146 <= trunc_ln111_fu_782_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_142 <= 8'd81;
    end else if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64))) begin
        i_fu_142 <= i_33_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_471_p2 == 1'd0))) begin
        j_reg_194 <= j_5_fu_477_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_28_fu_449_p3 == 1'd0))) begin
        j_reg_194 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        M_x_V_1_reg_905 <= M_x_V_1_fu_430_p3;
        M_y_V_1_reg_910 <= M_y_V_1_fu_438_p3;
        p_Result_s_reg_901 <= k1[32'd5];
        p_Val2_21_reg_892[165 : 1] <= p_Val2_21_fu_356_p2[165 : 1];
        tmp_reg_897 <= k2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        M_x_V_reg_991 <= M_x_V_fu_749_p3;
        M_y_V_reg_1002 <= M_y_V_fu_761_p3;
        trunc_ln24_1_reg_1008 <= trunc_ln24_1_fu_769_p1;
        trunc_ln24_reg_997 <= trunc_ln24_fu_757_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln119_reg_937 <= add_ln119_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        dc_reg_961 <= grp_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_28_fu_449_p3 == 1'd0))) begin
        empty_211_reg_921[7 : 1] <= empty_211_fu_457_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        empty_213_reg_1023 <= empty_213_fu_777_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        icmp_ln24_1_reg_982 <= icmp_ln24_1_fu_733_p2;
        icmp_ln24_reg_977 <= icmp_ln24_fu_727_p2;
        icmp_ln48_reg_987 <= icmp_ln48_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        p_Result_30_reg_966 <= data_V_fu_591_p1[32'd63];
        val_reg_971 <= val_fu_708_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_471_p2 == 1'd0))) begin
        p_Val2_s_fu_150 <= p_Result_28_fu_503_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_294 <= grp_point_double_1_fu_256_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_299 <= grp_fu_284_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state58) & (p_Result_s_reg_901 == 1'd1) & (icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0)) | ((1'b1 == ap_CS_fsm_state65) & (p_Result_s_reg_901 == 1'd1)))) begin
        reg_305 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) & (tmp_reg_897 == 1'd1))) begin
        ret_30_reg_1038 <= ret_30_fu_819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        ret_reg_872 <= ret_fu_324_p2;
        temp_x_V_4_reg_867 <= temp_x_V_4_fu_310_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state69) & (grp_point_add_2_fu_273_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (grp_point_add_2_fu_273_ap_done == 1'b1)))) begin
        storemerge154_reg_214 <= grp_point_add_2_fu_273_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state74) & (grp_point_add_2_fu_273_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state72) & (grp_point_add_2_fu_273_ap_done == 1'b1)))) begin
        storemerge158_reg_224 <= grp_point_add_2_fu_273_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state62) & (grp_point_add_2_fu_273_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (grp_point_add_2_fu_273_ap_done == 1'b1)))) begin
        storemerge_in_in_reg_205 <= grp_point_add_2_fu_273_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        temp_x_V_reg_882 <= temp_x_V_fu_340_p1;
        temp_y_V_reg_887 <= {{R[331:166]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_i_reg_956 <= grp_pow_generic_double_s_fu_262_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln46_reg_942 <= trunc_ln46_fu_575_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        zext_ln1544_reg_1048[0] <= zext_ln1544_fu_823_p1[0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln48_reg_987 == 1'd1))) begin
        P = storemerge158_reg_224;
    end else if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln24_reg_977 == 1'd1) & (icmp_ln48_reg_987 == 1'd0))) begin
        P = storemerge154_reg_214;
    end else if ((((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0)))) begin
        P = grp_point_double_1_fu_256_ap_return;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P = 332'd0;
    end else begin
        P = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln48_reg_987 == 1'd1)) | ((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln24_reg_977 == 1'd1) & (icmp_ln48_reg_987 == 1'd0)) | ((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64) & (icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0)))) begin
        P_ap_vld = 1'b1;
    end else begin
        P_ap_vld = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_point_add_2_fu_273_ap_done == 1'b0)) begin
        ap_ST_fsm_state60_blk = 1'b1;
    end else begin
        ap_ST_fsm_state60_blk = 1'b0;
    end
end

assign ap_ST_fsm_state61_blk = 1'b0;

always @ (*) begin
    if ((grp_point_add_2_fu_273_ap_done == 1'b0)) begin
        ap_ST_fsm_state62_blk = 1'b1;
    end else begin
        ap_ST_fsm_state62_blk = 1'b0;
    end
end

assign ap_ST_fsm_state63_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state64_on_subcall_done)) begin
        ap_ST_fsm_state64_blk = 1'b1;
    end else begin
        ap_ST_fsm_state64_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_point_double_1_fu_256_ap_done == 1'b0)) begin
        ap_ST_fsm_state65_blk = 1'b1;
    end else begin
        ap_ST_fsm_state65_blk = 1'b0;
    end
end

assign ap_ST_fsm_state66_blk = 1'b0;

always @ (*) begin
    if ((grp_point_add_2_fu_273_ap_done == 1'b0)) begin
        ap_ST_fsm_state67_blk = 1'b1;
    end else begin
        ap_ST_fsm_state67_blk = 1'b0;
    end
end

assign ap_ST_fsm_state68_blk = 1'b0;

always @ (*) begin
    if ((grp_point_add_2_fu_273_ap_done == 1'b0)) begin
        ap_ST_fsm_state69_blk = 1'b1;
    end else begin
        ap_ST_fsm_state69_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_point_double_1_fu_256_ap_done == 1'b0)) begin
        ap_ST_fsm_state70_blk = 1'b1;
    end else begin
        ap_ST_fsm_state70_blk = 1'b0;
    end
end

assign ap_ST_fsm_state71_blk = 1'b0;

always @ (*) begin
    if ((grp_point_add_2_fu_273_ap_done == 1'b0)) begin
        ap_ST_fsm_state72_blk = 1'b1;
    end else begin
        ap_ST_fsm_state72_blk = 1'b0;
    end
end

assign ap_ST_fsm_state73_blk = 1'b0;

always @ (*) begin
    if ((grp_point_add_2_fu_273_ap_done == 1'b0)) begin
        ap_ST_fsm_state74_blk = 1'b1;
    end else begin
        ap_ST_fsm_state74_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state7_on_subcall_done)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_28_fu_449_p3 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_28_fu_449_p3 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_284_p0 = sext_ln124_fu_586_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_284_p0 = grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out;
    end else begin
        grp_fu_284_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_290_p0 = M_y_V_reg_1002;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_290_p0 = M_y_V_fu_761_p3;
    end else begin
        grp_fu_290_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_290_p1 = M_x_V_reg_991;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_290_p1 = M_x_V_fu_749_p3;
    end else begin
        grp_fu_290_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_point_add_2_fu_273_p_read12 = zext_ln1544_reg_1048;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_point_add_2_fu_273_p_read12 = reg_305;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state60))) begin
        grp_point_add_2_fu_273_p_read12 = M_y_V_reg_1002;
    end else begin
        grp_point_add_2_fu_273_p_read12 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) & (icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0))) begin
        grp_point_double_1_fu_256_P_read = empty_213_reg_1023;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state65))) begin
        grp_point_double_1_fu_256_P_read = trunc_ln46_reg_942;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_point_double_1_fu_256_P_read = P9_fu_146;
    end else begin
        grp_point_double_1_fu_256_P_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_28_fu_449_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_471_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (p_Result_s_reg_901 == 1'd1) & (icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else if (((1'b1 == ap_CS_fsm_state58) & (p_Result_s_reg_901 == 1'd0) & (icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else if (((1'b1 == ap_CS_fsm_state58) & (icmp_ln24_1_reg_982 == 1'd0) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else if (((1'b1 == ap_CS_fsm_state58) & (icmp_ln24_reg_977 == 1'd1) & (icmp_ln48_reg_987 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((1'b1 == ap_CS_fsm_state60) & (grp_point_add_2_fu_273_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((1'b1 == ap_CS_fsm_state62) & (grp_point_add_2_fu_273_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (grp_point_double_1_fu_256_ap_done == 1'b1) & (p_Result_s_reg_901 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else if (((1'b1 == ap_CS_fsm_state65) & (grp_point_double_1_fu_256_ap_done == 1'b1) & (p_Result_s_reg_901 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (grp_point_add_2_fu_273_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (grp_point_add_2_fu_273_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (grp_point_double_1_fu_256_ap_done == 1'b1) & (tmp_reg_897 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else if (((1'b1 == ap_CS_fsm_state70) & (grp_point_double_1_fu_256_ap_done == 1'b1) & (tmp_reg_897 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (grp_point_add_2_fu_273_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (grp_point_add_2_fu_273_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign M_x_V_1_fu_430_p3 = ((cmp34_fu_424_p2[0:0] == 1'b1) ? grp_point_add_1_fu_241_ap_return_0 : grp_point_add_1_fu_234_ap_return_0);

assign M_x_V_fu_749_p3 = ((or_ln24_fu_745_p2[0:0] == 1'b1) ? M_x_V_1_reg_905 : 166'd0);

assign M_y_V_1_fu_438_p3 = ((cmp34_fu_424_p2[0:0] == 1'b1) ? grp_point_add_1_fu_241_ap_return_1 : grp_point_add_1_fu_234_ap_return_1);

assign M_y_V_fu_761_p3 = ((or_ln24_fu_745_p2[0:0] == 1'b1) ? M_y_V_1_reg_910 : 166'd0);

assign add_ln119_fu_568_p2 = ($signed(sext_ln119_fu_564_p1) + $signed(zext_ln119_1_fu_538_p1));

assign add_ln19_fu_483_p2 = (zext_ln18_1_fu_467_p1 + empty_211_reg_921);

assign add_ln513_fu_634_p2 = ($signed(zext_ln513_fu_630_p1) + $signed(12'd3073));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_NS_fsm_state14 = ap_NS_fsm[32'd13];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_point_add_1_fu_241_ap_done == 1'b0) | (grp_point_add_1_fu_234_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state64_on_subcall_done = ((ap_predicate_op269_call_state64 == 1'b1) & (grp_point_double_1_fu_256_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_point_double_1_fu_256_ap_done == 1'b0) | (grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_done == 1'b0));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

always @ (*) begin
    ap_predicate_op269_call_state64 = ((icmp_ln24_1_reg_982 == 1'd1) & (icmp_ln24_reg_977 == 1'd0) & (icmp_ln48_reg_987 == 1'd0));
end

assign cmp34_fu_424_p2 = ((sub_fu_418_p2 == 2'd1) ? 1'b1 : 1'b0);

assign conv30_cast_fu_394_p1 = tmp_25_fu_386_p3;

assign conv33_cast_fu_414_p1 = tmp_27_fu_406_p3;

assign data_V_fu_591_p1 = dc_reg_961;

assign empty_211_fu_457_p2 = i_fu_142 << 8'd1;

assign empty_213_fu_777_p1 = storemerge_in_in_reg_205[328:0];

assign grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start = grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg;

assign grp_fu_290_p2 = (grp_fu_290_p1 ^ grp_fu_290_p0);

assign grp_point_add_1_fu_234_ap_start = grp_point_add_1_fu_234_ap_start_reg;

assign grp_point_add_1_fu_241_ap_start = grp_point_add_1_fu_241_ap_start_reg;

assign grp_point_add_2_fu_273_ap_start = grp_point_add_2_fu_273_ap_start_reg;

assign grp_point_double_1_fu_256_ap_start = grp_point_double_1_fu_256_ap_start_reg;

assign grp_pow_generic_double_s_fu_262_ap_start = grp_pow_generic_double_s_fu_262_ap_start_reg;

assign i_33_fu_809_p2 = ($signed(i_fu_142) + $signed(8'd255));

assign icmp_ln18_fu_471_p2 = ((j_reg_194 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln24_1_fu_733_p2 = ((result_V_fu_721_p3 == 16'd2) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_727_p2 = ((result_V_fu_721_p3 == 16'd1) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_739_p2 = ((result_V_fu_721_p3 == 16'd0) ? 1'b1 : 1'b0);

assign isNeg_fu_640_p3 = add_ln513_fu_634_p2[32'd11];

assign j_5_fu_477_p2 = (j_reg_194 + 2'd1);

assign mantissa_fu_616_p4 = {{{{1'd1}, {tmp_39_fu_612_p1}}}, {1'd0}};

assign or_ln24_fu_745_p2 = (icmp_ln24_reg_977 | icmp_ln24_1_reg_982);

always @ (*) begin
    p_Result_28_fu_503_p4 = p_Val2_s_fu_150;
    p_Result_28_fu_503_p4[zext_ln18_fu_463_p1] = |(zext_ln849_fu_499_p1);
end

assign p_Result_29_fu_492_p3 = p_Val2_21_reg_892[zext_ln819_fu_488_p1];

assign p_Val2_21_fu_356_p2 = k1 << 166'd1;

assign r_V_20_fu_680_p2 = zext_ln15_fu_626_p1 << zext_ln1340_fu_670_p1;

assign r_V_fu_674_p2 = zext_ln15_fu_626_p1 >> zext_ln1340_fu_670_p1;

assign result_V_2_fu_716_p2 = (16'd0 - val_reg_971);

assign result_V_fu_721_p3 = ((p_Result_30_reg_966[0:0] == 1'b1) ? result_V_2_fu_716_p2 : val_reg_971);

assign ret_30_fu_819_p2 = (trunc_ln24_reg_997 ^ trunc_ln24_1_reg_1008);

assign ret_fu_324_p2 = (temp_y_V_5_fu_314_p4 ^ temp_x_V_4_fu_310_p1);

assign sext_ln119_fu_564_p1 = $signed(sub_ln119_fu_558_p2);

assign sext_ln124_fu_586_p1 = $signed(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out);

assign sext_ln1340_fu_666_p1 = $signed(ush_fu_658_p3);

assign sext_ln1364_fu_654_p1 = $signed(sub_ln1364_fu_648_p2);

assign shl_ln_fu_550_p3 = {{tmp_30_fu_542_p3}, {1'd0}};

assign sub_fu_418_p2 = (conv30_cast_fu_394_p1 - conv33_cast_fu_414_p1);

assign sub_ln119_fu_558_p2 = (zext_ln119_fu_526_p1 - shl_ln_fu_550_p3);

assign sub_ln1364_fu_648_p2 = (11'd1023 - tmp_38_fu_602_p4);

assign temp_x_V_4_fu_310_p1 = S[165:0];

assign temp_x_V_fu_340_p1 = R[165:0];

assign temp_y_V_5_fu_314_p4 = {{S[331:166]}};

assign tmp_25_fu_386_p3 = k2[32'd5];

assign tmp_27_fu_406_p3 = k1[32'd5];

assign tmp_28_fu_449_p3 = i_fu_142[32'd7];

assign tmp_29_fu_530_p3 = p_Val2_s_fu_150[32'd1];

assign tmp_30_fu_542_p3 = p_Val2_s_fu_150[32'd2];

assign tmp_36_fu_686_p3 = r_V_fu_674_p2[32'd53];

assign tmp_38_fu_602_p4 = {{data_V_fu_591_p1[62:52]}};

assign tmp_39_fu_612_p1 = data_V_fu_591_p1[51:0];

assign tmp_s_fu_698_p4 = {{r_V_20_fu_680_p2[68:53]}};

assign trunc_ln111_fu_782_p1 = grp_point_double_1_fu_256_ap_return[328:0];

assign trunc_ln18_fu_522_p1 = p_Val2_s_fu_150[0:0];

assign trunc_ln24_1_fu_769_p1 = M_y_V_fu_761_p3[0:0];

assign trunc_ln24_fu_757_p1 = M_x_V_fu_749_p3[0:0];

assign trunc_ln46_fu_575_p1 = grp_point_double_1_fu_256_ap_return[328:0];

assign trunc_ln54_fu_800_p1 = storemerge158_reg_224[328:0];

assign trunc_ln86_fu_791_p1 = storemerge154_reg_214[328:0];

assign ush_fu_658_p3 = ((isNeg_fu_640_p3[0:0] == 1'b1) ? sext_ln1364_fu_654_p1 : add_ln513_fu_634_p2);

assign val_fu_708_p3 = ((isNeg_fu_640_p3[0:0] == 1'b1) ? zext_ln671_fu_694_p1 : tmp_s_fu_698_p4);

assign zext_ln119_1_fu_538_p1 = tmp_29_fu_530_p3;

assign zext_ln119_fu_526_p1 = trunc_ln18_fu_522_p1;

assign zext_ln1340_fu_670_p1 = $unsigned(sext_ln1340_fu_666_p1);

assign zext_ln1544_fu_823_p1 = ret_30_reg_1038;

assign zext_ln15_fu_626_p1 = mantissa_fu_616_p4;

assign zext_ln18_1_fu_467_p1 = j_reg_194;

assign zext_ln18_fu_463_p1 = j_reg_194;

assign zext_ln513_fu_630_p1 = tmp_38_fu_602_p4;

assign zext_ln671_fu_694_p1 = tmp_36_fu_686_p3;

assign zext_ln819_fu_488_p1 = add_ln19_fu_483_p2;

assign zext_ln849_fu_499_p1 = p_Result_29_fu_492_p3;

always @ (posedge ap_clk) begin
    p_Val2_21_reg_892[0] <= 1'b0;
    empty_211_reg_921[0] <= 1'b0;
    zext_ln1544_reg_1048[165:1] <= 165'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //Radix2wDPM
