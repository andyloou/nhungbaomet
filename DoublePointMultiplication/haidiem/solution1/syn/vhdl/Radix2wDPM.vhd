-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Radix2wDPM is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    k1 : IN STD_LOGIC_VECTOR (165 downto 0);
    k2 : IN STD_LOGIC_VECTOR (165 downto 0);
    R : IN STD_LOGIC_VECTOR (331 downto 0);
    S : IN STD_LOGIC_VECTOR (331 downto 0);
    P : OUT STD_LOGIC_VECTOR (331 downto 0);
    P_ap_vld : OUT STD_LOGIC );
end;


architecture behav of Radix2wDPM is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Radix2wDPM_Radix2wDPM,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.539120,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=48193,HLS_SYN_LUT=95125,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (73 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (73 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (73 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (73 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (73 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (73 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (73 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (73 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (73 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (73 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (73 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv8_51 : STD_LOGIC_VECTOR (7 downto 0) := "01010001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv329_lc_2 : STD_LOGIC_VECTOR (328 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv332_lc_2 : STD_LOGIC_VECTOR (331 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100110";
    constant ap_const_lv32_14B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001011";
    constant ap_const_lv166_lc_1 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv166_lc_2 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_point_double_1_fu_256_ap_return : STD_LOGIC_VECTOR (331 downto 0);
    signal reg_294 : STD_LOGIC_VECTOR (331 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal grp_fu_284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_299 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_fu_290_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal reg_305 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal icmp_ln48_reg_987 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_1_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_901 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_x_V_4_fu_310_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal temp_x_V_4_reg_867 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_fu_324_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_reg_872 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal temp_x_V_fu_340_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal temp_x_V_reg_882 : STD_LOGIC_VECTOR (165 downto 0);
    signal temp_y_V_reg_887 : STD_LOGIC_VECTOR (165 downto 0);
    signal p_Val2_21_fu_356_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal p_Val2_21_reg_892 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal M_x_V_1_fu_430_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal M_x_V_1_reg_905 : STD_LOGIC_VECTOR (165 downto 0);
    signal M_y_V_1_fu_438_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal M_y_V_1_reg_910 : STD_LOGIC_VECTOR (165 downto 0);
    signal empty_211_fu_457_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_211_reg_921 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_28_fu_449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_5_fu_477_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln119_fu_568_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln119_reg_937 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal trunc_ln46_fu_575_p1 : STD_LOGIC_VECTOR (328 downto 0);
    signal trunc_ln46_reg_942 : STD_LOGIC_VECTOR (328 downto 0);
    signal sext_ln124_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal grp_pow_generic_double_s_fu_262_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_reg_956 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_280_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dc_reg_961 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal p_Result_30_reg_966 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal val_fu_708_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_reg_971 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln24_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal icmp_ln24_1_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal M_x_V_fu_749_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal M_x_V_reg_991 : STD_LOGIC_VECTOR (165 downto 0);
    signal trunc_ln24_fu_757_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln24_reg_997 : STD_LOGIC_VECTOR (0 downto 0);
    signal M_y_V_fu_761_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal M_y_V_reg_1002 : STD_LOGIC_VECTOR (165 downto 0);
    signal trunc_ln24_1_fu_769_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln24_1_reg_1008 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_point_add_2_fu_273_ap_return : STD_LOGIC_VECTOR (331 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal empty_213_fu_777_p1 : STD_LOGIC_VECTOR (328 downto 0);
    signal empty_213_reg_1023 : STD_LOGIC_VECTOR (328 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ret_30_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_30_reg_1038 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal zext_ln1544_fu_823_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal zext_ln1544_reg_1048 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal grp_point_add_1_fu_234_ap_start : STD_LOGIC;
    signal grp_point_add_1_fu_234_ap_done : STD_LOGIC;
    signal grp_point_add_1_fu_234_ap_idle : STD_LOGIC;
    signal grp_point_add_1_fu_234_ap_ready : STD_LOGIC;
    signal grp_point_add_1_fu_234_ap_return_0 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_fu_234_ap_return_1 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_fu_241_ap_start : STD_LOGIC;
    signal grp_point_add_1_fu_241_ap_done : STD_LOGIC;
    signal grp_point_add_1_fu_241_ap_idle : STD_LOGIC;
    signal grp_point_add_1_fu_241_ap_ready : STD_LOGIC;
    signal grp_point_add_1_fu_241_ap_return_0 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_fu_241_ap_return_1 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start : STD_LOGIC;
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_done : STD_LOGIC;
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_idle : STD_LOGIC;
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_ready : STD_LOGIC;
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out_ap_vld : STD_LOGIC;
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out_ap_vld : STD_LOGIC;
    signal grp_point_double_1_fu_256_ap_start : STD_LOGIC;
    signal grp_point_double_1_fu_256_ap_done : STD_LOGIC;
    signal grp_point_double_1_fu_256_ap_idle : STD_LOGIC;
    signal grp_point_double_1_fu_256_ap_ready : STD_LOGIC;
    signal grp_point_double_1_fu_256_P_read : STD_LOGIC_VECTOR (328 downto 0);
    signal grp_pow_generic_double_s_fu_262_ap_start : STD_LOGIC;
    signal grp_pow_generic_double_s_fu_262_ap_done : STD_LOGIC;
    signal grp_pow_generic_double_s_fu_262_ap_idle : STD_LOGIC;
    signal grp_pow_generic_double_s_fu_262_ap_ready : STD_LOGIC;
    signal grp_point_add_2_fu_273_ap_start : STD_LOGIC;
    signal grp_point_add_2_fu_273_ap_done : STD_LOGIC;
    signal grp_point_add_2_fu_273_ap_idle : STD_LOGIC;
    signal grp_point_add_2_fu_273_ap_ready : STD_LOGIC;
    signal grp_point_add_2_fu_273_p_read12 : STD_LOGIC_VECTOR (165 downto 0);
    signal j_reg_194 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln18_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_in_in_reg_205 : STD_LOGIC_VECTOR (331 downto 0);
    signal storemerge154_reg_214 : STD_LOGIC_VECTOR (331 downto 0);
    signal storemerge158_reg_224 : STD_LOGIC_VECTOR (331 downto 0);
    signal grp_point_add_1_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal grp_point_add_1_fu_241_ap_start_reg : STD_LOGIC := '0';
    signal grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg : STD_LOGIC := '0';
    signal grp_point_double_1_fu_256_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_pow_generic_double_s_fu_262_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (73 downto 0);
    signal ap_NS_fsm_state14 : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_point_add_2_fu_273_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal i_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_33_fu_809_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op269_call_state64 : BOOLEAN;
    signal ap_block_state64_on_subcall_done : BOOLEAN;
    signal P9_fu_146 : STD_LOGIC_VECTOR (328 downto 0);
    signal trunc_ln111_fu_782_p1 : STD_LOGIC_VECTOR (328 downto 0);
    signal trunc_ln86_fu_791_p1 : STD_LOGIC_VECTOR (328 downto 0);
    signal trunc_ln54_fu_800_p1 : STD_LOGIC_VECTOR (328 downto 0);
    signal p_Val2_s_fu_150 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_28_fu_503_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal grp_fu_284_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p0 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_fu_290_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal temp_y_V_5_fu_314_p4 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_25_fu_386_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_406_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv30_cast_fu_394_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv33_cast_fu_414_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_fu_418_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal cmp34_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_1_fu_467_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln19_fu_483_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln819_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_29_fu_492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_fu_463_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln849_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln18_fu_522_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_530_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_542_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln119_fu_526_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln_fu_550_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln119_fu_558_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln119_fu_564_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln119_1_fu_538_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal data_V_fu_591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_612_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_fu_616_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_38_fu_602_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln513_fu_630_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln513_fu_634_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1364_fu_648_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_fu_640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1364_fu_654_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_658_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1340_fu_666_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_626_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln1340_fu_670_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal r_V_fu_674_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal tmp_36_fu_686_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_20_fu_680_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln671_fu_694_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_698_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_V_2_fu_716_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_V_fu_721_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln24_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Radix2wDPM_point_add_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (165 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (165 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (331 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (165 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;


    component Radix2wDPM_Radix2wDPM_Pipeline_VITIS_LOOP_120_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln120 : IN STD_LOGIC_VECTOR (2 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        n_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        n_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_double_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        P_read : IN STD_LOGIC_VECTOR (328 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (331 downto 0) );
    end component;


    component Radix2wDPM_pow_generic_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        exp : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Radix2wDPM_point_add_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (331 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (165 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (165 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (331 downto 0) );
    end component;


    component Radix2wDPM_dmul_64ns_64ns_64_7_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Radix2wDPM_sitodp_32ns_64_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_point_add_1_fu_234 : component Radix2wDPM_point_add_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_fu_234_ap_start,
        ap_done => grp_point_add_1_fu_234_ap_done,
        ap_idle => grp_point_add_1_fu_234_ap_idle,
        ap_ready => grp_point_add_1_fu_234_ap_ready,
        p_read => temp_x_V_reg_882,
        p_read1 => temp_y_V_reg_887,
        p_read2 => S,
        ap_return_0 => grp_point_add_1_fu_234_ap_return_0,
        ap_return_1 => grp_point_add_1_fu_234_ap_return_1);

    grp_point_add_1_fu_241 : component Radix2wDPM_point_add_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_fu_241_ap_start,
        ap_done => grp_point_add_1_fu_241_ap_done,
        ap_idle => grp_point_add_1_fu_241_ap_idle,
        ap_ready => grp_point_add_1_fu_241_ap_ready,
        p_read => temp_x_V_4_reg_867,
        p_read1 => ret_reg_872,
        p_read2 => R,
        ap_return_0 => grp_point_add_1_fu_241_ap_return_0,
        ap_return_1 => grp_point_add_1_fu_241_ap_return_1);

    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249 : component Radix2wDPM_Radix2wDPM_Pipeline_VITIS_LOOP_120_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start,
        ap_done => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_done,
        ap_idle => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_idle,
        ap_ready => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_ready,
        sext_ln120 => add_ln119_reg_937,
        p_out => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out,
        p_out_ap_vld => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out_ap_vld,
        n_out => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out,
        n_out_ap_vld => grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out_ap_vld);

    grp_point_double_1_fu_256 : component Radix2wDPM_point_double_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_double_1_fu_256_ap_start,
        ap_done => grp_point_double_1_fu_256_ap_done,
        ap_idle => grp_point_double_1_fu_256_ap_idle,
        ap_ready => grp_point_double_1_fu_256_ap_ready,
        P_read => grp_point_double_1_fu_256_P_read,
        ap_return => grp_point_double_1_fu_256_ap_return);

    grp_pow_generic_double_s_fu_262 : component Radix2wDPM_pow_generic_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pow_generic_double_s_fu_262_ap_start,
        ap_done => grp_pow_generic_double_s_fu_262_ap_done,
        ap_idle => grp_pow_generic_double_s_fu_262_ap_idle,
        ap_ready => grp_pow_generic_double_s_fu_262_ap_ready,
        exp => reg_299,
        ap_return => grp_pow_generic_double_s_fu_262_ap_return);

    grp_point_add_2_fu_273 : component Radix2wDPM_point_add_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_2_fu_273_ap_start,
        ap_done => grp_point_add_2_fu_273_ap_done,
        ap_idle => grp_point_add_2_fu_273_ap_idle,
        ap_ready => grp_point_add_2_fu_273_ap_ready,
        p_read => reg_294,
        p_read1 => M_x_V_reg_991,
        p_read12 => grp_point_add_2_fu_273_p_read12,
        ap_return => grp_point_add_2_fu_273_ap_return);

    dmul_64ns_64ns_64_7_max_dsp_1_U88 : component Radix2wDPM_dmul_64ns_64ns_64_7_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_299,
        din1 => tmp_i_reg_956,
        ce => ap_const_logic_1,
        dout => grp_fu_280_p2);

    sitodp_32ns_64_6_no_dsp_1_U89 : component Radix2wDPM_sitodp_32ns_64_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_284_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_284_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_ready = ap_const_logic_1)) then 
                    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_point_add_1_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_fu_241_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_fu_241_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_point_add_1_fu_241_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_fu_241_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_fu_241_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_2_fu_273_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_2_fu_273_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                    grp_point_add_2_fu_273_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_2_fu_273_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_2_fu_273_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_double_1_fu_256_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_double_1_fu_256_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state58) and (icmp_ln48_reg_987 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state58) and (icmp_ln24_reg_977 = ap_const_lv1_1) and (icmp_ln48_reg_987 = ap_const_lv1_0)))) then 
                    grp_point_double_1_fu_256_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_double_1_fu_256_ap_ready = ap_const_logic_1)) then 
                    grp_point_double_1_fu_256_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pow_generic_double_s_fu_262_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pow_generic_double_s_fu_262_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state14) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                    grp_pow_generic_double_s_fu_262_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pow_generic_double_s_fu_262_ap_ready = ap_const_logic_1)) then 
                    grp_pow_generic_double_s_fu_262_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    P9_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                P9_fu_146 <= ap_const_lv329_lc_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (icmp_ln24_1_reg_982 = ap_const_lv1_0) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then 
                P9_fu_146 <= trunc_ln46_reg_942;
            elsif (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln48_reg_987 = ap_const_lv1_1))) then 
                P9_fu_146 <= trunc_ln54_fu_800_p1;
            elsif (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln24_reg_977 = ap_const_lv1_1) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then 
                P9_fu_146 <= trunc_ln86_fu_791_p1;
            elsif (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then 
                P9_fu_146 <= trunc_ln111_fu_782_p1;
            end if; 
        end if;
    end process;

    i_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_142 <= ap_const_lv8_51;
            elsif (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                i_fu_142 <= i_33_fu_809_p2;
            end if; 
        end if;
    end process;

    j_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln18_fu_471_p2 = ap_const_lv1_0))) then 
                j_reg_194 <= j_5_fu_477_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_28_fu_449_p3 = ap_const_lv1_0))) then 
                j_reg_194 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                M_x_V_1_reg_905 <= M_x_V_1_fu_430_p3;
                M_y_V_1_reg_910 <= M_y_V_1_fu_438_p3;
                p_Result_s_reg_901 <= k1(5 downto 5);
                    p_Val2_21_reg_892(165 downto 1) <= p_Val2_21_fu_356_p2(165 downto 1);
                tmp_reg_897 <= k2(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                M_x_V_reg_991 <= M_x_V_fu_749_p3;
                M_y_V_reg_1002 <= M_y_V_fu_761_p3;
                trunc_ln24_1_reg_1008 <= trunc_ln24_1_fu_769_p1;
                trunc_ln24_reg_997 <= trunc_ln24_fu_757_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln119_reg_937 <= add_ln119_fu_568_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                dc_reg_961 <= grp_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_28_fu_449_p3 = ap_const_lv1_0))) then
                    empty_211_reg_921(7 downto 1) <= empty_211_fu_457_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                empty_213_reg_1023 <= empty_213_fu_777_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                icmp_ln24_1_reg_982 <= icmp_ln24_1_fu_733_p2;
                icmp_ln24_reg_977 <= icmp_ln24_fu_727_p2;
                icmp_ln48_reg_987 <= icmp_ln48_fu_739_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                p_Result_30_reg_966 <= data_V_fu_591_p1(63 downto 63);
                val_reg_971 <= val_fu_708_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln18_fu_471_p2 = ap_const_lv1_0))) then
                p_Val2_s_fu_150 <= p_Result_28_fu_503_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_294 <= grp_point_double_1_fu_256_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_299 <= grp_fu_284_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state58) and (p_Result_s_reg_901 = ap_const_lv1_1) and (icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state65) and (p_Result_s_reg_901 = ap_const_lv1_1)))) then
                reg_305 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state70) and (tmp_reg_897 = ap_const_lv1_1))) then
                ret_30_reg_1038 <= ret_30_fu_819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                ret_reg_872 <= ret_fu_324_p2;
                temp_x_V_4_reg_867 <= temp_x_V_4_fu_310_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state69) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state67) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1)))) then
                storemerge154_reg_214 <= grp_point_add_2_fu_273_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state74) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state72) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1)))) then
                storemerge158_reg_224 <= grp_point_add_2_fu_273_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state62) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1)))) then
                storemerge_in_in_reg_205 <= grp_point_add_2_fu_273_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                temp_x_V_reg_882 <= temp_x_V_fu_340_p1;
                temp_y_V_reg_887 <= R(331 downto 166);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                tmp_i_reg_956 <= grp_pow_generic_double_s_fu_262_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                trunc_ln46_reg_942 <= trunc_ln46_fu_575_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                    zext_ln1544_reg_1048(0) <= zext_ln1544_fu_823_p1(0);
            end if;
        end if;
    end process;
    p_Val2_21_reg_892(0) <= '0';
    empty_211_reg_921(0) <= '0';
    zext_ln1544_reg_1048(165 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, ap_CS_fsm_state65, ap_CS_fsm_state70, ap_CS_fsm_state58, icmp_ln48_reg_987, icmp_ln24_reg_977, icmp_ln24_1_reg_982, p_Result_s_reg_901, ap_CS_fsm_state3, tmp_reg_897, ap_CS_fsm_state4, tmp_28_fu_449_p3, ap_CS_fsm_state5, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state67, ap_CS_fsm_state69, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_point_double_1_fu_256_ap_done, grp_point_add_2_fu_273_ap_done, icmp_ln18_fu_471_p2, ap_CS_fsm_state64, ap_block_state64_on_subcall_done, ap_block_state7_on_subcall_done, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_28_fu_449_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln18_fu_471_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (p_Result_s_reg_901 = ap_const_lv1_1) and (icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (p_Result_s_reg_901 = ap_const_lv1_0) and (icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (icmp_ln24_1_reg_982 = ap_const_lv1_0) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (icmp_ln24_reg_977 = ap_const_lv1_1) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state60) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state62) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state65) and (grp_point_double_1_fu_256_ap_done = ap_const_logic_1) and (p_Result_s_reg_901 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state65) and (grp_point_double_1_fu_256_ap_done = ap_const_logic_1) and (p_Result_s_reg_901 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_point_double_1_fu_256_ap_done = ap_const_logic_1) and (tmp_reg_897 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_point_double_1_fu_256_ap_done = ap_const_logic_1) and (tmp_reg_897 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state74) and (grp_point_add_2_fu_273_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    M_x_V_1_fu_430_p3 <= 
        grp_point_add_1_fu_241_ap_return_0 when (cmp34_fu_424_p2(0) = '1') else 
        grp_point_add_1_fu_234_ap_return_0;
    M_x_V_fu_749_p3 <= 
        M_x_V_1_reg_905 when (or_ln24_fu_745_p2(0) = '1') else 
        ap_const_lv166_lc_2;
    M_y_V_1_fu_438_p3 <= 
        grp_point_add_1_fu_241_ap_return_1 when (cmp34_fu_424_p2(0) = '1') else 
        grp_point_add_1_fu_234_ap_return_1;
    M_y_V_fu_761_p3 <= 
        M_y_V_1_reg_910 when (or_ln24_fu_745_p2(0) = '1') else 
        ap_const_lv166_lc_2;

    P_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_point_double_1_fu_256_ap_return, ap_CS_fsm_state7, icmp_ln48_reg_987, icmp_ln24_reg_977, icmp_ln24_1_reg_982, storemerge154_reg_214, storemerge158_reg_224, ap_CS_fsm_state64, ap_block_state64_on_subcall_done, ap_block_state7_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln48_reg_987 = ap_const_lv1_1))) then 
            P <= storemerge158_reg_224;
        elsif (((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln24_reg_977 = ap_const_lv1_1) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then 
            P <= storemerge154_reg_214;
        elsif ((((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0)))) then 
            P <= grp_point_double_1_fu_256_ap_return;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            P <= ap_const_lv332_lc_2;
        else 
            P <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    P_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln48_reg_987, icmp_ln24_reg_977, icmp_ln24_1_reg_982, ap_CS_fsm_state64, ap_block_state64_on_subcall_done, ap_block_state7_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln48_reg_987 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln24_reg_977 = ap_const_lv1_1) and (icmp_ln48_reg_987 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_state64_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0)))) then 
            P_ap_vld <= ap_const_logic_1;
        else 
            P_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln119_fu_568_p2 <= std_logic_vector(signed(sext_ln119_fu_564_p1) + signed(zext_ln119_1_fu_538_p1));
    add_ln19_fu_483_p2 <= std_logic_vector(unsigned(zext_ln18_1_fu_467_p1) + unsigned(empty_211_reg_921));
    add_ln513_fu_634_p2 <= std_logic_vector(unsigned(zext_ln513_fu_630_p1) + unsigned(ap_const_lv12_C01));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_NS_fsm_state14 <= ap_NS_fsm(13);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state60_blk_assign_proc : process(grp_point_add_2_fu_273_ap_done)
    begin
        if ((grp_point_add_2_fu_273_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state60_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state60_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state61_blk <= ap_const_logic_0;

    ap_ST_fsm_state62_blk_assign_proc : process(grp_point_add_2_fu_273_ap_done)
    begin
        if ((grp_point_add_2_fu_273_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state62_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state62_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state63_blk <= ap_const_logic_0;

    ap_ST_fsm_state64_blk_assign_proc : process(ap_block_state64_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state64_on_subcall_done)) then 
            ap_ST_fsm_state64_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state64_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state65_blk_assign_proc : process(grp_point_double_1_fu_256_ap_done)
    begin
        if ((grp_point_double_1_fu_256_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state65_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state65_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state66_blk <= ap_const_logic_0;

    ap_ST_fsm_state67_blk_assign_proc : process(grp_point_add_2_fu_273_ap_done)
    begin
        if ((grp_point_add_2_fu_273_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state67_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state67_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state68_blk <= ap_const_logic_0;

    ap_ST_fsm_state69_blk_assign_proc : process(grp_point_add_2_fu_273_ap_done)
    begin
        if ((grp_point_add_2_fu_273_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state69_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state69_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state70_blk_assign_proc : process(grp_point_double_1_fu_256_ap_done)
    begin
        if ((grp_point_double_1_fu_256_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state70_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state70_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state71_blk <= ap_const_logic_0;

    ap_ST_fsm_state72_blk_assign_proc : process(grp_point_add_2_fu_273_ap_done)
    begin
        if ((grp_point_add_2_fu_273_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state72_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state72_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state73_blk <= ap_const_logic_0;

    ap_ST_fsm_state74_blk_assign_proc : process(grp_point_add_2_fu_273_ap_done)
    begin
        if ((grp_point_add_2_fu_273_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state74_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state74_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state7_on_subcall_done)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state3_on_subcall_done_assign_proc : process(grp_point_add_1_fu_234_ap_done, grp_point_add_1_fu_241_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_point_add_1_fu_241_ap_done = ap_const_logic_0) or (grp_point_add_1_fu_234_ap_done = ap_const_logic_0));
    end process;


    ap_block_state64_on_subcall_done_assign_proc : process(grp_point_double_1_fu_256_ap_done, ap_predicate_op269_call_state64)
    begin
                ap_block_state64_on_subcall_done <= ((ap_predicate_op269_call_state64 = ap_const_boolean_1) and (grp_point_double_1_fu_256_ap_done = ap_const_logic_0));
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_done, grp_point_double_1_fu_256_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((grp_point_double_1_fu_256_ap_done = ap_const_logic_0) or (grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state4, tmp_28_fu_449_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_28_fu_449_p3 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_predicate_op269_call_state64_assign_proc : process(icmp_ln48_reg_987, icmp_ln24_reg_977, icmp_ln24_1_reg_982)
    begin
                ap_predicate_op269_call_state64 <= ((icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, tmp_28_fu_449_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_28_fu_449_p3 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp34_fu_424_p2 <= "1" when (sub_fu_418_p2 = ap_const_lv2_1) else "0";
    conv30_cast_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_386_p3),2));
    conv33_cast_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_406_p3),2));
    data_V_fu_591_p1 <= dc_reg_961;
    empty_211_fu_457_p2 <= std_logic_vector(shift_left(unsigned(i_fu_142),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    empty_213_fu_777_p1 <= storemerge_in_in_reg_205(329 - 1 downto 0);
    grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start <= grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_ap_start_reg;

    grp_fu_284_p0_assign_proc : process(sext_ln124_fu_586_p1, ap_CS_fsm_state43, grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_284_p0 <= sext_ln124_fu_586_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_284_p0 <= grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_n_out;
        else 
            grp_fu_284_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p0_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state58, M_y_V_fu_761_p3, M_y_V_reg_1002)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_290_p0 <= M_y_V_reg_1002;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_290_p0 <= M_y_V_fu_761_p3;
        else 
            grp_fu_290_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p1_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state58, M_x_V_fu_749_p3, M_x_V_reg_991)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_290_p1 <= M_x_V_reg_991;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_290_p1 <= M_x_V_fu_749_p3;
        else 
            grp_fu_290_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_290_p2 <= (grp_fu_290_p1 xor grp_fu_290_p0);
    grp_point_add_1_fu_234_ap_start <= grp_point_add_1_fu_234_ap_start_reg;
    grp_point_add_1_fu_241_ap_start <= grp_point_add_1_fu_241_ap_start_reg;
    grp_point_add_2_fu_273_ap_start <= grp_point_add_2_fu_273_ap_start_reg;

    grp_point_add_2_fu_273_p_read12_assign_proc : process(reg_305, M_y_V_reg_1002, ap_CS_fsm_state60, ap_CS_fsm_state62, ap_CS_fsm_state67, ap_CS_fsm_state69, ap_CS_fsm_state72, zext_ln1544_reg_1048, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_point_add_2_fu_273_p_read12 <= zext_ln1544_reg_1048;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            grp_point_add_2_fu_273_p_read12 <= reg_305;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_point_add_2_fu_273_p_read12 <= M_y_V_reg_1002;
        else 
            grp_point_add_2_fu_273_p_read12 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_point_double_1_fu_256_P_read_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state65, ap_CS_fsm_state70, icmp_ln48_reg_987, icmp_ln24_reg_977, icmp_ln24_1_reg_982, trunc_ln46_reg_942, empty_213_reg_1023, ap_CS_fsm_state64, P9_fu_146)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln24_1_reg_982 = ap_const_lv1_1) and (icmp_ln24_reg_977 = ap_const_lv1_0) and (icmp_ln48_reg_987 = ap_const_lv1_0))) then 
            grp_point_double_1_fu_256_P_read <= empty_213_reg_1023;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            grp_point_double_1_fu_256_P_read <= trunc_ln46_reg_942;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_point_double_1_fu_256_P_read <= P9_fu_146;
        else 
            grp_point_double_1_fu_256_P_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_point_double_1_fu_256_ap_start <= grp_point_double_1_fu_256_ap_start_reg;
    grp_pow_generic_double_s_fu_262_ap_start <= grp_pow_generic_double_s_fu_262_ap_start_reg;
    i_33_fu_809_p2 <= std_logic_vector(unsigned(i_fu_142) + unsigned(ap_const_lv8_FF));
    icmp_ln18_fu_471_p2 <= "1" when (j_reg_194 = ap_const_lv2_3) else "0";
    icmp_ln24_1_fu_733_p2 <= "1" when (result_V_fu_721_p3 = ap_const_lv16_2) else "0";
    icmp_ln24_fu_727_p2 <= "1" when (result_V_fu_721_p3 = ap_const_lv16_1) else "0";
    icmp_ln48_fu_739_p2 <= "1" when (result_V_fu_721_p3 = ap_const_lv16_0) else "0";
    isNeg_fu_640_p3 <= add_ln513_fu_634_p2(11 downto 11);
    j_5_fu_477_p2 <= std_logic_vector(unsigned(j_reg_194) + unsigned(ap_const_lv2_1));
    mantissa_fu_616_p4 <= ((ap_const_lv1_1 & tmp_39_fu_612_p1) & ap_const_lv1_0);
    or_ln24_fu_745_p2 <= (icmp_ln24_reg_977 or icmp_ln24_1_reg_982);
    
    p_Result_28_fu_503_p4_proc : process(p_Val2_s_fu_150, zext_ln18_fu_463_p1, zext_ln849_fu_499_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        p_Result_28_fu_503_p4 <= p_Val2_s_fu_150;
        if to_integer(unsigned(zext_ln18_fu_463_p1)) >= p_Val2_s_fu_150'low and to_integer(unsigned(zext_ln18_fu_463_p1)) <= p_Val2_s_fu_150'high then
            result(0) := '0';
            for i in zext_ln849_fu_499_p1'range loop
                result(0) := result(0) or zext_ln849_fu_499_p1(i);
            end loop;
            p_Result_28_fu_503_p4(to_integer(unsigned(zext_ln18_fu_463_p1))) <= result(0);
        end if;
    end process;

    p_Result_29_fu_492_p3 <= p_Val2_21_reg_892(to_integer(unsigned(zext_ln819_fu_488_p1)) downto to_integer(unsigned(zext_ln819_fu_488_p1))) when (to_integer(unsigned(zext_ln819_fu_488_p1)) >= 0 and to_integer(unsigned(zext_ln819_fu_488_p1)) <=165) else "-";
    p_Val2_21_fu_356_p2 <= std_logic_vector(shift_left(unsigned(k1),to_integer(unsigned('0' & ap_const_lv166_lc_1(31-1 downto 0)))));
    r_V_20_fu_680_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_626_p1),to_integer(unsigned('0' & zext_ln1340_fu_670_p1(31-1 downto 0)))));
    r_V_fu_674_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_626_p1),to_integer(unsigned('0' & zext_ln1340_fu_670_p1(31-1 downto 0)))));
    result_V_2_fu_716_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(val_reg_971));
    result_V_fu_721_p3 <= 
        result_V_2_fu_716_p2 when (p_Result_30_reg_966(0) = '1') else 
        val_reg_971;
    ret_30_fu_819_p2 <= (trunc_ln24_reg_997 xor trunc_ln24_1_reg_1008);
    ret_fu_324_p2 <= (temp_y_V_5_fu_314_p4 xor temp_x_V_4_fu_310_p1);
        sext_ln119_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln119_fu_558_p2),3));

        sext_ln124_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_Radix2wDPM_Pipeline_VITIS_LOOP_120_1_fu_249_p_out),32));

        sext_ln1340_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_658_p3),32));

        sext_ln1364_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1364_fu_648_p2),12));

    shl_ln_fu_550_p3 <= (tmp_30_fu_542_p3 & ap_const_lv1_0);
    sub_fu_418_p2 <= std_logic_vector(unsigned(conv30_cast_fu_394_p1) - unsigned(conv33_cast_fu_414_p1));
    sub_ln119_fu_558_p2 <= std_logic_vector(unsigned(zext_ln119_fu_526_p1) - unsigned(shl_ln_fu_550_p3));
    sub_ln1364_fu_648_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_38_fu_602_p4));
    temp_x_V_4_fu_310_p1 <= S(166 - 1 downto 0);
    temp_x_V_fu_340_p1 <= R(166 - 1 downto 0);
    temp_y_V_5_fu_314_p4 <= S(331 downto 166);
    tmp_25_fu_386_p3 <= k2(5 downto 5);
    tmp_27_fu_406_p3 <= k1(5 downto 5);
    tmp_28_fu_449_p3 <= i_fu_142(7 downto 7);
    tmp_29_fu_530_p3 <= p_Val2_s_fu_150(1 downto 1);
    tmp_30_fu_542_p3 <= p_Val2_s_fu_150(2 downto 2);
    tmp_36_fu_686_p3 <= r_V_fu_674_p2(53 downto 53);
    tmp_38_fu_602_p4 <= data_V_fu_591_p1(62 downto 52);
    tmp_39_fu_612_p1 <= data_V_fu_591_p1(52 - 1 downto 0);
    tmp_s_fu_698_p4 <= r_V_20_fu_680_p2(68 downto 53);
    trunc_ln111_fu_782_p1 <= grp_point_double_1_fu_256_ap_return(329 - 1 downto 0);
    trunc_ln18_fu_522_p1 <= p_Val2_s_fu_150(1 - 1 downto 0);
    trunc_ln24_1_fu_769_p1 <= M_y_V_fu_761_p3(1 - 1 downto 0);
    trunc_ln24_fu_757_p1 <= M_x_V_fu_749_p3(1 - 1 downto 0);
    trunc_ln46_fu_575_p1 <= grp_point_double_1_fu_256_ap_return(329 - 1 downto 0);
    trunc_ln54_fu_800_p1 <= storemerge158_reg_224(329 - 1 downto 0);
    trunc_ln86_fu_791_p1 <= storemerge154_reg_214(329 - 1 downto 0);
    ush_fu_658_p3 <= 
        sext_ln1364_fu_654_p1 when (isNeg_fu_640_p3(0) = '1') else 
        add_ln513_fu_634_p2;
    val_fu_708_p3 <= 
        zext_ln671_fu_694_p1 when (isNeg_fu_640_p3(0) = '1') else 
        tmp_s_fu_698_p4;
    zext_ln119_1_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_530_p3),3));
    zext_ln119_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln18_fu_522_p1),2));
    zext_ln1340_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1340_fu_666_p1),121));
    zext_ln1544_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_30_reg_1038),166));
    zext_ln15_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_616_p4),121));
    zext_ln18_1_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_194),8));
    zext_ln18_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_194),32));
    zext_ln513_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_602_p4),12));
    zext_ln671_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_686_p3),16));
    zext_ln819_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_fu_483_p2),32));
    zext_ln849_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_29_fu_492_p3),64));
end behav;
