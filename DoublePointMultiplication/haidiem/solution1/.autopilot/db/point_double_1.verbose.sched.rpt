

================================================================
== Vitis HLS Report for 'point_double_1'
================================================================
* Date:           Thu Dec 26 19:54:37 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        haidiem
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.041 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_64_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 13 2 
2 --> 3 8 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.41>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%P_read_1 = read i329 @_ssdm_op_Read.ap_auto.i329, i329 %P_read"   --->   Operation 14 'read' 'P_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%lambda_V_14_loc = alloca i64 1"   --->   Operation 15 'alloca' 'lambda_V_14_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_0_03_i5179_loc = alloca i64 1"   --->   Operation 16 'alloca' 'p_0_03_i5179_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_loc6 = alloca i64 1"   --->   Operation 17 'alloca' 'p_loc6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_loc = alloca i64 1"   --->   Operation 18 'alloca' 'p_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%lambda_V_12_loc = alloca i64 1"   --->   Operation 19 'alloca' 'lambda_V_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%i_4_loc = alloca i64 1"   --->   Operation 20 'alloca' 'i_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i_loc = alloca i64 1"   --->   Operation 21 'alloca' 'i_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%u_V_5 = trunc i329 %P_read_1"   --->   Operation 22 'trunc' 'u_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln1064 = zext i166 %u_V_5"   --->   Operation 23 'zext' 'zext_ln1064' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln58 = trunc i329 %P_read_1" [gf2_arithmetic.cpp:58]   --->   Operation 24 'trunc' 'trunc_ln58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln58_1 = trunc i329 %P_read_1" [gf2_arithmetic.cpp:58]   --->   Operation 25 'trunc' 'trunc_ln58_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (3.82ns)   --->   "%icmp_ln1064 = icmp_eq  i166 %u_V_5, i166 0"   --->   Operation 26 'icmp' 'icmp_ln1064' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%br_ln80 = br i1 %icmp_ln1064, void %.preheader.preheader, void %._crit_edge" [gf2_arithmetic.cpp:80]   --->   Operation 27 'br' 'br_ln80' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%u_V_2 = alloca i32 1"   --->   Operation 28 'alloca' 'u_V_2' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%v_V_1 = alloca i32 1"   --->   Operation 29 'alloca' 'v_V_1' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%g_V = alloca i32 1"   --->   Operation 30 'alloca' 'g_V' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_V = alloca i32 1"   --->   Operation 31 'alloca' 'tmp_V' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln1068 = store i166 1, i166 %tmp_V"   --->   Operation 32 'store' 'store_ln1068' <Predicate = (!icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%store_ln1068 = store i166 0, i166 %g_V"   --->   Operation 33 'store' 'store_ln1068' <Predicate = (!icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 34 [1/1] (1.58ns)   --->   "%store_ln1068 = store i166 11692013098647223345629478661730264157247460344009, i166 %v_V_1"   --->   Operation 34 'store' 'store_ln1068' <Predicate = (!icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 35 [1/1] (1.58ns)   --->   "%store_ln1068 = store i166 %u_V_5, i166 %u_V_2"   --->   Operation 35 'store' 'store_ln1068' <Predicate = (!icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln1068 = br void %.preheader"   --->   Operation 36 'br' 'br_ln1068' <Predicate = (!icmp_ln1064)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.41>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%u_V_3 = load i166 %u_V_2"   --->   Operation 37 'load' 'u_V_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%lambda_V_6 = load i166 %tmp_V"   --->   Operation 38 'load' 'lambda_V_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln1068 = trunc i166 %lambda_V_6"   --->   Operation 39 'trunc' 'trunc_ln1068' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (3.82ns)   --->   "%icmp_ln1068 = icmp_eq  i166 %u_V_3, i166 1"   --->   Operation 40 'icmp' 'icmp_ln1068' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %icmp_ln1068, void %codeRepl, void %_Z6bf_invR6ap_intILi166EERKS0_.exit" [gf2_arithmetic.cpp:64]   --->   Operation 41 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%p_Val2_s = partselect i163 @_ssdm_op_PartSelect.i163.i329.i32.i32, i329 %P_read_1, i32 166, i32 328"   --->   Operation 42 'partselect' 'p_Val2_s' <Predicate = (icmp_ln1068)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i329.i32, i329 %P_read_1, i32 166"   --->   Operation 43 'bitselect' 'p_Result_s' <Predicate = (icmp_ln1068)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.27ns)   --->   "%lambda_V = select i1 %p_Result_s, i166 %lambda_V_6, i166 0" [gf2_arithmetic.cpp:39]   --->   Operation 44 'select' 'lambda_V' <Predicate = (icmp_ln1068)> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [2/2] (1.58ns)   --->   "%call_ln39 = call void @point_double.1_Pipeline_VITIS_LOOP_45_1, i166 %lambda_V, i165 %trunc_ln1068, i163 %p_Val2_s, i166 %lambda_V_12_loc" [gf2_arithmetic.cpp:39]   --->   Operation 45 'call' 'call_ln39' <Predicate = (icmp_ln1068)> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln1544_1 = trunc i329 %P_read_1"   --->   Operation 46 'trunc' 'trunc_ln1544_1' <Predicate = (icmp_ln1068)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.27ns)   --->   "%select_ln820 = select i1 %trunc_ln58_1, i166 %u_V_5, i166 0"   --->   Operation 47 'select' 'select_ln820' <Predicate = (icmp_ln1068)> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%p_ph1 = bitconcatenate i332 @_ssdm_op_BitConcatenate.i332.i166.i166, i166 %select_ln820, i166 %u_V_5"   --->   Operation 48 'bitconcatenate' 'p_ph1' <Predicate = (icmp_ln1068)> <Delay = 0.00>
ST_2 : Operation 49 [2/2] (1.58ns)   --->   "%call_ln820 = call void @point_double.1_Pipeline_VITIS_LOOP_45_12, i332 %p_ph1, i165 %trunc_ln58, i332 %p_loc"   --->   Operation 49 'call' 'call_ln820' <Predicate = (icmp_ln1068)> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 5.57>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%v_V_1_load = load i166 %v_V_1"   --->   Operation 50 'load' 'v_V_1_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [2/2] (5.57ns)   --->   "%call_ln0 = call void @point_double.1_Pipeline_VITIS_LOOP_25_1, i166 %u_V_3, i16 %i_loc"   --->   Operation 51 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 52 [2/2] (5.57ns)   --->   "%call_ln0 = call void @point_double.1_Pipeline_VITIS_LOOP_25_11, i166 %v_V_1_load, i16 %i_4_loc"   --->   Operation 52 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 5.57>
ST_4 : Operation 53 [1/2] (5.57ns)   --->   "%call_ln0 = call void @point_double.1_Pipeline_VITIS_LOOP_25_1, i166 %u_V_3, i16 %i_loc"   --->   Operation 53 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 54 [1/2] (5.57ns)   --->   "%call_ln0 = call void @point_double.1_Pipeline_VITIS_LOOP_25_11, i166 %v_V_1_load, i16 %i_4_loc"   --->   Operation 54 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 7.04>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%i_loc_load = load i16 %i_loc"   --->   Operation 55 'load' 'i_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%i_4_loc_load = load i16 %i_4_loc"   --->   Operation 56 'load' 'i_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (2.07ns)   --->   "%add_ln28 = add i16 %i_loc_load, i16 1" [gf2_arithmetic.cpp:28]   --->   Operation 57 'add' 'add_ln28' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i16 %add_ln28" [gf2_arithmetic.cpp:28]   --->   Operation 58 'zext' 'zext_ln28' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (2.07ns)   --->   "%add_ln28_1 = add i16 %i_4_loc_load, i16 1" [gf2_arithmetic.cpp:28]   --->   Operation 59 'add' 'add_ln28_1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i16 %add_ln28_1" [gf2_arithmetic.cpp:65]   --->   Operation 60 'zext' 'zext_ln65' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (2.07ns)   --->   "%j = sub i17 %zext_ln28, i17 %zext_ln65" [gf2_arithmetic.cpp:65]   --->   Operation 61 'sub' 'j' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %j, i32 16" [gf2_arithmetic.cpp:66]   --->   Operation 62 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (2.10ns)   --->   "%sub_ln69 = sub i17 0, i17 %j" [gf2_arithmetic.cpp:69]   --->   Operation 63 'sub' 'sub_ln69' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.78ns)   --->   "%j_1 = select i1 %tmp, i17 %sub_ln69, i17 %j" [gf2_arithmetic.cpp:66]   --->   Operation 64 'select' 'j_1' <Predicate = true> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %j_1, i32 16"   --->   Operation 65 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 7.01>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%g_V_load = load i166 %g_V" [gf2_arithmetic.cpp:66]   --->   Operation 66 'load' 'g_V_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (1.27ns)   --->   "%g_V_1 = select i1 %tmp, i166 %lambda_V_6, i166 %g_V_load" [gf2_arithmetic.cpp:66]   --->   Operation 67 'select' 'g_V_1' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (1.27ns)   --->   "%v_V = select i1 %tmp, i166 %u_V_3, i166 %v_V_1_load" [gf2_arithmetic.cpp:66]   --->   Operation 68 'select' 'v_V' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%sext_ln1691 = sext i17 %j_1"   --->   Operation 69 'sext' 'sext_ln1691' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln1691 = zext i32 %sext_ln1691"   --->   Operation 70 'zext' 'zext_ln1691' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln1691)   --->   "%shl_ln1691 = shl i166 %v_V, i166 %zext_ln1691"   --->   Operation 71 'shl' 'shl_ln1691' <Predicate = (!tmp_19)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node r_1)   --->   "%shl_ln1691_1 = shl i166 %g_V_1, i166 %zext_ln1691"   --->   Operation 72 'shl' 'shl_ln1691_1' <Predicate = (!tmp_19)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (2.10ns)   --->   "%sub_ln1691 = sub i17 0, i17 %j_1"   --->   Operation 73 'sub' 'sub_ln1691' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%sext_ln1691_1 = sext i17 %sub_ln1691"   --->   Operation 74 'sext' 'sext_ln1691_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln1691_1 = zext i32 %sext_ln1691_1"   --->   Operation 75 'zext' 'zext_ln1691_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node select_ln1691)   --->   "%r = ashr i166 %v_V, i166 %zext_ln1691_1"   --->   Operation 76 'ashr' 'r' <Predicate = (tmp_19)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node r_1)   --->   "%ashr_ln1691 = ashr i166 %g_V_1, i166 %zext_ln1691_1"   --->   Operation 77 'ashr' 'ashr_ln1691' <Predicate = (tmp_19)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (4.90ns) (out node of the LUT)   --->   "%select_ln1691 = select i1 %tmp_19, i166 %r, i166 %shl_ln1691"   --->   Operation 78 'select' 'select_ln1691' <Predicate = true> <Delay = 4.90> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (4.90ns) (out node of the LUT)   --->   "%r_1 = select i1 %tmp_19, i166 %ashr_ln1691, i166 %shl_ln1691_1"   --->   Operation 79 'select' 'r_1' <Predicate = true> <Delay = 4.90> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %g_V_1, i166 %g_V" [gf2_arithmetic.cpp:64]   --->   Operation 80 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>
ST_6 : Operation 81 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %v_V, i166 %v_V_1" [gf2_arithmetic.cpp:64]   --->   Operation 81 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>

State 7 <SV = 6> <Delay = 2.86>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%specloopname_ln23 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [gf2_arithmetic.cpp:23]   --->   Operation 82 'specloopname' 'specloopname_ln23' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node ret_6)   --->   "%lambda_V_9 = select i1 %tmp, i166 %g_V_load, i166 %lambda_V_6" [gf2_arithmetic.cpp:66]   --->   Operation 83 'select' 'lambda_V_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node u_V)   --->   "%u_V_6 = select i1 %tmp, i166 %v_V_1_load, i166 %u_V_3" [gf2_arithmetic.cpp:66]   --->   Operation 84 'select' 'u_V_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 85 [1/1] (1.27ns) (out node of the LUT)   --->   "%u_V = xor i166 %select_ln1691, i166 %u_V_6"   --->   Operation 85 'xor' 'u_V' <Predicate = true> <Delay = 1.27> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (1.27ns) (out node of the LUT)   --->   "%ret_6 = xor i166 %r_1, i166 %lambda_V_9"   --->   Operation 86 'xor' 'ret_6' <Predicate = true> <Delay = 1.27> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 87 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %ret_6, i166 %tmp_V" [gf2_arithmetic.cpp:64]   --->   Operation 87 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>
ST_7 : Operation 88 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %u_V, i166 %u_V_2" [gf2_arithmetic.cpp:64]   --->   Operation 88 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln64 = br void %.preheader" [gf2_arithmetic.cpp:64]   --->   Operation 89 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>

State 8 <SV = 2> <Delay = 1.55>
ST_8 : Operation 90 [1/2] (1.55ns)   --->   "%call_ln39 = call void @point_double.1_Pipeline_VITIS_LOOP_45_1, i166 %lambda_V, i165 %trunc_ln1068, i163 %p_Val2_s, i166 %lambda_V_12_loc" [gf2_arithmetic.cpp:39]   --->   Operation 90 'call' 'call_ln39' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 91 [1/2] (1.55ns)   --->   "%call_ln820 = call void @point_double.1_Pipeline_VITIS_LOOP_45_12, i332 %p_ph1, i165 %trunc_ln58, i332 %p_loc"   --->   Operation 91 'call' 'call_ln820' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 3> <Delay = 4.19>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%lambda_V_12_loc_load = load i166 %lambda_V_12_loc"   --->   Operation 92 'load' 'lambda_V_12_loc_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln1544 = trunc i166 %lambda_V_12_loc_load"   --->   Operation 93 'trunc' 'trunc_ln1544' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln1544_2 = trunc i166 %lambda_V_12_loc_load"   --->   Operation 94 'trunc' 'trunc_ln1544_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [1/1] (1.03ns)   --->   "%ret_7 = xor i166 %lambda_V_12_loc_load, i166 %u_V_5"   --->   Operation 95 'xor' 'ret_7' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln1544_3 = trunc i166 %ret_7"   --->   Operation 96 'trunc' 'trunc_ln1544_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 97 [1/1] (1.03ns)   --->   "%xor_ln1544_2 = xor i163 %trunc_ln1544_2, i163 %trunc_ln1544_1"   --->   Operation 97 'xor' 'xor_ln1544_2' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 98 [1/1] (0.97ns)   --->   "%xor_ln1544_3 = xor i1 %trunc_ln1544, i1 %trunc_ln58_1"   --->   Operation 98 'xor' 'xor_ln1544_3' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%p_loc_load = load i332 %p_loc"   --->   Operation 99 'load' 'p_loc_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_s = partselect i166 @_ssdm_op_PartSelect.i166.i332.i32.i32, i332 %p_loc_load, i32 166, i32 331" [gf2_arithmetic.cpp:40]   --->   Operation 100 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%and_ln = bitconcatenate i332 @_ssdm_op_BitConcatenate.i332.i166.i166, i166 %tmp_s, i166 0" [gf2_arithmetic.cpp:40]   --->   Operation 101 'bitconcatenate' 'and_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (0.00ns)   --->   "%or_ln40_1 = bitconcatenate i332 @_ssdm_op_BitConcatenate.i332.i166.i166, i166 %tmp_s, i166 %ret_7" [gf2_arithmetic.cpp:40]   --->   Operation 102 'bitconcatenate' 'or_ln40_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 103 [1/1] (1.57ns)   --->   "%select_ln820_1 = select i1 %xor_ln1544_3, i332 %or_ln40_1, i332 %and_ln"   --->   Operation 103 'select' 'select_ln820_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 104 [1/1] (1.27ns)   --->   "%select_ln820_2 = select i1 %xor_ln1544_3, i166 %ret_7, i166 0"   --->   Operation 104 'select' 'select_ln820_2' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 105 [2/2] (1.58ns)   --->   "%call_ln820 = call void @point_double.1_Pipeline_VITIS_LOOP_45_13, i332 %select_ln820_1, i166 %select_ln820_2, i165 %trunc_ln1544_3, i163 %xor_ln1544_2, i332 %p_loc6, i166 %p_0_03_i5179_loc"   --->   Operation 105 'call' 'call_ln820' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 4> <Delay = 1.55>
ST_10 : Operation 106 [1/2] (1.55ns)   --->   "%call_ln820 = call void @point_double.1_Pipeline_VITIS_LOOP_45_13, i332 %select_ln820_1, i166 %select_ln820_2, i165 %trunc_ln1544_3, i163 %xor_ln1544_2, i332 %p_loc6, i166 %p_0_03_i5179_loc"   --->   Operation 106 'call' 'call_ln820' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 5> <Delay = 3.90>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%p_0_03_i5179_loc_load = load i166 %p_0_03_i5179_loc"   --->   Operation 107 'load' 'p_0_03_i5179_loc_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (1.03ns)   --->   "%lambda_V_10 = xor i166 %ret_7, i166 1"   --->   Operation 108 'xor' 'lambda_V_10' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i166 %lambda_V_10" [gf2_arithmetic.cpp:84]   --->   Operation 109 'trunc' 'trunc_ln84' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node lambda_V_5)   --->   "%xor_ln1544 = xor i1 %xor_ln1544_3, i1 1"   --->   Operation 110 'xor' 'xor_ln1544' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node lambda_V_5)   --->   "%trunc_ln1544_4 = trunc i166 %p_0_03_i5179_loc_load"   --->   Operation 111 'trunc' 'trunc_ln1544_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 112 [1/1] (1.03ns)   --->   "%ret_8 = xor i166 %p_0_03_i5179_loc_load, i166 %lambda_V_10"   --->   Operation 112 'xor' 'ret_8' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node lambda_V_5)   --->   "%p_Result_14 = xor i1 %trunc_ln1544_4, i1 %xor_ln1544"   --->   Operation 113 'xor' 'p_Result_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 114 [1/1] (1.27ns) (out node of the LUT)   --->   "%lambda_V_5 = select i1 %p_Result_14, i166 %lambda_V_10, i166 0" [gf2_arithmetic.cpp:39]   --->   Operation 114 'select' 'lambda_V_5' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 115 [2/2] (1.58ns)   --->   "%call_ln39 = call void @point_double.1_Pipeline_VITIS_LOOP_45_14, i166 %lambda_V_5, i165 %trunc_ln84, i166 %ret_8, i166 %lambda_V_14_loc" [gf2_arithmetic.cpp:39]   --->   Operation 115 'call' 'call_ln39' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 6> <Delay = 1.55>
ST_12 : Operation 116 [1/2] (1.55ns)   --->   "%call_ln39 = call void @point_double.1_Pipeline_VITIS_LOOP_45_14, i166 %lambda_V_5, i165 %trunc_ln84, i166 %ret_8, i166 %lambda_V_14_loc" [gf2_arithmetic.cpp:39]   --->   Operation 116 'call' 'call_ln39' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 7> <Delay = 2.62>
ST_13 : Operation 117 [1/1] (0.00ns)   --->   "%p_loc6_load = load i332 %p_loc6"   --->   Operation 117 'load' 'p_loc6_load' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_13 : Operation 118 [1/1] (0.00ns)   --->   "%lambda_V_14_loc_load = load i166 %lambda_V_14_loc"   --->   Operation 118 'load' 'lambda_V_14_loc_load' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_13 : Operation 119 [1/1] (0.00ns)   --->   "%lhs_V = partselect i166 @_ssdm_op_PartSelect.i166.i332.i32.i32, i332 %p_loc6_load, i32 166, i32 331"   --->   Operation 119 'partselect' 'lhs_V' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_13 : Operation 120 [1/1] (1.03ns)   --->   "%ret = xor i166 %lambda_V_14_loc_load, i166 %lhs_V"   --->   Operation 120 'xor' 'ret' <Predicate = (!icmp_ln1064)> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 121 [1/1] (0.00ns)   --->   "%xor_i_i77_partset = bitconcatenate i332 @_ssdm_op_BitConcatenate.i332.i166.i166, i166 %ret, i166 %ret_8" [gf2_arithmetic.cpp:32]   --->   Operation 121 'bitconcatenate' 'xor_i_i77_partset' <Predicate = (!icmp_ln1064)> <Delay = 0.00>
ST_13 : Operation 122 [1/1] (1.58ns)   --->   "%br_ln0 = br void %._crit_edge"   --->   Operation 122 'br' 'br_ln0' <Predicate = (!icmp_ln1064)> <Delay = 1.58>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%storemerge2 = phi i332 %xor_i_i77_partset, void %_Z6bf_invR6ap_intILi166EERKS0_.exit, i332 %zext_ln1064, void" [gf2_arithmetic.cpp:32]   --->   Operation 123 'phi' 'storemerge2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/1] (0.00ns)   --->   "%ret_ln96 = ret i332 %storemerge2" [gf2_arithmetic.cpp:96]   --->   Operation 124 'ret' 'ret_ln96' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.41ns
The critical path consists of the following:
	wire read operation ('P_read_1') on port 'P_read' [2]  (0 ns)
	'icmp' operation ('icmp_ln1064') [14]  (3.82 ns)
	multiplexor before 'phi' operation ('storemerge2', gf2_arithmetic.cpp:32) with incoming values : ('zext_ln1064') ('xor_i_i77_partset', gf2_arithmetic.cpp:32) [110]  (1.59 ns)

 <State 2>: 5.41ns
The critical path consists of the following:
	'load' operation ('u.V') on local variable 'u.V' [27]  (0 ns)
	'icmp' operation ('icmp_ln1068') [30]  (3.82 ns)
	blocking operation 1.59 ns on control path)

 <State 3>: 5.58ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'point_double.1_Pipeline_VITIS_LOOP_25_1' [36]  (5.58 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'point_double.1_Pipeline_VITIS_LOOP_25_1' [36]  (5.58 ns)

 <State 5>: 7.04ns
The critical path consists of the following:
	'load' operation ('i_loc_load') on local variable 'i_loc' [37]  (0 ns)
	'add' operation ('add_ln28', gf2_arithmetic.cpp:28) [40]  (2.08 ns)
	'sub' operation ('j', gf2_arithmetic.cpp:65) [44]  (2.08 ns)
	'sub' operation ('sub_ln69', gf2_arithmetic.cpp:69) [46]  (2.11 ns)
	'select' operation ('j', gf2_arithmetic.cpp:66) [51]  (0.781 ns)

 <State 6>: 7.02ns
The critical path consists of the following:
	'sub' operation ('sub_ln1691') [57]  (2.11 ns)
	'ashr' operation ('r') [60]  (0 ns)
	'select' operation ('select_ln1691') [62]  (4.91 ns)

 <State 7>: 2.87ns
The critical path consists of the following:
	'select' operation ('lambda.V', gf2_arithmetic.cpp:66) [47]  (0 ns)
	'xor' operation ('ret') [65]  (1.28 ns)
	'store' operation ('store_ln64', gf2_arithmetic.cpp:64) of variable 'ret' on local variable 'tmp.V' [66]  (1.59 ns)

 <State 8>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39) to 'point_double.1_Pipeline_VITIS_LOOP_45_1' [75]  (1.55 ns)

 <State 9>: 4.2ns
The critical path consists of the following:
	'load' operation ('lambda_V_12_loc_load') on local variable 'lambda_V_12_loc' [76]  (0 ns)
	'xor' operation ('ret') [80]  (1.04 ns)
	'select' operation ('select_ln820_1') [91]  (1.57 ns)
	'call' operation ('call_ln820') to 'point_double.1_Pipeline_VITIS_LOOP_45_13' [93]  (1.59 ns)

 <State 10>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln820') to 'point_double.1_Pipeline_VITIS_LOOP_45_13' [93]  (1.55 ns)

 <State 11>: 3.9ns
The critical path consists of the following:
	'xor' operation ('lambda.V') [96]  (1.04 ns)
	'select' operation ('lambda.V', gf2_arithmetic.cpp:39) [102]  (1.28 ns)
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39) to 'point_double.1_Pipeline_VITIS_LOOP_45_14' [103]  (1.59 ns)

 <State 12>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39) to 'point_double.1_Pipeline_VITIS_LOOP_45_14' [103]  (1.55 ns)

 <State 13>: 2.62ns
The critical path consists of the following:
	'load' operation ('p_loc6_load') on local variable 'p_loc6' [94]  (0 ns)
	'xor' operation ('ret') [106]  (1.04 ns)
	multiplexor before 'phi' operation ('storemerge2', gf2_arithmetic.cpp:32) with incoming values : ('zext_ln1064') ('xor_i_i77_partset', gf2_arithmetic.cpp:32) [110]  (1.59 ns)
	'phi' operation ('storemerge2', gf2_arithmetic.cpp:32) with incoming values : ('zext_ln1064') ('xor_i_i77_partset', gf2_arithmetic.cpp:32) [110]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
