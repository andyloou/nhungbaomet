

================================================================
== Vitis HLS Report for 'point_add_1'
================================================================
* Date:           Thu Dec 26 19:54:28 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        haidiem
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.041 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_64_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 13 2 14 
2 --> 3 8 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 
14 --> 15 
15 --> 13 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.74>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read_4 = read i332 @_ssdm_op_Read.ap_auto.i332, i332 %p_read2"   --->   Operation 16 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read_5 = read i166 @_ssdm_op_Read.ap_auto.i166, i166 %p_read1"   --->   Operation 17 'read' 'p_read_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_read_6 = read i166 @_ssdm_op_Read.ap_auto.i166, i166 %p_read"   --->   Operation 18 'read' 'p_read_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%lhs_V_30_loc = alloca i64 1"   --->   Operation 19 'alloca' 'lhs_V_30_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%lhs_V_25_loc = alloca i64 1"   --->   Operation 20 'alloca' 'lhs_V_25_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%c_V_9_loc = alloca i64 1"   --->   Operation 21 'alloca' 'c_V_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%i_27_loc = alloca i64 1"   --->   Operation 22 'alloca' 'i_27_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%i_loc = alloca i64 1"   --->   Operation 23 'alloca' 'i_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln1068 = trunc i166 %p_read_5"   --->   Operation 24 'trunc' 'trunc_ln1068' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%rhs_V = trunc i332 %p_read_4"   --->   Operation 25 'trunc' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (3.82ns)   --->   "%icmp_ln1068 = icmp_ne  i166 %rhs_V, i166 0"   --->   Operation 26 'icmp' 'icmp_ln1068' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%rhs_V_8 = partselect i166 @_ssdm_op_PartSelect.i166.i332.i32.i32, i332 %p_read_4, i32 166, i32 331"   --->   Operation 27 'partselect' 'rhs_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln1068_3 = partselect i163 @_ssdm_op_PartSelect.i163.i332.i32.i32, i332 %p_read_4, i32 166, i32 328"   --->   Operation 28 'partselect' 'trunc_ln1068_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (3.82ns)   --->   "%icmp_ln1068_3 = icmp_ne  i166 %rhs_V_8, i166 0"   --->   Operation 29 'icmp' 'icmp_ln1068_3' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.97ns)   --->   "%and_ln99 = and i1 %icmp_ln1068, i1 %icmp_ln1068_3" [gf2_arithmetic.cpp:99]   --->   Operation 30 'and' 'and_ln99' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.94ns)   --->   "%br_ln99 = br i1 %and_ln99, void %._crit_edge, void" [gf2_arithmetic.cpp:99]   --->   Operation 31 'br' 'br_ln99' <Predicate = true> <Delay = 1.94>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln100)   --->   "%or_ln100 = or i166 %p_read_5, i166 %p_read_6" [gf2_arithmetic.cpp:100]   --->   Operation 32 'or' 'or_ln100' <Predicate = (and_ln99)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (3.82ns) (out node of the LUT)   --->   "%icmp_ln100 = icmp_eq  i166 %or_ln100, i166 0" [gf2_arithmetic.cpp:100]   --->   Operation 33 'icmp' 'icmp_ln100' <Predicate = (and_ln99)> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.94ns)   --->   "%br_ln100 = br i1 %icmp_ln100, void, void %._crit_edge" [gf2_arithmetic.cpp:100]   --->   Operation 34 'br' 'br_ln100' <Predicate = (and_ln99)> <Delay = 1.94>
ST_1 : Operation 35 [1/1] (3.82ns)   --->   "%icmp_ln1064 = icmp_eq  i166 %rhs_V, i166 %p_read_6"   --->   Operation 35 'icmp' 'icmp_ln1064' <Predicate = (and_ln99 & !icmp_ln100)> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln106 = br i1 %icmp_ln1064, void, void" [gf2_arithmetic.cpp:106]   --->   Operation 36 'br' 'br_ln106' <Predicate = (and_ln99 & !icmp_ln100)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%u_V_16 = alloca i32 1"   --->   Operation 37 'alloca' 'u_V_16' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%v_V_4 = alloca i32 1"   --->   Operation 38 'alloca' 'v_V_4' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%g_V = alloca i32 1"   --->   Operation 39 'alloca' 'g_V' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_V = alloca i32 1"   --->   Operation 40 'alloca' 'tmp_V' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (1.03ns)   --->   "%ret_24 = xor i166 %rhs_V, i166 %p_read_6"   --->   Operation 41 'xor' 'ret_24' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln1544 = trunc i166 %p_read_5"   --->   Operation 42 'trunc' 'trunc_ln1544' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i332.i32, i332 %p_read_4, i32 166"   --->   Operation 43 'bitselect' 'tmp' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.03ns)   --->   "%ret_25 = xor i163 %trunc_ln1068_3, i163 %trunc_ln1068"   --->   Operation 44 'xor' 'ret_25' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.97ns)   --->   "%xor_ln1544_21 = xor i1 %tmp, i1 %trunc_ln1544"   --->   Operation 45 'xor' 'xor_ln1544_21' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 1, i166 %tmp_V" [gf2_arithmetic.cpp:64]   --->   Operation 46 'store' 'store_ln64' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 0, i166 %g_V" [gf2_arithmetic.cpp:64]   --->   Operation 47 'store' 'store_ln64' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 11692013098647223345629478661730264157247460344009, i166 %v_V_4" [gf2_arithmetic.cpp:64]   --->   Operation 48 'store' 'store_ln64' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %ret_24, i166 %u_V_16" [gf2_arithmetic.cpp:64]   --->   Operation 49 'store' 'store_ln64' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.58>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln64 = br void" [gf2_arithmetic.cpp:64]   --->   Operation 50 'br' 'br_ln64' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (3.82ns)   --->   "%icmp_ln1064_2 = icmp_eq  i166 %rhs_V_8, i166 %p_read_5"   --->   Operation 51 'icmp' 'icmp_ln1064_2' <Predicate = (and_ln99 & !icmp_ln100 & icmp_ln1064)> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (1.94ns)   --->   "%br_ln107 = br i1 %icmp_ln1064_2, void %._crit_edge, void" [gf2_arithmetic.cpp:107]   --->   Operation 52 'br' 'br_ln107' <Predicate = (and_ln99 & !icmp_ln100 & icmp_ln1064)> <Delay = 1.94>

State 2 <SV = 1> <Delay = 5.41>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%u_V_18 = load i166 %u_V_16"   --->   Operation 53 'load' 'u_V_18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%c_V = load i166 %tmp_V"   --->   Operation 54 'load' 'c_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln1068_4 = trunc i166 %c_V"   --->   Operation 55 'trunc' 'trunc_ln1068_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (3.82ns)   --->   "%icmp_ln1068_4 = icmp_eq  i166 %u_V_18, i166 1"   --->   Operation 56 'icmp' 'icmp_ln1068_4' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %icmp_ln1068_4, void %codeRepl, void %_Z6bf_invR6ap_intILi166EERKS0_.229.exit" [gf2_arithmetic.cpp:64]   --->   Operation 57 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.27ns)   --->   "%tmp_V_21 = select i1 %xor_ln1544_21, i166 %c_V, i166 0" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:119]   --->   Operation 58 'select' 'tmp_V_21' <Predicate = (icmp_ln1068_4)> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [2/2] (1.58ns)   --->   "%call_ln39 = call void @point_add.1_Pipeline_VITIS_LOOP_45_1, i166 %tmp_V_21, i165 %trunc_ln1068_4, i163 %ret_25, i166 %c_V_9_loc" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:119]   --->   Operation 59 'call' 'call_ln39' <Predicate = (icmp_ln1068_4)> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 5.57>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%v_V_4_load = load i166 %v_V_4"   --->   Operation 60 'load' 'v_V_4_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [2/2] (5.57ns)   --->   "%call_ln0 = call void @point_add.1_Pipeline_VITIS_LOOP_25_1, i166 %u_V_18, i16 %i_loc"   --->   Operation 61 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 62 [2/2] (5.57ns)   --->   "%call_ln0 = call void @point_add.1_Pipeline_VITIS_LOOP_25_19, i166 %v_V_4_load, i16 %i_27_loc"   --->   Operation 62 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 5.57>
ST_4 : Operation 63 [1/2] (5.57ns)   --->   "%call_ln0 = call void @point_add.1_Pipeline_VITIS_LOOP_25_1, i166 %u_V_18, i16 %i_loc"   --->   Operation 63 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 64 [1/2] (5.57ns)   --->   "%call_ln0 = call void @point_add.1_Pipeline_VITIS_LOOP_25_19, i166 %v_V_4_load, i16 %i_27_loc"   --->   Operation 64 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 7.04>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%i_loc_load = load i16 %i_loc"   --->   Operation 65 'load' 'i_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%i_27_loc_load = load i16 %i_27_loc"   --->   Operation 66 'load' 'i_27_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (2.07ns)   --->   "%add_ln28 = add i16 %i_loc_load, i16 1" [gf2_arithmetic.cpp:28]   --->   Operation 67 'add' 'add_ln28' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i16 %add_ln28" [gf2_arithmetic.cpp:28]   --->   Operation 68 'zext' 'zext_ln28' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (2.07ns)   --->   "%add_ln28_4 = add i16 %i_27_loc_load, i16 1" [gf2_arithmetic.cpp:28]   --->   Operation 69 'add' 'add_ln28_4' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i16 %add_ln28_4" [gf2_arithmetic.cpp:65]   --->   Operation 70 'zext' 'zext_ln65' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (2.07ns)   --->   "%j = sub i17 %zext_ln28, i17 %zext_ln65" [gf2_arithmetic.cpp:65]   --->   Operation 71 'sub' 'j' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_23 = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %j, i32 16" [gf2_arithmetic.cpp:66]   --->   Operation 72 'bitselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (2.10ns)   --->   "%sub_ln69 = sub i17 0, i17 %j" [gf2_arithmetic.cpp:69]   --->   Operation 73 'sub' 'sub_ln69' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.78ns)   --->   "%j_4 = select i1 %tmp_23, i17 %sub_ln69, i17 %j" [gf2_arithmetic.cpp:66]   --->   Operation 74 'select' 'j_4' <Predicate = true> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_24 = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %j_4, i32 16"   --->   Operation 75 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 7.01>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%g_V_load = load i166 %g_V" [gf2_arithmetic.cpp:66]   --->   Operation 76 'load' 'g_V_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (1.27ns)   --->   "%g_V_4 = select i1 %tmp_23, i166 %c_V, i166 %g_V_load" [gf2_arithmetic.cpp:66]   --->   Operation 77 'select' 'g_V_4' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (1.27ns)   --->   "%v_V = select i1 %tmp_23, i166 %u_V_18, i166 %v_V_4_load" [gf2_arithmetic.cpp:66]   --->   Operation 78 'select' 'v_V' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln1691 = sext i17 %j_4"   --->   Operation 79 'sext' 'sext_ln1691' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln1691 = zext i32 %sext_ln1691"   --->   Operation 80 'zext' 'zext_ln1691' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node select_ln1691)   --->   "%shl_ln1691 = shl i166 %v_V, i166 %zext_ln1691"   --->   Operation 81 'shl' 'shl_ln1691' <Predicate = (!tmp_24)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node r_4)   --->   "%shl_ln1691_4 = shl i166 %g_V_4, i166 %zext_ln1691"   --->   Operation 82 'shl' 'shl_ln1691_4' <Predicate = (!tmp_24)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (2.10ns)   --->   "%sub_ln1691 = sub i17 0, i17 %j_4"   --->   Operation 83 'sub' 'sub_ln1691' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%sext_ln1691_4 = sext i17 %sub_ln1691"   --->   Operation 84 'sext' 'sext_ln1691_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln1691_4 = zext i32 %sext_ln1691_4"   --->   Operation 85 'zext' 'zext_ln1691_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node select_ln1691)   --->   "%r = ashr i166 %v_V, i166 %zext_ln1691_4"   --->   Operation 86 'ashr' 'r' <Predicate = (tmp_24)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node r_4)   --->   "%ashr_ln1691 = ashr i166 %g_V_4, i166 %zext_ln1691_4"   --->   Operation 87 'ashr' 'ashr_ln1691' <Predicate = (tmp_24)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/1] (4.90ns) (out node of the LUT)   --->   "%select_ln1691 = select i1 %tmp_24, i166 %r, i166 %shl_ln1691"   --->   Operation 88 'select' 'select_ln1691' <Predicate = true> <Delay = 4.90> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (4.90ns) (out node of the LUT)   --->   "%r_4 = select i1 %tmp_24, i166 %ashr_ln1691, i166 %shl_ln1691_4"   --->   Operation 89 'select' 'r_4' <Predicate = true> <Delay = 4.90> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 90 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %g_V_4, i166 %g_V" [gf2_arithmetic.cpp:64]   --->   Operation 90 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>
ST_6 : Operation 91 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %v_V, i166 %v_V_4" [gf2_arithmetic.cpp:64]   --->   Operation 91 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>

State 7 <SV = 6> <Delay = 2.86>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%specloopname_ln23 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [gf2_arithmetic.cpp:23]   --->   Operation 92 'specloopname' 'specloopname_ln23' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node ret_23)   --->   "%lhs_V_16 = select i1 %tmp_23, i166 %g_V_load, i166 %c_V" [gf2_arithmetic.cpp:66]   --->   Operation 93 'select' 'lhs_V_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node u_V)   --->   "%u_V_20 = select i1 %tmp_23, i166 %v_V_4_load, i166 %u_V_18" [gf2_arithmetic.cpp:66]   --->   Operation 94 'select' 'u_V_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (1.27ns) (out node of the LUT)   --->   "%u_V = xor i166 %select_ln1691, i166 %u_V_20"   --->   Operation 95 'xor' 'u_V' <Predicate = true> <Delay = 1.27> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 96 [1/1] (1.27ns) (out node of the LUT)   --->   "%ret_23 = xor i166 %r_4, i166 %lhs_V_16"   --->   Operation 96 'xor' 'ret_23' <Predicate = true> <Delay = 1.27> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %ret_23, i166 %tmp_V" [gf2_arithmetic.cpp:64]   --->   Operation 97 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>
ST_7 : Operation 98 [1/1] (1.58ns)   --->   "%store_ln64 = store i166 %u_V, i166 %u_V_16" [gf2_arithmetic.cpp:64]   --->   Operation 98 'store' 'store_ln64' <Predicate = true> <Delay = 1.58>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%br_ln64 = br void" [gf2_arithmetic.cpp:64]   --->   Operation 99 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>

State 8 <SV = 2> <Delay = 1.55>
ST_8 : Operation 100 [1/2] (1.55ns)   --->   "%call_ln39 = call void @point_add.1_Pipeline_VITIS_LOOP_45_1, i166 %tmp_V_21, i165 %trunc_ln1068_4, i163 %ret_25, i166 %c_V_9_loc" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:119]   --->   Operation 100 'call' 'call_ln39' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 3> <Delay = 2.86>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%c_V_9_loc_load = load i166 %c_V_9_loc"   --->   Operation 101 'load' 'c_V_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (0.00ns)   --->   "%empty = trunc i166 %c_V_9_loc_load"   --->   Operation 102 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%empty_51 = trunc i166 %c_V_9_loc_load"   --->   Operation 103 'trunc' 'empty_51' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (0.00ns)   --->   "%empty_52 = trunc i166 %c_V_9_loc_load"   --->   Operation 104 'trunc' 'empty_52' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 105 [1/1] (1.27ns)   --->   "%tmp_V_22 = select i1 %empty_52, i166 %c_V_9_loc_load, i166 0" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:121]   --->   Operation 105 'select' 'tmp_V_22' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 106 [2/2] (1.58ns)   --->   "%call_ln39 = call void @point_add.1_Pipeline_VITIS_LOOP_45_110, i166 %tmp_V_22, i165 %empty, i163 %empty_51, i166 %lhs_V_25_loc" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:121]   --->   Operation 106 'call' 'call_ln39' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 4> <Delay = 1.55>
ST_10 : Operation 107 [1/2] (1.55ns)   --->   "%call_ln39 = call void @point_add.1_Pipeline_VITIS_LOOP_45_110, i166 %tmp_V_22, i165 %empty, i163 %empty_51, i166 %lhs_V_25_loc" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:121]   --->   Operation 107 'call' 'call_ln39' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 5> <Delay = 4.94>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%lhs_V_25_loc_load = load i166 %lhs_V_25_loc"   --->   Operation 108 'load' 'lhs_V_25_loc_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node d_V)   --->   "%xor_ln904 = xor i166 %lhs_V_25_loc_load, i166 %ret_24"   --->   Operation 109 'xor' 'xor_ln904' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node d_V)   --->   "%xor_ln904_4 = xor i166 %c_V_9_loc_load, i166 1"   --->   Operation 110 'xor' 'xor_ln904_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 111 [1/1] (1.03ns) (out node of the LUT)   --->   "%d_V = xor i166 %xor_ln904_4, i166 %xor_ln904"   --->   Operation 111 'xor' 'd_V' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 112 [1/1] (1.03ns)   --->   "%ret_26 = xor i166 %d_V, i166 %p_read_6"   --->   Operation 112 'xor' 'ret_26' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln1544_8 = trunc i166 %ret_26"   --->   Operation 113 'trunc' 'trunc_ln1544_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 114 [1/1] (1.27ns)   --->   "%tmp_V_24 = select i1 %empty_52, i166 %ret_26, i166 0" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:127]   --->   Operation 114 'select' 'tmp_V_24' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 115 [2/2] (1.58ns)   --->   "%call_ln39 = call void @point_add.1_Pipeline_VITIS_LOOP_45_111, i166 %tmp_V_24, i165 %trunc_ln1544_8, i163 %empty_51, i166 %lhs_V_30_loc" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:127]   --->   Operation 115 'call' 'call_ln39' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 6> <Delay = 1.55>
ST_12 : Operation 116 [1/2] (1.55ns)   --->   "%call_ln39 = call void @point_add.1_Pipeline_VITIS_LOOP_45_111, i166 %tmp_V_24, i165 %trunc_ln1544_8, i163 %empty_51, i166 %lhs_V_30_loc" [gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:127]   --->   Operation 116 'call' 'call_ln39' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 7> <Delay = 2.98>
ST_13 : Operation 117 [1/1] (0.00ns)   --->   "%lhs_V_30_loc_load = load i166 %lhs_V_30_loc"   --->   Operation 117 'load' 'lhs_V_30_loc_load' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00>
ST_13 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node ret)   --->   "%xor_ln1544 = xor i166 %d_V, i166 %p_read_5"   --->   Operation 118 'xor' 'xor_ln1544' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 119 [1/1] (1.03ns) (out node of the LUT)   --->   "%ret = xor i166 %xor_ln1544, i166 %lhs_V_30_loc_load"   --->   Operation 119 'xor' 'ret' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 120 [1/1] (1.94ns)   --->   "%br_ln0 = br void %._crit_edge"   --->   Operation 120 'br' 'br_ln0' <Predicate = (and_ln99 & !icmp_ln100 & !icmp_ln1064)> <Delay = 1.94>
ST_13 : Operation 121 [1/1] (0.00ns)   --->   "%x1_3 = phi i166 %d_V, void %_Z6bf_invR6ap_intILi166EERKS0_.229.exit, i166 %x1_ret, void, i166 %p_read_6, void, i166 %rhs_V, void, i166 0, void"   --->   Operation 121 'phi' 'x1_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 122 [1/1] (0.00ns)   --->   "%y1_3 = phi i166 %ret, void %_Z6bf_invR6ap_intILi166EERKS0_.229.exit, i166 %y1_ret, void, i166 %p_read_5, void, i166 %rhs_V_8, void, i166 0, void"   --->   Operation 122 'phi' 'y1_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%mrv = insertvalue i332 <undef>, i166 %x1_3" [gf2_arithmetic.cpp:134]   --->   Operation 123 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i332 %mrv, i166 %y1_3" [gf2_arithmetic.cpp:134]   --->   Operation 124 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 125 [1/1] (0.00ns)   --->   "%ret_ln134 = ret i332 %mrv_1" [gf2_arithmetic.cpp:134]   --->   Operation 125 'ret' 'ret_ln134' <Predicate = true> <Delay = 0.00>

State 14 <SV = 5> <Delay = 5.41>
ST_14 : Operation 126 [2/2] (5.41ns)   --->   "%call_ret1 = call i332 @point_double, i166 %p_read_6, i163 %trunc_ln1068" [gf2_arithmetic.cpp:108]   --->   Operation 126 'call' 'call_ret1' <Predicate = true> <Delay = 5.41> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 6> <Delay = 1.94>
ST_15 : Operation 127 [1/2] (0.00ns)   --->   "%call_ret1 = call i332 @point_double, i166 %p_read_6, i163 %trunc_ln1068" [gf2_arithmetic.cpp:108]   --->   Operation 127 'call' 'call_ret1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 128 [1/1] (0.00ns)   --->   "%x1_ret = extractvalue i332 %call_ret1" [gf2_arithmetic.cpp:108]   --->   Operation 128 'extractvalue' 'x1_ret' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 129 [1/1] (0.00ns)   --->   "%y1_ret = extractvalue i332 %call_ret1" [gf2_arithmetic.cpp:108]   --->   Operation 129 'extractvalue' 'y1_ret' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 130 [1/1] (1.94ns)   --->   "%br_ln109 = br void %._crit_edge" [gf2_arithmetic.cpp:109]   --->   Operation 130 'br' 'br_ln109' <Predicate = true> <Delay = 1.94>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 6.75ns
The critical path consists of the following:
	wire read operation ('p_read_4') on port 'p_read2' [4]  (0 ns)
	'icmp' operation ('icmp_ln1068_3') [17]  (3.82 ns)
	'and' operation ('and_ln99', gf2_arithmetic.cpp:99) [18]  (0.978 ns)
	multiplexor before 'phi' operation ('d.V') with incoming values : ('p_read_6') ('rhs.V') ('d.V') ('x1_ret', gf2_arithmetic.cpp:108) [117]  (1.95 ns)

 <State 2>: 5.41ns
The critical path consists of the following:
	'load' operation ('u.V') on local variable 'u.V' [43]  (0 ns)
	'icmp' operation ('icmp_ln1068_4') [46]  (3.82 ns)
	blocking operation 1.59 ns on control path)

 <State 3>: 5.58ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'point_add.1_Pipeline_VITIS_LOOP_25_1' [52]  (5.58 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'point_add.1_Pipeline_VITIS_LOOP_25_1' [52]  (5.58 ns)

 <State 5>: 7.04ns
The critical path consists of the following:
	'load' operation ('i_loc_load') on local variable 'i_loc' [53]  (0 ns)
	'add' operation ('add_ln28', gf2_arithmetic.cpp:28) [56]  (2.08 ns)
	'sub' operation ('j', gf2_arithmetic.cpp:65) [60]  (2.08 ns)
	'sub' operation ('sub_ln69', gf2_arithmetic.cpp:69) [62]  (2.11 ns)
	'select' operation ('j', gf2_arithmetic.cpp:66) [67]  (0.781 ns)

 <State 6>: 7.02ns
The critical path consists of the following:
	'sub' operation ('sub_ln1691') [73]  (2.11 ns)
	'ashr' operation ('r') [76]  (0 ns)
	'select' operation ('select_ln1691') [78]  (4.91 ns)

 <State 7>: 2.87ns
The critical path consists of the following:
	'select' operation ('lhs.V', gf2_arithmetic.cpp:66) [63]  (0 ns)
	'xor' operation ('ret') [81]  (1.28 ns)
	'store' operation ('store_ln64', gf2_arithmetic.cpp:64) of variable 'ret' on local variable 'tmp.V' [82]  (1.59 ns)

 <State 8>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:119) to 'point_add.1_Pipeline_VITIS_LOOP_45_1' [89]  (1.55 ns)

 <State 9>: 2.87ns
The critical path consists of the following:
	'load' operation ('c_V_9_loc_load') on local variable 'c_V_9_loc' [90]  (0 ns)
	'select' operation ('tmp.V', gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:121) [94]  (1.28 ns)
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:121) to 'point_add.1_Pipeline_VITIS_LOOP_45_110' [95]  (1.59 ns)

 <State 10>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:121) to 'point_add.1_Pipeline_VITIS_LOOP_45_110' [95]  (1.55 ns)

 <State 11>: 4.94ns
The critical path consists of the following:
	'load' operation ('lhs_V_25_loc_load') on local variable 'lhs_V_25_loc' [96]  (0 ns)
	'xor' operation ('xor_ln904') [97]  (0 ns)
	'xor' operation ('d.V') [99]  (1.04 ns)
	'xor' operation ('ret') [100]  (1.04 ns)
	'select' operation ('tmp.V', gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:127) [102]  (1.28 ns)
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:127) to 'point_add.1_Pipeline_VITIS_LOOP_45_111' [103]  (1.59 ns)

 <State 12>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln39', gf2_arithmetic.cpp:39->gf2_arithmetic.cpp:127) to 'point_add.1_Pipeline_VITIS_LOOP_45_111' [103]  (1.55 ns)

 <State 13>: 2.98ns
The critical path consists of the following:
	'load' operation ('lhs_V_30_loc_load') on local variable 'lhs_V_30_loc' [104]  (0 ns)
	'xor' operation ('ret') [106]  (1.04 ns)
	multiplexor before 'phi' operation ('ret') with incoming values : ('p_read_5') ('rhs.V') ('ret') ('y1_ret', gf2_arithmetic.cpp:108) [118]  (1.95 ns)
	'phi' operation ('ret') with incoming values : ('p_read_5') ('rhs.V') ('ret') ('y1_ret', gf2_arithmetic.cpp:108) [118]  (0 ns)

 <State 14>: 5.41ns
The critical path consists of the following:
	'call' operation ('call_ret1', gf2_arithmetic.cpp:108) to 'point_double' [112]  (5.41 ns)

 <State 15>: 1.95ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('d.V') with incoming values : ('p_read_6') ('rhs.V') ('d.V') ('x1_ret', gf2_arithmetic.cpp:108) [117]  (1.95 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
