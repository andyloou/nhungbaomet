-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Radix2wDPM_point_add_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (165 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (165 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (331 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (165 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (165 downto 0) );
end;


architecture behav of Radix2wDPM_point_add_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv166_lc_2 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv166_lc_3 : STD_LOGIC_VECTOR (165 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001001";
    constant ap_const_lv166_lc_1 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100110";
    constant ap_const_lv32_14B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001011";
    constant ap_const_lv32_148 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln1068_fu_188_p1 : STD_LOGIC_VECTOR (162 downto 0);
    signal trunc_ln1068_reg_651 : STD_LOGIC_VECTOR (162 downto 0);
    signal rhs_V_fu_192_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal rhs_V_8_fu_202_p4 : STD_LOGIC_VECTOR (165 downto 0);
    signal and_ln99_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln99_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_670 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_24_fu_252_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_24_reg_706 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_25_fu_270_p2 : STD_LOGIC_VECTOR (162 downto 0);
    signal ret_25_reg_711 : STD_LOGIC_VECTOR (162 downto 0);
    signal xor_ln1544_21_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1544_21_reg_716 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1068_4_fu_314_p1 : STD_LOGIC_VECTOR (164 downto 0);
    signal trunc_ln1068_4_reg_730 : STD_LOGIC_VECTOR (164 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_V_21_fu_325_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_V_21_reg_738 : STD_LOGIC_VECTOR (165 downto 0);
    signal icmp_ln1068_4_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_4_load_reg_743 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_23_fu_369_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal j_4_fu_383_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_4_reg_756 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_reg_762 : STD_LOGIC_VECTOR (0 downto 0);
    signal g_V_load_reg_768 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln1691_fu_457_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal select_ln1691_reg_773 : STD_LOGIC_VECTOR (165 downto 0);
    signal r_4_fu_464_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal r_4_reg_778 : STD_LOGIC_VECTOR (165 downto 0);
    signal empty_fu_514_p1 : STD_LOGIC_VECTOR (164 downto 0);
    signal empty_reg_786 : STD_LOGIC_VECTOR (164 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal empty_51_fu_519_p1 : STD_LOGIC_VECTOR (162 downto 0);
    signal empty_51_reg_791 : STD_LOGIC_VECTOR (162 downto 0);
    signal empty_52_fu_524_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_22_fu_528_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_V_22_reg_802 : STD_LOGIC_VECTOR (165 downto 0);
    signal d_V_fu_550_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal d_V_reg_807 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln1544_8_fu_561_p1 : STD_LOGIC_VECTOR (164 downto 0);
    signal trunc_ln1544_8_reg_813 : STD_LOGIC_VECTOR (164 downto 0);
    signal tmp_V_24_fu_566_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_V_24_reg_818 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out_ap_vld : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_i_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_i_out_ap_vld : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_i_27_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_i_27_out_ap_vld : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_lhs_V_25_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_lhs_V_25_out_ap_vld : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_lhs_V_30_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_lhs_V_30_out_ap_vld : STD_LOGIC;
    signal grp_point_double_fu_182_ap_start : STD_LOGIC;
    signal grp_point_double_fu_182_ap_done : STD_LOGIC;
    signal grp_point_double_fu_182_ap_idle : STD_LOGIC;
    signal grp_point_double_fu_182_ap_ready : STD_LOGIC;
    signal grp_point_double_fu_182_ap_return_0 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_double_fu_182_ap_return_1 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_phi_mux_x1_3_phi_fu_116_p10 : STD_LOGIC_VECTOR (165 downto 0);
    signal x1_3_reg_112 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln1064_2_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_fu_581_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_phi_mux_y1_3_phi_fu_133_p10 : STD_LOGIC_VECTOR (165 downto 0);
    signal y1_3_reg_129 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start_reg : STD_LOGIC := '0';
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_point_double_fu_182_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal u_V_16_fu_78 : STD_LOGIC_VECTOR (165 downto 0);
    signal u_V_fu_491_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal v_V_4_fu_82 : STD_LOGIC_VECTOR (165 downto 0);
    signal v_V_fu_408_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal g_V_fu_86 : STD_LOGIC_VECTOR (165 downto 0);
    signal g_V_4_fu_402_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_V_fu_90 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_23_fu_496_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal icmp_ln1068_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1068_3_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln100_fu_234_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal trunc_ln1068_3_fu_212_p4 : STD_LOGIC_VECTOR (162 downto 0);
    signal tmp_fu_262_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1544_fu_258_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_fu_343_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln28_4_fu_353_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln28_fu_349_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln65_fu_359_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_fu_363_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln69_fu_377_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1691_fu_413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1691_fu_416_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal sub_ln1691_fu_432_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1691_4_fu_437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1691_4_fu_441_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal r_fu_445_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal shl_ln1691_fu_420_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ashr_ln1691_fu_451_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal shl_ln1691_4_fu_426_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal u_V_20_fu_486_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal lhs_V_16_fu_481_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal xor_ln904_4_fu_545_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal xor_ln904_fu_540_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_26_fu_556_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal xor_ln1544_fu_577_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_45_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_V_33 : IN STD_LOGIC_VECTOR (165 downto 0);
        c_V : IN STD_LOGIC_VECTOR (164 downto 0);
        ret_33 : IN STD_LOGIC_VECTOR (162 downto 0);
        c_V_9_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        c_V_9_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_25_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        u_V_19 : IN STD_LOGIC_VECTOR (165 downto 0);
        i_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_25_19 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v_V_8 : IN STD_LOGIC_VECTOR (165 downto 0);
        i_27_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_27_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_45_110 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_V_35 : IN STD_LOGIC_VECTOR (165 downto 0);
        c_V_9_reload : IN STD_LOGIC_VECTOR (164 downto 0);
        c_V_10_cast4 : IN STD_LOGIC_VECTOR (162 downto 0);
        lhs_V_25_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        lhs_V_25_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_45_111 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_V_36 : IN STD_LOGIC_VECTOR (165 downto 0);
        ret_34 : IN STD_LOGIC_VECTOR (164 downto 0);
        c_V_10_cast4 : IN STD_LOGIC_VECTOR (162 downto 0);
        lhs_V_30_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        lhs_V_30_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_double IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        y_V_read : IN STD_LOGIC_VECTOR (162 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (165 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;



begin
    grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146 : component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_45_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_ready,
        tmp_V_33 => tmp_V_21_reg_738,
        c_V => trunc_ln1068_4_reg_730,
        ret_33 => ret_25_reg_711,
        c_V_9_out => grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out,
        c_V_9_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out_ap_vld);

    grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154 : component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_25_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_ready,
        u_V_19 => u_V_16_fu_78,
        i_out => grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_i_out,
        i_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_i_out_ap_vld);

    grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160 : component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_25_19
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_ready,
        v_V_8 => v_V_4_fu_82,
        i_27_out => grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_i_27_out,
        i_27_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_i_27_out_ap_vld);

    grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166 : component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_45_110
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_ready,
        tmp_V_35 => tmp_V_22_reg_802,
        c_V_9_reload => empty_reg_786,
        c_V_10_cast4 => empty_51_reg_791,
        lhs_V_25_out => grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_lhs_V_25_out,
        lhs_V_25_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_lhs_V_25_out_ap_vld);

    grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174 : component Radix2wDPM_point_add_1_Pipeline_VITIS_LOOP_45_111
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_ready,
        tmp_V_36 => tmp_V_24_reg_818,
        ret_34 => trunc_ln1544_8_reg_813,
        c_V_10_cast4 => empty_51_reg_791,
        lhs_V_30_out => grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_lhs_V_30_out,
        lhs_V_30_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_lhs_V_30_out_ap_vld);

    grp_point_double_fu_182 : component Radix2wDPM_point_double
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_double_fu_182_ap_start,
        ap_done => grp_point_double_fu_182_ap_done,
        ap_idle => grp_point_double_fu_182_ap_idle,
        ap_ready => grp_point_double_fu_182_ap_ready,
        x_V_read => p_read,
        y_V_read => trunc_ln1068_reg_651,
        ap_return_0 => grp_point_double_fu_182_ap_return_0,
        ap_return_1 => grp_point_double_fu_182_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv166_lc_2;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_return_0_preg <= ap_phi_mux_x1_3_phi_fu_116_p10;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv166_lc_2;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_return_1_preg <= ap_phi_mux_y1_3_phi_fu_133_p10;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1068_4_fu_319_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_double_fu_182_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_double_fu_182_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_point_double_fu_182_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_double_fu_182_ap_ready = ap_const_logic_1)) then 
                    grp_point_double_fu_182_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    g_V_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                g_V_fu_86 <= ap_const_lv166_lc_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                g_V_fu_86 <= g_V_4_fu_402_p3;
            end if; 
        end if;
    end process;

    tmp_V_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tmp_V_fu_90 <= ap_const_lv166_lc_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                tmp_V_fu_90 <= ret_23_fu_496_p2;
            end if; 
        end if;
    end process;

    u_V_16_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                u_V_16_fu_78 <= ret_24_fu_252_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                u_V_16_fu_78 <= u_V_fu_491_p2;
            end if; 
        end if;
    end process;

    v_V_4_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v_V_4_fu_82 <= ap_const_lv166_lc_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                v_V_4_fu_82 <= v_V_fu_408_p3;
            end if; 
        end if;
    end process;

    x1_3_reg_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (icmp_ln1064_2_fu_302_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x1_3_reg_112 <= ap_const_lv166_lc_2;
            elsif (((ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x1_3_reg_112 <= rhs_V_fu_192_p1;
            elsif (((ap_const_lv1_0 = and_ln99_fu_228_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x1_3_reg_112 <= p_read;
            elsif (((grp_point_double_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                x1_3_reg_112 <= grp_point_double_fu_182_ap_return_0;
            elsif (((icmp_ln1064_reg_674 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_reg_666) and (icmp_ln100_reg_670 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                x1_3_reg_112 <= d_V_reg_807;
            end if; 
        end if;
    end process;

    y1_3_reg_129_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (icmp_ln1064_2_fu_302_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y1_3_reg_129 <= ap_const_lv166_lc_2;
            elsif (((ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y1_3_reg_129 <= p_read2(331 downto 166);
            elsif (((ap_const_lv1_0 = and_ln99_fu_228_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y1_3_reg_129 <= p_read1;
            elsif (((grp_point_double_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                y1_3_reg_129 <= grp_point_double_fu_182_ap_return_1;
            elsif (((icmp_ln1064_reg_674 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_reg_666) and (icmp_ln100_reg_670 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                y1_3_reg_129 <= ret_fu_581_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                and_ln99_reg_666 <= and_ln99_fu_228_p2;
                trunc_ln1068_reg_651 <= trunc_ln1068_fu_188_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                d_V_reg_807 <= d_V_fu_550_p2;
                tmp_V_24_reg_818 <= tmp_V_24_fu_566_p3;
                trunc_ln1544_8_reg_813 <= trunc_ln1544_8_fu_561_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                empty_51_reg_791 <= empty_51_fu_519_p1;
                empty_52_reg_797 <= empty_52_fu_524_p1;
                empty_reg_786 <= empty_fu_514_p1;
                tmp_V_22_reg_802 <= tmp_V_22_fu_528_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                g_V_load_reg_768 <= g_V_fu_86;
                r_4_reg_778 <= r_4_fu_464_p3;
                select_ln1691_reg_773 <= select_ln1691_fu_457_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln99_fu_228_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln100_reg_670 <= icmp_ln100_fu_240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln1064_reg_674 <= icmp_ln1064_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                j_4_reg_756 <= j_4_fu_383_p3;
                tmp_23_reg_748 <= j_fu_363_p2(16 downto 16);
                tmp_24_reg_762 <= j_4_fu_383_p3(16 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                ret_24_reg_706 <= ret_24_fu_252_p2;
                ret_25_reg_711 <= ret_25_fu_270_p2;
                xor_ln1544_21_reg_716 <= xor_ln1544_21_fu_276_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1068_4_fu_319_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_21_reg_738 <= tmp_V_21_fu_325_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                trunc_ln1068_4_reg_730 <= trunc_ln1068_4_fu_314_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                v_V_4_load_reg_743 <= v_V_4_fu_82;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, and_ln99_fu_228_p2, icmp_ln100_fu_240_p2, icmp_ln1064_fu_246_p2, ap_CS_fsm_state2, icmp_ln1068_4_fu_319_p2, ap_CS_fsm_state15, grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_done, grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_done, grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_done, grp_point_double_fu_182_ap_done, icmp_ln1064_2_fu_302_p2, ap_CS_fsm_state8, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln1064_fu_246_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (icmp_ln1064_2_fu_302_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((icmp_ln1064_fu_246_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_228_p2) and (icmp_ln100_fu_240_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv1_0 = and_ln99_fu_228_p2) or ((icmp_ln100_fu_240_p2 = ap_const_lv1_1) or ((icmp_ln1064_fu_246_p2 = ap_const_lv1_1) and (icmp_ln1064_2_fu_302_p2 = ap_const_lv1_0)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1068_4_fu_319_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_point_double_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln28_4_fu_353_p2 <= std_logic_vector(unsigned(grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_i_27_out) + unsigned(ap_const_lv16_1));
    add_ln28_fu_343_p2 <= std_logic_vector(unsigned(grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_i_out) + unsigned(ap_const_lv16_1));
    and_ln99_fu_228_p2 <= (icmp_ln1068_fu_196_p2 and icmp_ln1068_3_fu_222_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_done)
    begin
        if ((grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_done)
    begin
        if ((grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_point_double_fu_182_ap_done)
    begin
        if ((grp_point_double_fu_182_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_done)
    begin
        if ((grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state4_on_subcall_done_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_done, grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_done = ap_const_logic_0) or (grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_x1_3_phi_fu_116_p10_assign_proc : process(and_ln99_reg_666, icmp_ln100_reg_670, icmp_ln1064_reg_674, d_V_reg_807, x1_3_reg_112, ap_CS_fsm_state13)
    begin
        if (((icmp_ln1064_reg_674 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_reg_666) and (icmp_ln100_reg_670 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_phi_mux_x1_3_phi_fu_116_p10 <= d_V_reg_807;
        else 
            ap_phi_mux_x1_3_phi_fu_116_p10 <= x1_3_reg_112;
        end if; 
    end process;


    ap_phi_mux_y1_3_phi_fu_133_p10_assign_proc : process(and_ln99_reg_666, icmp_ln100_reg_670, icmp_ln1064_reg_674, ap_CS_fsm_state13, ret_fu_581_p2, y1_3_reg_129)
    begin
        if (((icmp_ln1064_reg_674 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_reg_666) and (icmp_ln100_reg_670 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_phi_mux_y1_3_phi_fu_133_p10 <= ret_fu_581_p2;
        else 
            ap_phi_mux_y1_3_phi_fu_133_p10 <= y1_3_reg_129;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_phi_mux_x1_3_phi_fu_116_p10, ap_CS_fsm_state13, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_return_0 <= ap_phi_mux_x1_3_phi_fu_116_p10;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state13, ap_phi_mux_y1_3_phi_fu_133_p10, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_return_1 <= ap_phi_mux_y1_3_phi_fu_133_p10;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    ashr_ln1691_fu_451_p2 <= std_logic_vector(shift_right(signed(g_V_4_fu_402_p3),to_integer(unsigned('0' & zext_ln1691_4_fu_441_p1(31-1 downto 0)))));
    d_V_fu_550_p2 <= (xor_ln904_fu_540_p2 xor xor_ln904_4_fu_545_p2);
    empty_51_fu_519_p1 <= grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out(163 - 1 downto 0);
    empty_52_fu_524_p1 <= grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out(1 - 1 downto 0);
    empty_fu_514_p1 <= grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out(165 - 1 downto 0);
    g_V_4_fu_402_p3 <= 
        tmp_V_fu_90 when (tmp_23_reg_748(0) = '1') else 
        g_V_fu_86;
    grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_25_19_fu_160_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_25_1_fu_154_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_ap_start_reg;
    grp_point_double_fu_182_ap_start <= grp_point_double_fu_182_ap_start_reg;
    icmp_ln100_fu_240_p2 <= "1" when (or_ln100_fu_234_p2 = ap_const_lv166_lc_2) else "0";
    icmp_ln1064_2_fu_302_p2 <= "1" when (rhs_V_8_fu_202_p4 = p_read1) else "0";
    icmp_ln1064_fu_246_p2 <= "1" when (rhs_V_fu_192_p1 = p_read) else "0";
    icmp_ln1068_3_fu_222_p2 <= "0" when (rhs_V_8_fu_202_p4 = ap_const_lv166_lc_2) else "1";
    icmp_ln1068_4_fu_319_p2 <= "1" when (u_V_16_fu_78 = ap_const_lv166_lc_1) else "0";
    icmp_ln1068_fu_196_p2 <= "0" when (rhs_V_fu_192_p1 = ap_const_lv166_lc_2) else "1";
    j_4_fu_383_p3 <= 
        sub_ln69_fu_377_p2 when (tmp_23_fu_369_p3(0) = '1') else 
        j_fu_363_p2;
    j_fu_363_p2 <= std_logic_vector(unsigned(zext_ln28_fu_349_p1) - unsigned(zext_ln65_fu_359_p1));
    lhs_V_16_fu_481_p3 <= 
        g_V_load_reg_768 when (tmp_23_reg_748(0) = '1') else 
        tmp_V_fu_90;
    or_ln100_fu_234_p2 <= (p_read1 or p_read);
    r_4_fu_464_p3 <= 
        ashr_ln1691_fu_451_p2 when (tmp_24_reg_762(0) = '1') else 
        shl_ln1691_4_fu_426_p2;
    r_fu_445_p2 <= std_logic_vector(shift_right(signed(v_V_fu_408_p3),to_integer(unsigned('0' & zext_ln1691_4_fu_441_p1(31-1 downto 0)))));
    ret_23_fu_496_p2 <= (r_4_reg_778 xor lhs_V_16_fu_481_p3);
    ret_24_fu_252_p2 <= (rhs_V_fu_192_p1 xor p_read);
    ret_25_fu_270_p2 <= (trunc_ln1068_fu_188_p1 xor trunc_ln1068_3_fu_212_p4);
    ret_26_fu_556_p2 <= (p_read xor d_V_fu_550_p2);
    ret_fu_581_p2 <= (xor_ln1544_fu_577_p2 xor grp_point_add_1_Pipeline_VITIS_LOOP_45_111_fu_174_lhs_V_30_out);
    rhs_V_8_fu_202_p4 <= p_read2(331 downto 166);
    rhs_V_fu_192_p1 <= p_read2(166 - 1 downto 0);
    select_ln1691_fu_457_p3 <= 
        r_fu_445_p2 when (tmp_24_reg_762(0) = '1') else 
        shl_ln1691_fu_420_p2;
        sext_ln1691_4_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1691_fu_432_p2),32));

        sext_ln1691_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j_4_reg_756),32));

    shl_ln1691_4_fu_426_p2 <= std_logic_vector(shift_left(unsigned(g_V_4_fu_402_p3),to_integer(unsigned('0' & zext_ln1691_fu_416_p1(31-1 downto 0)))));
    shl_ln1691_fu_420_p2 <= std_logic_vector(shift_left(unsigned(v_V_fu_408_p3),to_integer(unsigned('0' & zext_ln1691_fu_416_p1(31-1 downto 0)))));
    sub_ln1691_fu_432_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(j_4_reg_756));
    sub_ln69_fu_377_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(j_fu_363_p2));
    tmp_23_fu_369_p3 <= j_fu_363_p2(16 downto 16);
    tmp_V_21_fu_325_p3 <= 
        tmp_V_fu_90 when (xor_ln1544_21_reg_716(0) = '1') else 
        ap_const_lv166_lc_2;
    tmp_V_22_fu_528_p3 <= 
        grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out when (empty_52_fu_524_p1(0) = '1') else 
        ap_const_lv166_lc_2;
    tmp_V_24_fu_566_p3 <= 
        ret_26_fu_556_p2 when (empty_52_reg_797(0) = '1') else 
        ap_const_lv166_lc_2;
    tmp_fu_262_p3 <= p_read2(166 downto 166);
    trunc_ln1068_3_fu_212_p4 <= p_read2(328 downto 166);
    trunc_ln1068_4_fu_314_p1 <= tmp_V_fu_90(165 - 1 downto 0);
    trunc_ln1068_fu_188_p1 <= p_read1(163 - 1 downto 0);
    trunc_ln1544_8_fu_561_p1 <= ret_26_fu_556_p2(165 - 1 downto 0);
    trunc_ln1544_fu_258_p1 <= p_read1(1 - 1 downto 0);
    u_V_20_fu_486_p3 <= 
        v_V_4_load_reg_743 when (tmp_23_reg_748(0) = '1') else 
        u_V_16_fu_78;
    u_V_fu_491_p2 <= (u_V_20_fu_486_p3 xor select_ln1691_reg_773);
    v_V_fu_408_p3 <= 
        u_V_16_fu_78 when (tmp_23_reg_748(0) = '1') else 
        v_V_4_fu_82;
    xor_ln1544_21_fu_276_p2 <= (trunc_ln1544_fu_258_p1 xor tmp_fu_262_p3);
    xor_ln1544_fu_577_p2 <= (p_read1 xor d_V_reg_807);
    xor_ln904_4_fu_545_p2 <= (grp_point_add_1_Pipeline_VITIS_LOOP_45_1_fu_146_c_V_9_out xor ap_const_lv166_lc_1);
    xor_ln904_fu_540_p2 <= (ret_24_reg_706 xor grp_point_add_1_Pipeline_VITIS_LOOP_45_110_fu_166_lhs_V_25_out);
    zext_ln1691_4_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1691_4_fu_437_p1),166));
    zext_ln1691_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1691_fu_413_p1),166));
    zext_ln28_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_fu_343_p2),17));
    zext_ln65_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_4_fu_353_p2),17));
end behav;
