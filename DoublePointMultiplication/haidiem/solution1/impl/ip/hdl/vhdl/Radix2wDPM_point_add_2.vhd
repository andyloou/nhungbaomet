-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Radix2wDPM_point_add_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (331 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (165 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (165 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (331 downto 0) );
end;


architecture behav of Radix2wDPM_point_add_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv332_lc_2 : STD_LOGIC_VECTOR (331 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv166_lc_3 : STD_LOGIC_VECTOR (165 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001001";
    constant ap_const_lv166_lc_2 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv166_lc_1 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100110";
    constant ap_const_lv32_14B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln1068_fu_167_p1 : STD_LOGIC_VECTOR (328 downto 0);
    signal trunc_ln1068_reg_607 : STD_LOGIC_VECTOR (328 downto 0);
    signal and_ln99_fu_183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln99_reg_612 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_189_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal lhs_V_reg_616 : STD_LOGIC_VECTOR (165 downto 0);
    signal lhs_V_10_fu_193_p4 : STD_LOGIC_VECTOR (165 downto 0);
    signal lhs_V_10_reg_621 : STD_LOGIC_VECTOR (165 downto 0);
    signal icmp_ln100_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_17_fu_221_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_17_reg_663 : STD_LOGIC_VECTOR (165 downto 0);
    signal trunc_ln1068_1_fu_259_p1 : STD_LOGIC_VECTOR (164 downto 0);
    signal trunc_ln1068_1_reg_677 : STD_LOGIC_VECTOR (164 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ret_18_fu_280_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_18_reg_685 : STD_LOGIC_VECTOR (165 downto 0);
    signal icmp_ln1068_2_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_V_fu_291_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal c_V_reg_690 : STD_LOGIC_VECTOR (165 downto 0);
    signal v_V_3_load_reg_695 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_21_fu_336_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_700 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal j_3_fu_350_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_3_reg_708 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_reg_714 : STD_LOGIC_VECTOR (0 downto 0);
    signal g_V_load_reg_720 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln1691_fu_424_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal select_ln1691_reg_725 : STD_LOGIC_VECTOR (165 downto 0);
    signal r_3_fu_431_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal r_3_reg_730 : STD_LOGIC_VECTOR (165 downto 0);
    signal p_Result_18_fu_482_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_18_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal d_V_fu_486_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal d_V_reg_743 : STD_LOGIC_VECTOR (165 downto 0);
    signal d_V_3_fu_508_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal d_V_3_reg_748 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln1544_7_fu_519_p1 : STD_LOGIC_VECTOR (164 downto 0);
    signal trunc_ln1544_7_reg_754 : STD_LOGIC_VECTOR (164 downto 0);
    signal a_V_fu_524_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal a_V_reg_759 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_double_1_fu_162_ap_return : STD_LOGIC_VECTOR (331 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal p_partset5_fu_553_p3 : STD_LOGIC_VECTOR (331 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_done : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_idle : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_ready : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out_ap_vld : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_done : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_idle : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_ready : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_i_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_i_out_ap_vld : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_done : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_idle : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_ready : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_i_18_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_i_18_out_ap_vld : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_done : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_idle : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_ready : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_d_V_4_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_d_V_4_out_ap_vld : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_done : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_idle : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_ready : STD_LOGIC;
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_a_V_4_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_a_V_4_out_ap_vld : STD_LOGIC;
    signal grp_point_double_1_fu_162_ap_start : STD_LOGIC;
    signal grp_point_double_1_fu_162_ap_done : STD_LOGIC;
    signal grp_point_double_1_fu_162_ap_idle : STD_LOGIC;
    signal grp_point_double_1_fu_162_ap_ready : STD_LOGIC;
    signal ap_phi_mux_P_3_phi_fu_114_p10 : STD_LOGIC_VECTOR (331 downto 0);
    signal P_3_reg_110 : STD_LOGIC_VECTOR (331 downto 0);
    signal xor_i_partset_fu_545_p3 : STD_LOGIC_VECTOR (331 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln1064_1_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start_reg : STD_LOGIC := '0';
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_point_double_1_fu_162_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal u_V_11_fu_76 : STD_LOGIC_VECTOR (165 downto 0);
    signal u_V_fu_458_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal v_V_3_fu_80 : STD_LOGIC_VECTOR (165 downto 0);
    signal v_V_fu_375_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal g_V_fu_84 : STD_LOGIC_VECTOR (165 downto 0);
    signal g_V_3_fu_369_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_V_fu_88 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_19_fu_463_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal icmp_ln1068_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1068_1_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln100_fu_203_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_fu_273_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1544_fu_270_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_fu_310_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln28_3_fu_320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln28_fu_316_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln65_fu_326_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_fu_330_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln69_fu_344_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1691_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1691_fu_383_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal sub_ln1691_fu_399_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1691_3_fu_404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1691_3_fu_408_p1 : STD_LOGIC_VECTOR (165 downto 0);
    signal r_fu_412_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal shl_ln1691_fu_387_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ashr_ln1691_fu_418_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal shl_ln1691_3_fu_393_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal u_V_15_fu_453_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal c_V_6_fu_448_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal xor_ln904_2_fu_502_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal xor_ln904_fu_498_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_20_fu_514_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal xor_ln1544_fu_535_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ret_fu_540_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (331 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_45_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_V : IN STD_LOGIC_VECTOR (165 downto 0);
        c_V_1 : IN STD_LOGIC_VECTOR (164 downto 0);
        ret_21 : IN STD_LOGIC_VECTOR (165 downto 0);
        c_V_7_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        c_V_7_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_25_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        u_V_14 : IN STD_LOGIC_VECTOR (165 downto 0);
        i_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_25_16 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v_V_6 : IN STD_LOGIC_VECTOR (165 downto 0);
        i_18_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_18_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_45_17 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (165 downto 0);
        c_V_7_reload : IN STD_LOGIC_VECTOR (165 downto 0);
        d_V_4_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        d_V_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_45_18 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (165 downto 0);
        ret_23 : IN STD_LOGIC_VECTOR (164 downto 0);
        c_V_7_reload : IN STD_LOGIC_VECTOR (165 downto 0);
        a_V_4_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        a_V_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wDPM_point_double_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        P_read : IN STD_LOGIC_VECTOR (328 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (331 downto 0) );
    end component;



begin
    grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127 : component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_45_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start,
        ap_done => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_done,
        ap_idle => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_idle,
        ap_ready => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_ready,
        c_V => c_V_reg_690,
        c_V_1 => trunc_ln1068_1_reg_677,
        ret_21 => ret_18_reg_685,
        c_V_7_out => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out,
        c_V_7_out_ap_vld => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out_ap_vld);

    grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135 : component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_25_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start,
        ap_done => grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_done,
        ap_idle => grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_idle,
        ap_ready => grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_ready,
        u_V_14 => u_V_11_fu_76,
        i_out => grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_i_out,
        i_out_ap_vld => grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_i_out_ap_vld);

    grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141 : component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_25_16
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start,
        ap_done => grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_done,
        ap_idle => grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_idle,
        ap_ready => grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_ready,
        v_V_6 => v_V_3_fu_80,
        i_18_out => grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_i_18_out,
        i_18_out_ap_vld => grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_i_18_out_ap_vld);

    grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147 : component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_45_17
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start,
        ap_done => grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_done,
        ap_idle => grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_idle,
        ap_ready => grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_ready,
        d_V => d_V_reg_743,
        c_V_7_reload => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out,
        d_V_4_out => grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_d_V_4_out,
        d_V_4_out_ap_vld => grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_d_V_4_out_ap_vld);

    grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154 : component Radix2wDPM_point_add_2_Pipeline_VITIS_LOOP_45_18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start,
        ap_done => grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_done,
        ap_idle => grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_idle,
        ap_ready => grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_ready,
        a_V => a_V_reg_759,
        ret_23 => trunc_ln1544_7_reg_754,
        c_V_7_reload => grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out,
        a_V_4_out => grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_a_V_4_out,
        a_V_4_out_ap_vld => grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_a_V_4_out_ap_vld);

    grp_point_double_1_fu_162 : component Radix2wDPM_point_double_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_double_1_fu_162_ap_start,
        ap_done => grp_point_double_1_fu_162_ap_done,
        ap_idle => grp_point_double_1_fu_162_ap_idle,
        ap_ready => grp_point_double_1_fu_162_ap_ready,
        P_read => trunc_ln1068_reg_607,
        ap_return => grp_point_double_1_fu_162_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv332_lc_2;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_return_preg <= ap_phi_mux_P_3_phi_fu_114_p10;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1068_2_fu_264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_double_1_fu_162_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_double_1_fu_162_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_point_double_1_fu_162_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_double_1_fu_162_ap_ready = ap_const_logic_1)) then 
                    grp_point_double_1_fu_162_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    P_3_reg_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_215_p2 = ap_const_lv1_1) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (icmp_ln1064_1_fu_247_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                P_3_reg_110 <= ap_const_lv332_lc_2;
            elsif (((ap_const_lv1_0 = and_ln99_fu_183_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                P_3_reg_110 <= p_read;
            elsif (((grp_point_double_1_fu_162_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                P_3_reg_110 <= grp_point_double_1_fu_162_ap_return;
            elsif (((icmp_ln1064_reg_631 = ap_const_lv1_0) and (icmp_ln100_reg_627 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_reg_612) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_3_reg_110 <= xor_i_partset_fu_545_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                P_3_reg_110 <= p_partset5_fu_553_p3;
            end if; 
        end if;
    end process;

    g_V_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_215_p2 = ap_const_lv1_0) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                g_V_fu_84 <= ap_const_lv166_lc_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                g_V_fu_84 <= g_V_3_fu_369_p3;
            end if; 
        end if;
    end process;

    tmp_V_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_215_p2 = ap_const_lv1_0) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tmp_V_fu_88 <= ap_const_lv166_lc_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                tmp_V_fu_88 <= ret_19_fu_463_p2;
            end if; 
        end if;
    end process;

    u_V_11_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_215_p2 = ap_const_lv1_0) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                u_V_11_fu_76 <= ret_17_fu_221_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                u_V_11_fu_76 <= u_V_fu_458_p2;
            end if; 
        end if;
    end process;

    v_V_3_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_215_p2 = ap_const_lv1_0) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v_V_3_fu_80 <= ap_const_lv166_lc_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                v_V_3_fu_80 <= v_V_fu_375_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                a_V_reg_759 <= a_V_fu_524_p3;
                d_V_3_reg_748 <= d_V_3_fu_508_p2;
                trunc_ln1544_7_reg_754 <= trunc_ln1544_7_fu_519_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                and_ln99_reg_612 <= and_ln99_fu_183_p2;
                trunc_ln1068_reg_607 <= trunc_ln1068_fu_167_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1068_2_fu_264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                c_V_reg_690 <= c_V_fu_291_p3;
                ret_18_reg_685 <= ret_18_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                d_V_reg_743 <= d_V_fu_486_p3;
                p_Result_18_reg_738 <= p_Result_18_fu_482_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                g_V_load_reg_720 <= g_V_fu_84;
                r_3_reg_730 <= r_3_fu_431_p3;
                select_ln1691_reg_725 <= select_ln1691_fu_424_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln100_reg_627 <= icmp_ln100_fu_209_p2;
                lhs_V_10_reg_621 <= p_read(331 downto 166);
                lhs_V_reg_616 <= lhs_V_fu_189_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln1064_reg_631 <= icmp_ln1064_fu_215_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                j_3_reg_708 <= j_3_fu_350_p3;
                tmp_21_reg_700 <= j_fu_330_p2(16 downto 16);
                tmp_22_reg_714 <= j_3_fu_350_p3(16 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1064_fu_215_p2 = ap_const_lv1_0) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                ret_17_reg_663 <= ret_17_fu_221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                trunc_ln1068_1_reg_677 <= trunc_ln1068_1_fu_259_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                v_V_3_load_reg_695 <= v_V_3_fu_80;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, and_ln99_fu_183_p2, icmp_ln100_fu_209_p2, icmp_ln1064_fu_215_p2, ap_CS_fsm_state2, icmp_ln1068_2_fu_264_p2, ap_CS_fsm_state15, grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_done, grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_done, grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_done, grp_point_double_1_fu_162_ap_done, icmp_ln1064_1_fu_247_p2, ap_CS_fsm_state8, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln1064_fu_215_p2 = ap_const_lv1_1) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (icmp_ln1064_1_fu_247_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((icmp_ln1064_fu_215_p2 = ap_const_lv1_0) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln100_fu_209_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln99_fu_183_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv1_0 = and_ln99_fu_183_p2) or ((icmp_ln1064_fu_215_p2 = ap_const_lv1_1) and (icmp_ln100_fu_209_p2 = ap_const_lv1_0) and (icmp_ln1064_1_fu_247_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1068_2_fu_264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_point_double_1_fu_162_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_V_fu_524_p3 <= 
        ret_20_fu_514_p2 when (p_Result_18_reg_738(0) = '1') else 
        ap_const_lv166_lc_2;
    add_ln28_3_fu_320_p2 <= std_logic_vector(unsigned(grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_i_18_out) + unsigned(ap_const_lv16_1));
    add_ln28_fu_310_p2 <= std_logic_vector(unsigned(grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_i_out) + unsigned(ap_const_lv16_1));
    and_ln99_fu_183_p2 <= (icmp_ln1068_fu_171_p2 and icmp_ln1068_1_fu_177_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_done)
    begin
        if ((grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_done)
    begin
        if ((grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_point_double_1_fu_162_ap_done)
    begin
        if ((grp_point_double_1_fu_162_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_done)
    begin
        if ((grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state4_on_subcall_done_assign_proc : process(grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_done, grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_done = ap_const_logic_0) or (grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_P_3_phi_fu_114_p10_assign_proc : process(and_ln99_reg_612, icmp_ln100_reg_627, icmp_ln1064_reg_631, P_3_reg_110, xor_i_partset_fu_545_p3, ap_CS_fsm_state13)
    begin
        if (((icmp_ln1064_reg_631 = ap_const_lv1_0) and (icmp_ln100_reg_627 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_reg_612) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_phi_mux_P_3_phi_fu_114_p10 <= xor_i_partset_fu_545_p3;
        else 
            ap_phi_mux_P_3_phi_fu_114_p10 <= P_3_reg_110;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_P_3_phi_fu_114_p10, ap_CS_fsm_state13, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_return <= ap_phi_mux_P_3_phi_fu_114_p10;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    ashr_ln1691_fu_418_p2 <= std_logic_vector(shift_right(signed(g_V_3_fu_369_p3),to_integer(unsigned('0' & zext_ln1691_3_fu_408_p1(31-1 downto 0)))));
    c_V_6_fu_448_p3 <= 
        g_V_load_reg_720 when (tmp_21_reg_700(0) = '1') else 
        tmp_V_fu_88;
    c_V_fu_291_p3 <= 
        tmp_V_fu_88 when (p_Result_s_fu_285_p2(0) = '1') else 
        ap_const_lv166_lc_2;
    d_V_3_fu_508_p2 <= (xor_ln904_fu_498_p2 xor xor_ln904_2_fu_502_p2);
    d_V_fu_486_p3 <= 
        grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out when (p_Result_18_fu_482_p1(0) = '1') else 
        ap_const_lv166_lc_2;
    g_V_3_fu_369_p3 <= 
        tmp_V_fu_88 when (tmp_21_reg_700(0) = '1') else 
        g_V_fu_84;
    grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start <= grp_point_add_2_Pipeline_VITIS_LOOP_25_16_fu_141_ap_start_reg;
    grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start <= grp_point_add_2_Pipeline_VITIS_LOOP_25_1_fu_135_ap_start_reg;
    grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start <= grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_ap_start_reg;
    grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start <= grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_ap_start_reg;
    grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start <= grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_ap_start_reg;
    grp_point_double_1_fu_162_ap_start <= grp_point_double_1_fu_162_ap_start_reg;
    icmp_ln100_fu_209_p2 <= "1" when (or_ln100_fu_203_p2 = ap_const_lv166_lc_2) else "0";
    icmp_ln1064_1_fu_247_p2 <= "1" when (lhs_V_10_fu_193_p4 = p_read12) else "0";
    icmp_ln1064_fu_215_p2 <= "1" when (lhs_V_fu_189_p1 = p_read1) else "0";
    icmp_ln1068_1_fu_177_p2 <= "0" when (p_read12 = ap_const_lv166_lc_2) else "1";
    icmp_ln1068_2_fu_264_p2 <= "1" when (u_V_11_fu_76 = ap_const_lv166_lc_1) else "0";
    icmp_ln1068_fu_171_p2 <= "0" when (p_read1 = ap_const_lv166_lc_2) else "1";
    j_3_fu_350_p3 <= 
        sub_ln69_fu_344_p2 when (tmp_21_fu_336_p3(0) = '1') else 
        j_fu_330_p2;
    j_fu_330_p2 <= std_logic_vector(unsigned(zext_ln28_fu_316_p1) - unsigned(zext_ln65_fu_326_p1));
    lhs_V_10_fu_193_p4 <= p_read(331 downto 166);
    lhs_V_fu_189_p1 <= p_read(166 - 1 downto 0);
    or_ln100_fu_203_p2 <= (lhs_V_fu_189_p1 or lhs_V_10_fu_193_p4);
    p_Result_18_fu_482_p1 <= grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out(1 - 1 downto 0);
    p_Result_s_fu_285_p2 <= (trunc_ln1544_fu_270_p1 xor tmp_fu_273_p3);
    p_partset5_fu_553_p3 <= (p_read12 & p_read1);
    r_3_fu_431_p3 <= 
        ashr_ln1691_fu_418_p2 when (tmp_22_reg_714(0) = '1') else 
        shl_ln1691_3_fu_393_p2;
    r_fu_412_p2 <= std_logic_vector(shift_right(signed(v_V_fu_375_p3),to_integer(unsigned('0' & zext_ln1691_3_fu_408_p1(31-1 downto 0)))));
    ret_17_fu_221_p2 <= (p_read1 xor lhs_V_fu_189_p1);
    ret_18_fu_280_p2 <= (p_read12 xor lhs_V_10_reg_621);
    ret_19_fu_463_p2 <= (r_3_reg_730 xor c_V_6_fu_448_p3);
    ret_20_fu_514_p2 <= (lhs_V_reg_616 xor d_V_3_fu_508_p2);
    ret_fu_540_p2 <= (xor_ln1544_fu_535_p2 xor d_V_3_reg_748);
    select_ln1691_fu_424_p3 <= 
        r_fu_412_p2 when (tmp_22_reg_714(0) = '1') else 
        shl_ln1691_fu_387_p2;
        sext_ln1691_3_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1691_fu_399_p2),32));

        sext_ln1691_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j_3_reg_708),32));

    shl_ln1691_3_fu_393_p2 <= std_logic_vector(shift_left(unsigned(g_V_3_fu_369_p3),to_integer(unsigned('0' & zext_ln1691_fu_383_p1(31-1 downto 0)))));
    shl_ln1691_fu_387_p2 <= std_logic_vector(shift_left(unsigned(v_V_fu_375_p3),to_integer(unsigned('0' & zext_ln1691_fu_383_p1(31-1 downto 0)))));
    sub_ln1691_fu_399_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(j_3_reg_708));
    sub_ln69_fu_344_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(j_fu_330_p2));
    tmp_21_fu_336_p3 <= j_fu_330_p2(16 downto 16);
    tmp_fu_273_p3 <= p_read(166 downto 166);
    trunc_ln1068_1_fu_259_p1 <= tmp_V_fu_88(165 - 1 downto 0);
    trunc_ln1068_fu_167_p1 <= p_read(329 - 1 downto 0);
    trunc_ln1544_7_fu_519_p1 <= ret_20_fu_514_p2(165 - 1 downto 0);
    trunc_ln1544_fu_270_p1 <= p_read12(1 - 1 downto 0);
    u_V_15_fu_453_p3 <= 
        v_V_3_load_reg_695 when (tmp_21_reg_700(0) = '1') else 
        u_V_11_fu_76;
    u_V_fu_458_p2 <= (u_V_15_fu_453_p3 xor select_ln1691_reg_725);
    v_V_fu_375_p3 <= 
        u_V_11_fu_76 when (tmp_21_reg_700(0) = '1') else 
        v_V_3_fu_80;
    xor_i_partset_fu_545_p3 <= (ret_fu_540_p2 & d_V_3_reg_748);
    xor_ln1544_fu_535_p2 <= (lhs_V_10_reg_621 xor grp_point_add_2_Pipeline_VITIS_LOOP_45_18_fu_154_a_V_4_out);
    xor_ln904_2_fu_502_p2 <= (grp_point_add_2_Pipeline_VITIS_LOOP_45_17_fu_147_d_V_4_out xor ap_const_lv166_lc_1);
    xor_ln904_fu_498_p2 <= (ret_17_reg_663 xor grp_point_add_2_Pipeline_VITIS_LOOP_45_1_fu_127_c_V_7_out);
    zext_ln1691_3_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1691_3_fu_404_p1),166));
    zext_ln1691_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1691_fu_380_p1),166));
    zext_ln28_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_fu_310_p2),17));
    zext_ln65_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_3_fu_320_p2),17));
end behav;
