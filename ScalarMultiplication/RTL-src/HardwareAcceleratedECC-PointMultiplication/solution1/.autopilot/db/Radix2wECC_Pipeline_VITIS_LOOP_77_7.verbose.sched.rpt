

================================================================
== Vitis HLS Report for 'Radix2wECC_Pipeline_VITIS_LOOP_77_7'
================================================================
* Date:           Thu Dec 26 18:43:13 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        HardwareAcceleratedECC-PointMultiplication
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.833 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        8|        8|  80.000 ns|  80.000 ns|    8|    8|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_77_7  |        6|        6|         2|          1|          1|     6|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.83>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_Result_55_read = read i192 @_ssdm_op_Read.ap_auto.i192, i192 %p_Result_55"   --->   Operation 6 'read' 'p_Result_55_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_Result_54_read = read i192 @_ssdm_op_Read.ap_auto.i192, i192 %p_Result_54"   --->   Operation 7 'read' 'p_Result_54_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 9 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i_29 = load i3 %i" [module.cpp:77]   --->   Operation 10 'load' 'i_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 11 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.13ns)   --->   "%icmp_ln77 = icmp_eq  i3 %i_29, i3 6" [module.cpp:77]   --->   Operation 12 'icmp' 'icmp_ln77' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 6, i64 6, i64 6"   --->   Operation 13 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.65ns)   --->   "%i_30 = add i3 %i_29, i3 1" [module.cpp:77]   --->   Operation 14 'add' 'i_30' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln77 = br i1 %icmp_ln77, void %.split, void %.exitStub" [module.cpp:77]   --->   Operation 15 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i3.i5, i3 %i_29, i5 0" [module.cpp:78]   --->   Operation 16 'bitconcatenate' 'shl_ln3' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%or_ln708 = or i8 %shl_ln3, i8 31"   --->   Operation 17 'or' 'or_ln708' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.55ns)   --->   "%icmp_ln708 = icmp_ugt  i8 %shl_ln3, i8 %or_ln708"   --->   Operation 18 'icmp' 'icmp_ln708' <Predicate = (!icmp_ln77)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708)   --->   "%tmp = partselect i192 @llvm.part.select.i192, i192 %p_Result_54_read, i32 191, i32 0"   --->   Operation 19 'partselect' 'tmp' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.91ns)   --->   "%sub_ln708 = sub i8 %shl_ln3, i8 %or_ln708"   --->   Operation 20 'sub' 'sub_ln708' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (1.91ns)   --->   "%sub_ln708_1 = sub i8 191, i8 %shl_ln3"   --->   Operation 21 'sub' 'sub_ln708_1' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.91ns)   --->   "%sub_ln708_2 = sub i8 %or_ln708, i8 %shl_ln3"   --->   Operation 22 'sub' 'sub_ln708_2' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node sub_ln708_3)   --->   "%select_ln708 = select i1 %icmp_ln708, i8 %sub_ln708, i8 %sub_ln708_2"   --->   Operation 23 'select' 'select_ln708' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708)   --->   "%select_ln708_1 = select i1 %icmp_ln708, i192 %tmp, i192 %p_Result_54_read"   --->   Operation 24 'select' 'select_ln708_1' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708)   --->   "%select_ln708_2 = select i1 %icmp_ln708, i8 %sub_ln708_1, i8 %shl_ln3"   --->   Operation 25 'select' 'select_ln708_2' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.91ns) (out node of the LUT)   --->   "%sub_ln708_3 = sub i8 191, i8 %select_ln708"   --->   Operation 26 'sub' 'sub_ln708_3' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708)   --->   "%zext_ln708 = zext i8 %select_ln708_2"   --->   Operation 27 'zext' 'zext_ln708' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (4.91ns) (out node of the LUT)   --->   "%lshr_ln708 = lshr i192 %select_ln708_1, i192 %zext_ln708"   --->   Operation 28 'lshr' 'lshr_ln708' <Predicate = (!icmp_ln77)> <Delay = 4.91> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (1.55ns)   --->   "%icmp_ln708_1 = icmp_ugt  i8 %shl_ln3, i8 %or_ln708"   --->   Operation 29 'icmp' 'icmp_ln708_1' <Predicate = (!icmp_ln77)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708_2)   --->   "%tmp_12 = partselect i192 @llvm.part.select.i192, i192 %p_Result_55_read, i32 191, i32 0"   --->   Operation 30 'partselect' 'tmp_12' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.91ns)   --->   "%sub_ln708_4 = sub i8 %shl_ln3, i8 %or_ln708"   --->   Operation 31 'sub' 'sub_ln708_4' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.91ns)   --->   "%sub_ln708_5 = sub i8 191, i8 %shl_ln3"   --->   Operation 32 'sub' 'sub_ln708_5' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.91ns)   --->   "%sub_ln708_6 = sub i8 %or_ln708, i8 %shl_ln3"   --->   Operation 33 'sub' 'sub_ln708_6' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node sub_ln708_7)   --->   "%select_ln708_3 = select i1 %icmp_ln708_1, i8 %sub_ln708_4, i8 %sub_ln708_6"   --->   Operation 34 'select' 'select_ln708_3' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708_2)   --->   "%select_ln708_4 = select i1 %icmp_ln708_1, i192 %tmp_12, i192 %p_Result_55_read"   --->   Operation 35 'select' 'select_ln708_4' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708_2)   --->   "%select_ln708_5 = select i1 %icmp_ln708_1, i8 %sub_ln708_5, i8 %shl_ln3"   --->   Operation 36 'select' 'select_ln708_5' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.91ns) (out node of the LUT)   --->   "%sub_ln708_7 = sub i8 191, i8 %select_ln708_3"   --->   Operation 37 'sub' 'sub_ln708_7' <Predicate = (!icmp_ln77)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln708_2)   --->   "%zext_ln708_2 = zext i8 %select_ln708_5"   --->   Operation 38 'zext' 'zext_ln708_2' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (4.91ns) (out node of the LUT)   --->   "%lshr_ln708_2 = lshr i192 %select_ln708_4, i192 %zext_ln708_2"   --->   Operation 39 'lshr' 'lshr_ln708_2' <Predicate = (!icmp_ln77)> <Delay = 4.91> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.58ns)   --->   "%store_ln77 = store i3 %i_30, i3 %i" [module.cpp:77]   --->   Operation 40 'store' 'store_ln77' <Predicate = (!icmp_ln77)> <Delay = 1.58>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 56 'ret' 'ret_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.47>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln78_cast15 = zext i3 %i_29" [module.cpp:77]   --->   Operation 41 'zext' 'trunc_ln78_cast15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln77 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [module.cpp:77]   --->   Operation 42 'specloopname' 'specloopname_ln77' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%zext_ln708_1 = zext i8 %sub_ln708_3"   --->   Operation 43 'zext' 'zext_ln708_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%lshr_ln708_1 = lshr i192 6277101735386680763835789423207666416102355444464034512895, i192 %zext_ln708_1"   --->   Operation 44 'lshr' 'lshr_ln708_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (3.14ns) (out node of the LUT)   --->   "%p_Result_s = and i192 %lshr_ln708, i192 %lshr_ln708_1"   --->   Operation 45 'and' 'p_Result_s' <Predicate = true> <Delay = 3.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln78 = trunc i192 %p_Result_s" [module.cpp:78]   --->   Operation 46 'trunc' 'trunc_ln78' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%buff2_addr = getelementptr i32 %buff2, i64 0, i64 %trunc_ln78_cast15" [module.cpp:78]   --->   Operation 47 'getelementptr' 'buff2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (2.32ns)   --->   "%store_ln78 = store i32 %trunc_ln78, i3 %buff2_addr" [module.cpp:78]   --->   Operation 48 'store' 'store_ln78' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node p_Result_30)   --->   "%zext_ln708_3 = zext i8 %sub_ln708_7"   --->   Operation 49 'zext' 'zext_ln708_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node p_Result_30)   --->   "%lshr_ln708_3 = lshr i192 6277101735386680763835789423207666416102355444464034512895, i192 %zext_ln708_3"   --->   Operation 50 'lshr' 'lshr_ln708_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (3.14ns) (out node of the LUT)   --->   "%p_Result_30 = and i192 %lshr_ln708_2, i192 %lshr_ln708_3"   --->   Operation 51 'and' 'p_Result_30' <Predicate = true> <Delay = 3.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i192 %p_Result_30" [module.cpp:79]   --->   Operation 52 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%buff3_addr = getelementptr i32 %buff3, i64 0, i64 %trunc_ln78_cast15" [module.cpp:79]   --->   Operation 53 'getelementptr' 'buff3_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (2.32ns)   --->   "%store_ln79 = store i32 %trunc_ln79, i3 %buff3_addr" [module.cpp:79]   --->   Operation 54 'store' 'store_ln79' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 55 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 6.83ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0 ns)
	'load' operation ('i', module.cpp:77) on local variable 'i' [11]  (0 ns)
	'sub' operation ('sub_ln708_1') [25]  (1.92 ns)
	'select' operation ('select_ln708_2') [29]  (0 ns)
	'lshr' operation ('lshr_ln708') [33]  (4.92 ns)

 <State 2>: 5.47ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln708_1') [34]  (0 ns)
	'and' operation ('__Result__') [35]  (3.15 ns)
	'store' operation ('store_ln78', module.cpp:78) of variable 'trunc_ln78', module.cpp:78 on array 'buff2' [38]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
