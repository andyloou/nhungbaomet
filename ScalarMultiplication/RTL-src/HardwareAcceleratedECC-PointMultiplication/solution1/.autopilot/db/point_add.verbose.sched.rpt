

================================================================
== Vitis HLS Report for 'point_add'
================================================================
* Date:           Thu Dec 26 18:43:11 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        HardwareAcceleratedECC-PointMultiplication
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.041 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 12 2 13 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 
13 --> 12 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 12 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.74>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%y2_V_read11 = read i166 @_ssdm_op_Read.ap_auto.i166, i166 %y2_V_read"   --->   Operation 23 'read' 'y2_V_read11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%x2_V_read_3 = read i166 @_ssdm_op_Read.ap_auto.i166, i166 %x2_V_read"   --->   Operation 24 'read' 'x2_V_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%y1_V_read_2 = read i166 @_ssdm_op_Read.ap_auto.i166, i166 %y1_V_read"   --->   Operation 25 'read' 'y1_V_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%x1_V_read_2 = read i166 @_ssdm_op_Read.ap_auto.i166, i166 %x1_V_read"   --->   Operation 26 'read' 'x1_V_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%p_Val2_4_loc = alloca i64 1"   --->   Operation 27 'alloca' 'p_Val2_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%a_V_3_loc = alloca i64 1"   --->   Operation 28 'alloca' 'a_V_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_Val2_3_loc = alloca i64 1"   --->   Operation 29 'alloca' 'p_Val2_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%p_Val2_1_loc = alloca i64 1"   --->   Operation 30 'alloca' 'p_Val2_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%p_Val2_loc = alloca i64 1"   --->   Operation 31 'alloca' 'p_Val2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln109 = trunc i166 %y2_V_read11" [gf2_arithmetic.cpp:109]   --->   Operation 32 'trunc' 'trunc_ln109' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (3.82ns)   --->   "%icmp_ln1068 = icmp_eq  i166 %x2_V_read_3, i166 0"   --->   Operation 33 'icmp' 'icmp_ln1068' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (3.82ns)   --->   "%icmp_ln1068_1 = icmp_eq  i166 %y2_V_read11, i166 0"   --->   Operation 34 'icmp' 'icmp_ln1068_1' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.97ns)   --->   "%or_ln110 = or i1 %icmp_ln1068, i1 %icmp_ln1068_1" [gf2_arithmetic.cpp:110]   --->   Operation 35 'or' 'or_ln110' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (1.94ns)   --->   "%br_ln110 = br i1 %or_ln110, void, void %._crit_edge" [gf2_arithmetic.cpp:110]   --->   Operation 36 'br' 'br_ln110' <Predicate = true> <Delay = 1.94>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln111)   --->   "%or_ln111 = or i166 %y1_V_read_2, i166 %x1_V_read_2" [gf2_arithmetic.cpp:111]   --->   Operation 37 'or' 'or_ln111' <Predicate = (!or_ln110)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (3.82ns) (out node of the LUT)   --->   "%icmp_ln111 = icmp_eq  i166 %or_ln111, i166 0" [gf2_arithmetic.cpp:111]   --->   Operation 38 'icmp' 'icmp_ln111' <Predicate = (!or_ln110)> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (1.94ns)   --->   "%br_ln111 = br i1 %icmp_ln111, void, void %._crit_edge" [gf2_arithmetic.cpp:111]   --->   Operation 39 'br' 'br_ln111' <Predicate = (!or_ln110)> <Delay = 1.94>
ST_1 : Operation 40 [1/1] (3.82ns)   --->   "%icmp_ln1064 = icmp_eq  i166 %x1_V_read_2, i166 %x2_V_read_3"   --->   Operation 40 'icmp' 'icmp_ln1064' <Predicate = (!or_ln110 & !icmp_ln111)> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln117 = br i1 %icmp_ln1064, void %.preheader.preheader, void" [gf2_arithmetic.cpp:117]   --->   Operation 41 'br' 'br_ln117' <Predicate = (!or_ln110 & !icmp_ln111)> <Delay = 0.00>
ST_1 : Operation 42 [2/2] (0.97ns)   --->   "%call_ln0 = call void @point_add_Pipeline_VITIS_LOOP_33_13, i166 %x1_V_read_2, i166 %x2_V_read_3, i166 %a_V_3_loc"   --->   Operation 42 'call' 'call_ln0' <Predicate = (!or_ln110 & !icmp_ln111 & !icmp_ln1064)> <Delay = 0.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 43 [2/2] (0.97ns)   --->   "%call_ln0 = call void @point_add_Pipeline_VITIS_LOOP_33_14, i166 %y1_V_read_2, i166 %y2_V_read11, i163 %p_Val2_4_loc"   --->   Operation 43 'call' 'call_ln0' <Predicate = (!or_ln110 & !icmp_ln111 & !icmp_ln1064)> <Delay = 0.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 44 [1/1] (3.82ns)   --->   "%icmp_ln118 = icmp_ne  i166 %y1_V_read_2, i166 %y2_V_read11" [gf2_arithmetic.cpp:118]   --->   Operation 44 'icmp' 'icmp_ln118' <Predicate = (!or_ln110 & !icmp_ln111 & icmp_ln1064)> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.13>
ST_2 : Operation 45 [1/2] (3.13ns)   --->   "%call_ln0 = call void @point_add_Pipeline_VITIS_LOOP_33_13, i166 %x1_V_read_2, i166 %x2_V_read_3, i166 %a_V_3_loc"   --->   Operation 45 'call' 'call_ln0' <Predicate = true> <Delay = 3.13> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 46 [1/2] (3.13ns)   --->   "%call_ln0 = call void @point_add_Pipeline_VITIS_LOOP_33_14, i166 %y1_V_read_2, i166 %y2_V_read11, i163 %p_Val2_4_loc"   --->   Operation 46 'call' 'call_ln0' <Predicate = true> <Delay = 3.13> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.58>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%a_V_3_loc_load = load i166 %a_V_3_loc"   --->   Operation 47 'load' 'a_V_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [2/2] (1.58ns)   --->   "%c_V = call i166 @bf_inv, i166 %a_V_3_loc_load" [gf2_arithmetic.cpp:129]   --->   Operation 48 'call' 'c_V' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 4.57>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%p_Val2_4_loc_load = load i163 %p_Val2_4_loc"   --->   Operation 49 'load' 'p_Val2_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/2] (0.00ns)   --->   "%c_V = call i166 @bf_inv, i166 %a_V_3_loc_load" [gf2_arithmetic.cpp:129]   --->   Operation 50 'call' 'c_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 51 [2/2] (4.57ns)   --->   "%c_V_1 = call i166 @bf_mult.1, i166 %c_V, i163 %p_Val2_4_loc_load" [gf2_arithmetic.cpp:130]   --->   Operation 51 'call' 'c_V_1' <Predicate = true> <Delay = 4.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 4.57>
ST_5 : Operation 52 [1/2] (0.00ns)   --->   "%c_V_1 = call i166 @bf_mult.1, i166 %c_V, i163 %p_Val2_4_loc_load" [gf2_arithmetic.cpp:130]   --->   Operation 52 'call' 'c_V_1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln130 = trunc i166 %c_V_1" [gf2_arithmetic.cpp:130]   --->   Operation 53 'trunc' 'trunc_ln130' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [2/2] (4.57ns)   --->   "%d_V = call i166 @bf_mult.2, i166 %c_V_1" [gf2_arithmetic.cpp:132]   --->   Operation 54 'call' 'd_V' <Predicate = true> <Delay = 4.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 3.53>
ST_6 : Operation 55 [1/2] (0.00ns)   --->   "%d_V = call i166 @bf_mult.2, i166 %c_V_1" [gf2_arithmetic.cpp:132]   --->   Operation 55 'call' 'd_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 56 [2/2] (3.53ns)   --->   "%d_V_1 = call i166 @bf_add.1, i166 %d_V, i166 %c_V_1" [gf2_arithmetic.cpp:133]   --->   Operation 56 'call' 'd_V_1' <Predicate = true> <Delay = 3.53> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 3.53>
ST_7 : Operation 57 [1/2] (0.00ns)   --->   "%d_V_1 = call i166 @bf_add.1, i166 %d_V, i166 %c_V_1" [gf2_arithmetic.cpp:133]   --->   Operation 57 'call' 'd_V_1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 58 [2/2] (3.53ns)   --->   "%d_V_2 = call i166 @bf_add.1, i166 %d_V_1, i166 %a_V_3_loc_load" [gf2_arithmetic.cpp:134]   --->   Operation 58 'call' 'd_V_2' <Predicate = true> <Delay = 3.53> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 4.57>
ST_8 : Operation 59 [1/2] (0.00ns)   --->   "%d_V_2 = call i166 @bf_add.1, i166 %d_V_1, i166 %a_V_3_loc_load" [gf2_arithmetic.cpp:134]   --->   Operation 59 'call' 'd_V_2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 60 [1/1] (1.03ns)   --->   "%d_V_3 = xor i166 %d_V_2, i166 1"   --->   Operation 60 'xor' 'd_V_3' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 61 [2/2] (3.53ns)   --->   "%call_ret = call i166 @bf_add.1, i166 %x1_V_read_2, i166 %d_V_3" [gf2_arithmetic.cpp:137]   --->   Operation 61 'call' 'call_ret' <Predicate = true> <Delay = 3.53> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 2.86>
ST_9 : Operation 62 [1/2] (0.00ns)   --->   "%call_ret = call i166 @bf_add.1, i166 %x1_V_read_2, i166 %d_V_3" [gf2_arithmetic.cpp:137]   --->   Operation 62 'call' 'call_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 63 [2/2] (2.86ns)   --->   "%a_V = call i166 @bf_mult, i166 %call_ret, i163 %trunc_ln130" [gf2_arithmetic.cpp:138]   --->   Operation 63 'call' 'a_V' <Predicate = true> <Delay = 2.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 3.53>
ST_10 : Operation 64 [1/2] (0.00ns)   --->   "%a_V = call i166 @bf_mult, i166 %call_ret, i163 %trunc_ln130" [gf2_arithmetic.cpp:138]   --->   Operation 64 'call' 'a_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 65 [2/2] (3.53ns)   --->   "%a_V_1 = call i166 @bf_add.1, i166 %a_V, i166 %d_V_3" [gf2_arithmetic.cpp:139]   --->   Operation 65 'call' 'a_V_1' <Predicate = true> <Delay = 3.53> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 3.53>
ST_11 : Operation 66 [1/2] (0.00ns)   --->   "%a_V_1 = call i166 @bf_add.1, i166 %a_V, i166 %d_V_3" [gf2_arithmetic.cpp:139]   --->   Operation 66 'call' 'a_V_1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 67 [2/2] (3.53ns)   --->   "%call_ret1 = call i166 @bf_add.1, i166 %y1_V_read_2, i166 %a_V_1" [gf2_arithmetic.cpp:140]   --->   Operation 67 'call' 'call_ret1' <Predicate = true> <Delay = 3.53> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 1.94>
ST_12 : Operation 68 [1/2] (0.00ns)   --->   "%call_ret1 = call i166 @bf_add.1, i166 %y1_V_read_2, i166 %a_V_1" [gf2_arithmetic.cpp:140]   --->   Operation 68 'call' 'call_ret1' <Predicate = (!or_ln110 & !icmp_ln111 & !icmp_ln1064)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 69 [1/1] (1.94ns)   --->   "%br_ln0 = br void %._crit_edge"   --->   Operation 69 'br' 'br_ln0' <Predicate = (!or_ln110 & !icmp_ln111 & !icmp_ln1064)> <Delay = 1.94>
ST_12 : Operation 70 [1/1] (0.00ns)   --->   "%p_Val2_3_loc_load = load i166 %p_Val2_3_loc"   --->   Operation 70 'load' 'p_Val2_3_loc_load' <Predicate = (!or_ln110 & !icmp_ln111 & icmp_ln1064 & !icmp_ln118)> <Delay = 0.00>
ST_12 : Operation 71 [1/1] (1.94ns)   --->   "%br_ln0 = br void %._crit_edge"   --->   Operation 71 'br' 'br_ln0' <Predicate = (!or_ln110 & !icmp_ln111 & icmp_ln1064 & !icmp_ln118)> <Delay = 1.94>
ST_12 : Operation 72 [1/1] (0.00ns)   --->   "%x1_3 = phi i166 %d_V_3, void %.preheader.preheader, i166 %p_Val2_1_loc_load, void %codeRepl, i166 %x1_V_read_2, void, i166 %x2_V_read_3, void, i166 %select_ln118, void"   --->   Operation 72 'phi' 'x1_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 73 [1/1] (0.00ns)   --->   "%y1_2 = phi i166 %call_ret1, void %.preheader.preheader, i166 %p_Val2_3_loc_load, void %codeRepl, i166 %y1_V_read_2, void, i166 %y2_V_read11, void, i166 0, void" [gf2_arithmetic.cpp:140]   --->   Operation 73 'phi' 'y1_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 74 [1/1] (0.00ns)   --->   "%mrv = insertvalue i332 <undef>, i166 %x1_3" [gf2_arithmetic.cpp:145]   --->   Operation 74 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 75 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i332 %mrv, i166 %y1_2" [gf2_arithmetic.cpp:145]   --->   Operation 75 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 76 [1/1] (0.00ns)   --->   "%ret_ln145 = ret i332 %mrv_1" [gf2_arithmetic.cpp:145]   --->   Operation 76 'ret' 'ret_ln145' <Predicate = true> <Delay = 0.00>

State 13 <SV = 1> <Delay = 4.57>
ST_13 : Operation 77 [1/1] (1.27ns)   --->   "%select_ln118 = select i1 %icmp_ln118, i166 0, i166 %x2_V_read_3" [gf2_arithmetic.cpp:118]   --->   Operation 77 'select' 'select_ln118' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 78 [1/1] (1.94ns)   --->   "%br_ln118 = br i1 %icmp_ln118, void %codeRepl, void %._crit_edge" [gf2_arithmetic.cpp:118]   --->   Operation 78 'br' 'br_ln118' <Predicate = true> <Delay = 1.94>
ST_13 : Operation 79 [2/2] (1.58ns)   --->   "%lambda_V = call i166 @bf_inv, i166 %x2_V_read_3" [gf2_arithmetic.cpp:96]   --->   Operation 79 'call' 'lambda_V' <Predicate = (!icmp_ln118)> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 80 [2/2] (4.57ns)   --->   "%call_ret3 = call i166 @bf_mult.2, i166 %x2_V_read_3" [gf2_arithmetic.cpp:100]   --->   Operation 80 'call' 'call_ret3' <Predicate = (!icmp_ln118)> <Delay = 4.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 2> <Delay = 4.57>
ST_14 : Operation 81 [1/2] (0.00ns)   --->   "%lambda_V = call i166 @bf_inv, i166 %x2_V_read_3" [gf2_arithmetic.cpp:96]   --->   Operation 81 'call' 'lambda_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 82 [2/2] (4.57ns)   --->   "%lambda_V_1 = call i166 @bf_mult.1, i166 %lambda_V, i163 %trunc_ln109" [gf2_arithmetic.cpp:97]   --->   Operation 82 'call' 'lambda_V_1' <Predicate = true> <Delay = 4.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 83 [1/2] (0.00ns)   --->   "%call_ret3 = call i166 @bf_mult.2, i166 %x2_V_read_3" [gf2_arithmetic.cpp:100]   --->   Operation 83 'call' 'call_ret3' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 3> <Delay = 1.58>
ST_15 : Operation 84 [1/2] (0.00ns)   --->   "%lambda_V_1 = call i166 @bf_mult.1, i166 %lambda_V, i163 %trunc_ln109" [gf2_arithmetic.cpp:97]   --->   Operation 84 'call' 'lambda_V_1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 85 [2/2] (1.58ns)   --->   "%call_ln97 = call void @point_add_Pipeline_VITIS_LOOP_33_1, i166 %lambda_V_1, i166 %x2_V_read_3, i166 %p_Val2_loc" [gf2_arithmetic.cpp:97]   --->   Operation 85 'call' 'call_ln97' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 4> <Delay = 1.55>
ST_16 : Operation 86 [1/2] (1.55ns)   --->   "%call_ln97 = call void @point_add_Pipeline_VITIS_LOOP_33_1, i166 %lambda_V_1, i166 %x2_V_read_3, i166 %p_Val2_loc" [gf2_arithmetic.cpp:97]   --->   Operation 86 'call' 'call_ln97' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 5> <Delay = 4.57>
ST_17 : Operation 87 [1/1] (0.00ns)   --->   "%p_Val2_loc_load = load i166 %p_Val2_loc"   --->   Operation 87 'load' 'p_Val2_loc_load' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 88 [2/2] (4.57ns)   --->   "%call_ret4 = call i166 @bf_mult.2, i166 %p_Val2_loc_load" [gf2_arithmetic.cpp:101]   --->   Operation 88 'call' 'call_ret4' <Predicate = true> <Delay = 4.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 6> <Delay = 2.62>
ST_18 : Operation 89 [1/2] (0.00ns)   --->   "%call_ret4 = call i166 @bf_mult.2, i166 %p_Val2_loc_load" [gf2_arithmetic.cpp:101]   --->   Operation 89 'call' 'call_ret4' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 90 [1/1] (1.03ns)   --->   "%lambda_V_2 = xor i166 %p_Val2_loc_load, i166 1"   --->   Operation 90 'xor' 'lambda_V_2' <Predicate = true> <Delay = 1.03> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 91 [2/2] (1.58ns)   --->   "%call_ln101 = call void @point_add_Pipeline_VITIS_LOOP_33_11, i166 %call_ret4, i166 %lambda_V_2, i166 %p_Val2_1_loc" [gf2_arithmetic.cpp:101]   --->   Operation 91 'call' 'call_ln101' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 7> <Delay = 1.55>
ST_19 : Operation 92 [1/2] (1.55ns)   --->   "%call_ln101 = call void @point_add_Pipeline_VITIS_LOOP_33_11, i166 %call_ret4, i166 %lambda_V_2, i166 %p_Val2_1_loc" [gf2_arithmetic.cpp:101]   --->   Operation 92 'call' 'call_ln101' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 8> <Delay = 4.57>
ST_20 : Operation 93 [1/1] (0.00ns)   --->   "%p_Val2_1_loc_load = load i166 %p_Val2_1_loc"   --->   Operation 93 'load' 'p_Val2_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 94 [1/1] (0.00ns)   --->   "%empty = trunc i166 %p_Val2_1_loc_load"   --->   Operation 94 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 95 [2/2] (4.57ns)   --->   "%lambda_V_3 = call i166 @bf_mult.1, i166 %lambda_V_2, i163 %empty" [gf2_arithmetic.cpp:104]   --->   Operation 95 'call' 'lambda_V_3' <Predicate = true> <Delay = 4.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 9> <Delay = 1.58>
ST_21 : Operation 96 [1/2] (0.00ns)   --->   "%lambda_V_3 = call i166 @bf_mult.1, i166 %lambda_V_2, i163 %empty" [gf2_arithmetic.cpp:104]   --->   Operation 96 'call' 'lambda_V_3' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 97 [2/2] (1.58ns)   --->   "%call_ln100 = call void @point_add_Pipeline_VITIS_LOOP_33_12, i166 %call_ret3, i166 %lambda_V_3, i166 %p_Val2_3_loc" [gf2_arithmetic.cpp:100]   --->   Operation 97 'call' 'call_ln100' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 10> <Delay = 1.55>
ST_22 : Operation 98 [1/2] (1.55ns)   --->   "%call_ln100 = call void @point_add_Pipeline_VITIS_LOOP_33_12, i166 %call_ret3, i166 %lambda_V_3, i166 %p_Val2_3_loc" [gf2_arithmetic.cpp:100]   --->   Operation 98 'call' 'call_ln100' <Predicate = true> <Delay = 1.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 6.75ns
The critical path consists of the following:
	wire read operation ('y2.V') on port 'y2_V_read' [5]  (0 ns)
	'icmp' operation ('icmp_ln1068_1') [16]  (3.82 ns)
	'or' operation ('or_ln110', gf2_arithmetic.cpp:110) [17]  (0.978 ns)
	multiplexor before 'phi' operation ('d.V') with incoming values : ('x2.V') ('x1.V') ('d.V') ('select_ln118', gf2_arithmetic.cpp:118) ('p_Val2_1_loc_load') [63]  (1.95 ns)

 <State 2>: 3.14ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'point_add_Pipeline_VITIS_LOOP_33_13' [27]  (3.14 ns)

 <State 3>: 1.59ns
The critical path consists of the following:
	'load' operation ('a_V_3_loc_load') on local variable 'a_V_3_loc' [28]  (0 ns)
	'call' operation ('c.V', gf2_arithmetic.cpp:129) to 'bf_inv' [31]  (1.59 ns)

 <State 4>: 4.57ns
The critical path consists of the following:
	'load' operation ('p_Val2_4_loc_load') on local variable 'p_Val2_4_loc' [30]  (0 ns)
	'call' operation ('c.V', gf2_arithmetic.cpp:130) to 'bf_mult.1' [32]  (4.57 ns)

 <State 5>: 4.57ns
The critical path consists of the following:
	'call' operation ('c.V', gf2_arithmetic.cpp:130) to 'bf_mult.1' [32]  (0 ns)
	'call' operation ('d.V', gf2_arithmetic.cpp:132) to 'bf_mult.2' [34]  (4.57 ns)

 <State 6>: 3.53ns
The critical path consists of the following:
	'call' operation ('d.V', gf2_arithmetic.cpp:132) to 'bf_mult.2' [34]  (0 ns)
	'call' operation ('d.V', gf2_arithmetic.cpp:133) to 'bf_add.1' [35]  (3.53 ns)

 <State 7>: 3.53ns
The critical path consists of the following:
	'call' operation ('d.V', gf2_arithmetic.cpp:133) to 'bf_add.1' [35]  (0 ns)
	'call' operation ('d.V', gf2_arithmetic.cpp:134) to 'bf_add.1' [36]  (3.53 ns)

 <State 8>: 4.57ns
The critical path consists of the following:
	'call' operation ('d.V', gf2_arithmetic.cpp:134) to 'bf_add.1' [36]  (0 ns)
	'xor' operation ('d.V') [37]  (1.04 ns)
	'call' operation ('call_ret', gf2_arithmetic.cpp:137) to 'bf_add.1' [38]  (3.53 ns)

 <State 9>: 2.87ns
The critical path consists of the following:
	'call' operation ('call_ret', gf2_arithmetic.cpp:137) to 'bf_add.1' [38]  (0 ns)
	'call' operation ('a.V', gf2_arithmetic.cpp:138) to 'bf_mult' [39]  (2.87 ns)

 <State 10>: 3.53ns
The critical path consists of the following:
	'call' operation ('a.V', gf2_arithmetic.cpp:138) to 'bf_mult' [39]  (0 ns)
	'call' operation ('a.V', gf2_arithmetic.cpp:139) to 'bf_add.1' [40]  (3.53 ns)

 <State 11>: 3.53ns
The critical path consists of the following:
	'call' operation ('a.V', gf2_arithmetic.cpp:139) to 'bf_add.1' [40]  (0 ns)
	'call' operation ('call_ret1', gf2_arithmetic.cpp:140) to 'bf_add.1' [41]  (3.53 ns)

 <State 12>: 1.95ns
The critical path consists of the following:
	'call' operation ('call_ret1', gf2_arithmetic.cpp:140) to 'bf_add.1' [41]  (0 ns)
	multiplexor before 'phi' operation ('y1_2', gf2_arithmetic.cpp:140) with incoming values : ('y2.V') ('y1.V') ('call_ret1', gf2_arithmetic.cpp:140) ('p_Val2_3_loc_load') [64]  (1.95 ns)
	'phi' operation ('y1_2', gf2_arithmetic.cpp:140) with incoming values : ('y2.V') ('y1.V') ('call_ret1', gf2_arithmetic.cpp:140) ('p_Val2_3_loc_load') [64]  (0 ns)

 <State 13>: 4.57ns
The critical path consists of the following:
	'call' operation ('call_ret3', gf2_arithmetic.cpp:100) to 'bf_mult.2' [52]  (4.57 ns)

 <State 14>: 4.57ns
The critical path consists of the following:
	'call' operation ('lambda.V', gf2_arithmetic.cpp:96) to 'bf_inv' [48]  (0 ns)
	'call' operation ('lambda.V', gf2_arithmetic.cpp:97) to 'bf_mult.1' [49]  (4.57 ns)

 <State 15>: 1.59ns
The critical path consists of the following:
	'call' operation ('lambda.V', gf2_arithmetic.cpp:97) to 'bf_mult.1' [49]  (0 ns)
	'call' operation ('call_ln97', gf2_arithmetic.cpp:97) to 'point_add_Pipeline_VITIS_LOOP_33_1' [50]  (1.59 ns)

 <State 16>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln97', gf2_arithmetic.cpp:97) to 'point_add_Pipeline_VITIS_LOOP_33_1' [50]  (1.55 ns)

 <State 17>: 4.57ns
The critical path consists of the following:
	'load' operation ('p_Val2_loc_load') on local variable 'p_Val2_loc' [51]  (0 ns)
	'call' operation ('call_ret4', gf2_arithmetic.cpp:101) to 'bf_mult.2' [53]  (4.57 ns)

 <State 18>: 2.62ns
The critical path consists of the following:
	'xor' operation ('lambda.V') [54]  (1.04 ns)
	'call' operation ('call_ln101', gf2_arithmetic.cpp:101) to 'point_add_Pipeline_VITIS_LOOP_33_11' [55]  (1.59 ns)

 <State 19>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln101', gf2_arithmetic.cpp:101) to 'point_add_Pipeline_VITIS_LOOP_33_11' [55]  (1.55 ns)

 <State 20>: 4.57ns
The critical path consists of the following:
	'load' operation ('p_Val2_1_loc_load') on local variable 'p_Val2_1_loc' [56]  (0 ns)
	'call' operation ('lambda.V', gf2_arithmetic.cpp:104) to 'bf_mult.1' [58]  (4.57 ns)

 <State 21>: 1.59ns
The critical path consists of the following:
	'call' operation ('lambda.V', gf2_arithmetic.cpp:104) to 'bf_mult.1' [58]  (0 ns)
	'call' operation ('call_ln100', gf2_arithmetic.cpp:100) to 'point_add_Pipeline_VITIS_LOOP_33_12' [59]  (1.59 ns)

 <State 22>: 1.55ns
The critical path consists of the following:
	'call' operation ('call_ln100', gf2_arithmetic.cpp:100) to 'point_add_Pipeline_VITIS_LOOP_33_12' [59]  (1.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
