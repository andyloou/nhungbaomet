

================================================================
== Vitis HLS Report for 'bf_inv'
================================================================
* Date:           Thu Dec 26 18:43:06 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        HardwareAcceleratedECC-PointMultiplication
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.041 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_75_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%u_V_2 = alloca i32 1"   --->   Operation 9 'alloca' 'u_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%v_V_1 = alloca i32 1"   --->   Operation 10 'alloca' 'v_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%g_V = alloca i32 1"   --->   Operation 11 'alloca' 'g_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%z_V_write_assign = alloca i32 1"   --->   Operation 12 'alloca' 'z_V_write_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%x_V_read_3 = read i166 @_ssdm_op_Read.ap_auto.i166, i166 %x_V_read"   --->   Operation 13 'read' 'x_V_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i_9_loc = alloca i64 1"   --->   Operation 14 'alloca' 'i_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i_loc = alloca i64 1"   --->   Operation 15 'alloca' 'i_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%store_ln75 = store i166 1, i166 %z_V_write_assign" [gf2_arithmetic.cpp:75]   --->   Operation 16 'store' 'store_ln75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln75 = store i166 0, i166 %g_V" [gf2_arithmetic.cpp:75]   --->   Operation 17 'store' 'store_ln75' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln75 = store i166 11692013098647223345629478661730264157247460344009, i166 %v_V_1" [gf2_arithmetic.cpp:75]   --->   Operation 18 'store' 'store_ln75' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%store_ln75 = store i166 %x_V_read_3, i166 %u_V_2" [gf2_arithmetic.cpp:75]   --->   Operation 19 'store' 'store_ln75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln75 = br void" [gf2_arithmetic.cpp:75]   --->   Operation 20 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.82>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%u_V_3 = load i166 %u_V_2"   --->   Operation 21 'load' 'u_V_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (3.82ns)   --->   "%icmp_ln1068 = icmp_eq  i166 %u_V_3, i166 1"   --->   Operation 22 'icmp' 'icmp_ln1068' <Predicate = true> <Delay = 3.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %icmp_ln1068, void %codeRepl, void" [gf2_arithmetic.cpp:75]   --->   Operation 23 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%z_V_write_assign_load = load i166 %z_V_write_assign" [gf2_arithmetic.cpp:88]   --->   Operation 24 'load' 'z_V_write_assign_load' <Predicate = (icmp_ln1068)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%ret_ln88 = ret i166 %z_V_write_assign_load" [gf2_arithmetic.cpp:88]   --->   Operation 25 'ret' 'ret_ln88' <Predicate = (icmp_ln1068)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.57>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%v_V_1_load = load i166 %v_V_1"   --->   Operation 26 'load' 'v_V_1_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [2/2] (5.57ns)   --->   "%call_ln0 = call void @bf_inv_Pipeline_VITIS_LOOP_25_1, i166 %u_V_3, i16 %i_loc"   --->   Operation 27 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 28 [2/2] (5.57ns)   --->   "%call_ln0 = call void @bf_inv_Pipeline_VITIS_LOOP_25_18, i166 %v_V_1_load, i16 %i_9_loc"   --->   Operation 28 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 5.57>
ST_4 : Operation 29 [1/2] (5.57ns)   --->   "%call_ln0 = call void @bf_inv_Pipeline_VITIS_LOOP_25_1, i166 %u_V_3, i16 %i_loc"   --->   Operation 29 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 30 [1/2] (5.57ns)   --->   "%call_ln0 = call void @bf_inv_Pipeline_VITIS_LOOP_25_18, i166 %v_V_1_load, i16 %i_9_loc"   --->   Operation 30 'call' 'call_ln0' <Predicate = true> <Delay = 5.57> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 7.04>
ST_5 : Operation 31 [1/1] (0.00ns)   --->   "%i_loc_load = load i16 %i_loc"   --->   Operation 31 'load' 'i_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 32 [1/1] (0.00ns)   --->   "%i_9_loc_load = load i16 %i_9_loc"   --->   Operation 32 'load' 'i_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 33 [1/1] (2.07ns)   --->   "%add_ln28 = add i16 %i_loc_load, i16 1" [gf2_arithmetic.cpp:28]   --->   Operation 33 'add' 'add_ln28' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i16 %add_ln28" [gf2_arithmetic.cpp:28]   --->   Operation 34 'zext' 'zext_ln28' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (2.07ns)   --->   "%add_ln28_1 = add i16 %i_9_loc_load, i16 1" [gf2_arithmetic.cpp:28]   --->   Operation 35 'add' 'add_ln28_1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i16 %add_ln28_1" [gf2_arithmetic.cpp:76]   --->   Operation 36 'zext' 'zext_ln76' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (2.07ns)   --->   "%j = sub i17 %zext_ln28, i17 %zext_ln76" [gf2_arithmetic.cpp:76]   --->   Operation 37 'sub' 'j' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %j, i32 16" [gf2_arithmetic.cpp:77]   --->   Operation 38 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (2.10ns)   --->   "%sub_ln80 = sub i17 0, i17 %j" [gf2_arithmetic.cpp:80]   --->   Operation 39 'sub' 'sub_ln80' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 40 [1/1] (0.78ns)   --->   "%j_1 = select i1 %tmp, i17 %sub_ln80, i17 %j" [gf2_arithmetic.cpp:77]   --->   Operation 40 'select' 'j_1' <Predicate = true> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %j_1, i32 16"   --->   Operation 41 'bitselect' 'tmp_11' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 7.01>
ST_6 : Operation 42 [1/1] (0.00ns)   --->   "%g_V_load = load i166 %g_V" [gf2_arithmetic.cpp:77]   --->   Operation 42 'load' 'g_V_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 43 [1/1] (0.00ns)   --->   "%z_V_write_assign_load_1 = load i166 %z_V_write_assign" [gf2_arithmetic.cpp:77]   --->   Operation 43 'load' 'z_V_write_assign_load_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 44 [1/1] (1.27ns)   --->   "%select_ln77 = select i1 %tmp, i166 %g_V_load, i166 %z_V_write_assign_load_1" [gf2_arithmetic.cpp:77]   --->   Operation 44 'select' 'select_ln77' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 45 [1/1] (1.27ns)   --->   "%g_V_1 = select i1 %tmp, i166 %z_V_write_assign_load_1, i166 %g_V_load" [gf2_arithmetic.cpp:77]   --->   Operation 45 'select' 'g_V_1' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 46 [1/1] (1.27ns)   --->   "%v_V = select i1 %tmp, i166 %u_V_3, i166 %v_V_1_load" [gf2_arithmetic.cpp:77]   --->   Operation 46 'select' 'v_V' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 47 [1/1] (1.27ns)   --->   "%u_V = select i1 %tmp, i166 %v_V_1_load, i166 %u_V_3" [gf2_arithmetic.cpp:77]   --->   Operation 47 'select' 'u_V' <Predicate = true> <Delay = 1.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 48 [1/1] (0.00ns)   --->   "%sext_ln1691 = sext i17 %j_1"   --->   Operation 48 'sext' 'sext_ln1691' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln1691 = zext i32 %sext_ln1691"   --->   Operation 49 'zext' 'zext_ln1691' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node r)   --->   "%shl_ln1691 = shl i166 %v_V, i166 %zext_ln1691"   --->   Operation 50 'shl' 'shl_ln1691' <Predicate = (!tmp_11)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 51 [1/1] (2.10ns)   --->   "%sub_ln1691 = sub i17 0, i17 %j_1"   --->   Operation 51 'sub' 'sub_ln1691' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "%sext_ln1691_1 = sext i17 %sub_ln1691"   --->   Operation 52 'sext' 'sext_ln1691_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln1691_1 = zext i32 %sext_ln1691_1"   --->   Operation 53 'zext' 'zext_ln1691_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node r)   --->   "%ashr_ln1691 = ashr i166 %v_V, i166 %zext_ln1691_1"   --->   Operation 54 'ashr' 'ashr_ln1691' <Predicate = (tmp_11)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 55 [1/1] (4.90ns) (out node of the LUT)   --->   "%r = select i1 %tmp_11, i166 %ashr_ln1691, i166 %shl_ln1691"   --->   Operation 55 'select' 'r' <Predicate = true> <Delay = 4.90> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node r_1)   --->   "%shl_ln1691_1 = shl i166 %g_V_1, i166 %zext_ln1691"   --->   Operation 56 'shl' 'shl_ln1691_1' <Predicate = (!tmp_11)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node r_1)   --->   "%ashr_ln1691_1 = ashr i166 %g_V_1, i166 %zext_ln1691_1"   --->   Operation 57 'ashr' 'ashr_ln1691_1' <Predicate = (tmp_11)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 58 [1/1] (4.90ns) (out node of the LUT)   --->   "%r_1 = select i1 %tmp_11, i166 %ashr_ln1691_1, i166 %shl_ln1691_1"   --->   Operation 58 'select' 'r_1' <Predicate = true> <Delay = 4.90> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 59 [1/1] (1.58ns)   --->   "%store_ln75 = store i166 %g_V_1, i166 %g_V" [gf2_arithmetic.cpp:75]   --->   Operation 59 'store' 'store_ln75' <Predicate = true> <Delay = 1.58>
ST_6 : Operation 60 [1/1] (1.58ns)   --->   "%store_ln75 = store i166 %v_V, i166 %v_V_1" [gf2_arithmetic.cpp:75]   --->   Operation 60 'store' 'store_ln75' <Predicate = true> <Delay = 1.58>

State 7 <SV = 6> <Delay = 4.15>
ST_7 : Operation 61 [2/2] (4.15ns)   --->   "%call_ln77 = call void @bf_inv_Pipeline_VITIS_LOOP_33_1, i166 %u_V, i166 %r, i166 %u_V_2" [gf2_arithmetic.cpp:77]   --->   Operation 61 'call' 'call_ln77' <Predicate = true> <Delay = 4.15> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 62 [2/2] (4.15ns)   --->   "%call_ln77 = call void @bf_inv_Pipeline_VITIS_LOOP_33_19, i166 %select_ln77, i166 %r_1, i166 %z_V_write_assign" [gf2_arithmetic.cpp:77]   --->   Operation 62 'call' 'call_ln77' <Predicate = true> <Delay = 4.15> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "%specloopname_ln23 = specloopname void @_ssdm_op_SpecLoopName, void @empty_21" [gf2_arithmetic.cpp:23]   --->   Operation 63 'specloopname' 'specloopname_ln23' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 64 [1/2] (0.00ns)   --->   "%call_ln77 = call void @bf_inv_Pipeline_VITIS_LOOP_33_1, i166 %u_V, i166 %r, i166 %u_V_2" [gf2_arithmetic.cpp:77]   --->   Operation 64 'call' 'call_ln77' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 65 [1/2] (0.00ns)   --->   "%call_ln77 = call void @bf_inv_Pipeline_VITIS_LOOP_33_19, i166 %select_ln77, i166 %r_1, i166 %z_V_write_assign" [gf2_arithmetic.cpp:77]   --->   Operation 65 'call' 'call_ln77' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln75 = br void" [gf2_arithmetic.cpp:75]   --->   Operation 66 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('g.V') [4]  (0 ns)
	'store' operation ('store_ln75', gf2_arithmetic.cpp:75) of constant 0 on local variable 'g.V' [10]  (1.59 ns)

 <State 2>: 3.82ns
The critical path consists of the following:
	'load' operation ('u.V') on local variable 'u.V' [15]  (0 ns)
	'icmp' operation ('icmp_ln1068') [16]  (3.82 ns)

 <State 3>: 5.58ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'bf_inv_Pipeline_VITIS_LOOP_25_1' [23]  (5.58 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'bf_inv_Pipeline_VITIS_LOOP_25_1' [23]  (5.58 ns)

 <State 5>: 7.04ns
The critical path consists of the following:
	'load' operation ('i_loc_load') on local variable 'i_loc' [24]  (0 ns)
	'add' operation ('add_ln28', gf2_arithmetic.cpp:28) [27]  (2.08 ns)
	'sub' operation ('j', gf2_arithmetic.cpp:76) [31]  (2.08 ns)
	'sub' operation ('sub_ln80', gf2_arithmetic.cpp:80) [33]  (2.11 ns)
	'select' operation ('j', gf2_arithmetic.cpp:77) [38]  (0.781 ns)

 <State 6>: 7.02ns
The critical path consists of the following:
	'sub' operation ('sub_ln1691') [43]  (2.11 ns)
	'ashr' operation ('ashr_ln1691') [46]  (0 ns)
	'select' operation ('r') [47]  (4.91 ns)

 <State 7>: 4.15ns
The critical path consists of the following:
	'call' operation ('call_ln77', gf2_arithmetic.cpp:77) to 'bf_inv_Pipeline_VITIS_LOOP_33_1' [48]  (4.15 ns)

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
